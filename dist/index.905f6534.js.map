{"mappings":"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A,CAAK,CAAA,CAAE,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,EAAA,GACnD,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,EAAA,GACnD,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,CAAA,GACnD,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,CAAA,GACnD,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,CAAA,GACnD,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,CAAA,GACnD,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,CAAA,GACnD,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,CAAA,GACnD,EAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,CAAA,GACnD,EAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-3319127fcbe8e1ad.js","game.js","kaboom.js","node_modules/kaboom/dist/kaboom.mjs","node_modules/kaboom/src/utils.ts","node_modules/kaboom/src/math.ts","node_modules/kaboom/src/fps.ts","node_modules/kaboom/src/timer.ts","node_modules/kaboom/src/kaboom.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","scenes/MenuScene.js","scenes/GameScene.js","utils/textFunctions.js","map/map.js","utils/dialogFunction.js","scenes/FinalScene.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"f1da0e86905f6534\";\"use strict\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function accept(fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function dispose(fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // $FlowFixMe\n\n  ws.onmessage = function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      var assets = data.assets.filter(function (asset) {\n        return asset.envHash === HMR_ENV_HASH;\n      }); // Handle HMR Update\n\n      var handled = assets.every(function (asset) {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear();\n        assets.forEach(function (asset) {\n          hmrApply(module.bundle.root, asset);\n        });\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      var _iterator = _createForOfIteratorHelper(data.diagnostics.ansi),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var ansiDiagnostic = _step.value;\n          var stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n          console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  var errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  var _iterator2 = _createForOfIteratorHelper(diagnostics),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var diagnostic = _step2.value;\n      var stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;\n      errorHTML += \"\\n      <div>\\n        <div style=\\\"font-size: 18px; font-weight: bold; margin-top: 20px;\\\">\\n          \\uD83D\\uDEA8 \".concat(diagnostic.message, \"\\n        </div>\\n        <pre>\").concat(stack, \"</pre>\\n        <div>\\n          \").concat(diagnostic.hints.map(function (hint) {\n        return '<div>💡 ' + hint + '</div>';\n      }).join(''), \"\\n        </div>\\n        \").concat(diagnostic.documentation ? \"<div>\\uD83D\\uDCDD <a style=\\\"color: violet\\\" href=\\\"\".concat(diagnostic.documentation, \"\\\" target=\\\"_blank\\\">Learn more</a></div>\") : '', \"\\n      </div>\\n    \");\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(window.location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    var deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        var oldDeps = modules[asset.id][1];\n\n        for (var dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            var id = oldDeps[dep];\n            var parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      var fn = new Function('require', 'module', 'exports', asset.output);\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    var deps = modules[id][1];\n    var orphans = [];\n\n    for (var dep in deps) {\n      var parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(function (id) {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  var parents = getParents(module.bundle.root, id);\n  var accepted = false;\n\n  while (parents.length > 0) {\n    var v = parents.shift();\n    var a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      var p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push.apply(parents, _toConsumableArray(p));\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}","import k from \"./kaboom\";\r\nimport { MenuScene } from './scenes/MenuScene';\r\n\r\nconst {\r\n  scene,\r\n  go,\r\n  loadSprite,\r\n  loadSpriteAtlas,\r\n} = k;\r\n\r\n// Keyboard arrows load\r\nloadSprite('arrow-up', 'https://i.imgur.com/SF656CE.png')\r\nloadSprite('arrow-down', 'https://i.imgur.com/MaIRmau.png')\r\nloadSprite('arrow-left', 'https://i.imgur.com/EjWmZs8.png')\r\nloadSprite('arrow-right', 'https://i.imgur.com/GeZiBRT.png')\r\n\r\n// Character load\r\nloadSpriteAtlas('https://i.imgur.com/ilrhTPm.png', {\r\n  'faune': {\r\n    x: 0,\r\n    y: 0,\r\n    width: 816,\r\n    height: 34,\r\n    sliceX: 24,\r\n    anims: {\r\n      'walk-down': { from:0, to: 7, loop: true, speed: 15},\r\n      'walk-side': { from:8, to: 15, loop: true, speed: 15},\r\n      'walk-up': { from:16, to: 23, loop: true, speed: 15},\r\n      'idle-down': { from:1, to: 1},\r\n      'idle-side': { from:10, to: 10},\r\n      'idle-up': { from:19, to: 19},\r\n    }\r\n  }\r\n})\r\n\r\n// Map load\r\nloadRoot('https://i.imgur.com/')\r\nloadSprite('bg', \"xBEU9c3.png\")\r\nloadSprite('menu-bg', \"mA2na29.png\")\r\nloadSprite('grass-1', 'T9tpXI4.png')\r\nloadSprite('grass-2', 'wzBKZcm.png')\r\nloadSprite('grass-3', 'zm2ZwLa.png')\r\nloadSprite('grass-4', 'EQyXHzF.png')\r\nloadSprite('grass-2', 'wzBKZcm.png')\r\nloadSprite('tall-grass-1', 'rCoOsRa.png')\r\nloadSprite('tall-grass-2', 'pSXKOGT.png')\r\nloadSprite('tree-1', 'UOfA0pM.png')\r\nloadSprite('tree-2', '2GQojWF.png')\r\nloadSprite('tree-3', 'kaq8Cq5.png')\r\nloadSprite('tree-4', 'UFHFl1h.png')\r\nloadSprite('tree-5', 'OlhP0OY.png')\r\nloadSprite('flower-1', 'Yzxr9Jr.png')\r\nloadSprite('flower-2', 'cy7pfxE.png')\r\nloadSprite('flower-3', 'Nr43Xyq.png')\r\nloadSprite('flower-4', 'tkokRhJ.png')\r\nloadSprite('mushroom-1', 'fUaiv4U.png')\r\n\r\nloadSprite('tiles-1', 'kjiVSiw.png')\r\nloadSprite('tiles-2', 'kjiVSiw.png')\r\n\r\nloadSprite('wall-left', 'PhbwlZI.png')\r\nloadSprite('wall-right', 'qNJFgeA.png')\r\nloadSprite('wall-top-left', 'j2gzIbx.png')\r\nloadSprite('wall-top-right', 'LTUQhS4.png')\r\nloadSprite('wall-top', 'oqMjbxr.png')\r\nloadSprite('wall-bottom', 'oqMjbxr.png')\r\nloadSprite('wall-bottom-left', 'OkRvV6v.png')\r\nloadSprite('wall-bottom-right', '5G4Slsi.png')\r\nloadSprite('fence-1', 'QKLh2QM.png')\r\nloadSprite('fence-middle-connect', 'ERfxMOn.png')\r\nloadSprite('fence-bottom-left', '6aslZqt.png')\r\nloadSprite('fence-bottom-right', 'w8ZBIBh.png')\r\nloadSprite('fence-left-connect', 'HhNYOyv.png')\r\nloadSprite('fence-left-end', 'TnPeYsc.png')\r\nloadSprite('fence-top-end', 'OGMRp1y.png')\r\nloadSprite('fence-top-left', 'sYpMQvb.png')\r\nloadSprite('fence-top-right', 'gBZi7ze.png')\r\nloadSprite('fence-right-end', 'mzHvCbp.png')\r\nloadSprite('kaboom', 'o9WizfI.png')\r\nloadSprite('bucket', 'CaSTkhF.png')\r\nloadSprite('wood-cut', 'LI1pEvj.png')\r\nloadSprite('wood-pile', 'nhJPa8L.png')\r\nloadSprite('down-stairs', 'G4kZK5G.png')\r\nloadSprite('teddy', 'bC25cuC.png')\r\nloadSprite('pumpkin', 'dBzZLg5.png')\r\n\r\n//TABLE\r\nloadSprite('table-1', 'QPwAagu.png')\r\nloadSprite('table-2', '6y9ciWy.png')\r\nloadSprite('table-3', 'ofURkvi.png')\r\nloadSprite('table-4', 'kBnpuBK.png')\r\n\r\n//ROOF-1\r\nloadSprite('roof-1', 'c1lJtSK.png')\r\nloadSprite('roof-2', '2wV7dDl.png')\r\n\r\n//FLOOR\r\nloadSprite('floor-1', 'rz0gmUd.png')\r\nloadSprite('floor-2', 'AHmV9Yw.png')\r\nloadSprite('floor-3', 'qU8qiOJ.png')\r\n\r\n//GEMS\r\nloadSprite('gem-1', 'NJzgV3c.png')\r\nloadSprite('gem-2', 'yTKYP7A.png')\r\nloadSprite('gem-3', 'zHjxHh5.png')\r\nloadSprite('gem-4', 'VMWH4be.png')\r\nloadSprite('gem-5', 'ctS0f09.png')\r\nloadSprite('gem-6', 'qOYZq7y.png')\r\nloadSprite('gem-7', '0e8PleJ.png')\r\nloadSprite('gem-8', 'UU6tVJF.png')\r\nloadSprite('gem-9', 'fRcJKJt.png')\r\nloadSprite('gem-10', '0pgnZRE.png')\r\nloadSprite('gem-11', 'qDP8vw1.png')\r\nloadSprite('gem-12', '2W3TzuB.png')\r\n\r\n//WALL\r\nloadSprite('house-floor-1', 'TWa6h7y.png')\r\n\r\n//TREE\r\nloadSprite('tree-left-top-1', 'GrXDM5P.png')\r\nloadSprite('tree-left-bottom-1', 'A5YlEvj.png')\r\nloadSprite('tree-right-top-1', 'yTHXGcr.png')\r\nloadSprite('tree-right-bottom-1', 'GIDxRYK.png')\r\n\r\n//POTIONS\r\nloadSprite('potion-white', 'pQaO9jf.png')\r\nloadSprite('potion-blue', 'XGMFw7M.png')\r\nloadSprite('potion-brown', 'sc8fj1t.png')\r\nloadSprite('potion-purple', '1Zkrupo.png')\r\nloadSprite('potion-orange', 'P9iyFoJ.png')\r\nloadSprite('potion-beige', '9uA8cJS.png')\r\nloadSprite('potion-green', 'lJkAlhD.png')\r\n\r\n//FOUNTAIN\r\nloadSprite('fountain-b-right', 'Zu0vLPC.png')\r\nloadSprite('fountain-b-left', 'rcWd830.png')\r\nloadSprite('fountain-b-center', 'AjQEOYW.png')\r\nloadSprite('fountain-m-left', 'DRIOQCT.png')\r\nloadSprite('fountain-m-right', 'PU8VRXV.png')\r\nloadSprite('fountain-m-center', '0uZx7M7.png')\r\nloadSprite('fountain-t-left', 'ZS3Gg1w.png')\r\nloadSprite('fountain-t-right', 'hi7bqdC.png')\r\nloadSprite('fountain-t-center', 'QAxPK4C.png')\r\n\r\nloadSprite('full-bag', '9DKAnQZ.png')\r\nloadSprite('bag-of-greens', 'Lqah7GH.png')\r\nloadSprite('bag-of-apples', 'i9o72Pn.png')\r\nloadSprite('bag-of-mushrooms', 'kY9Up2J.png')\r\nloadSprite('empty-bag', 'MEQhK0G.png')\r\nloadSprite('wooden-barrel', 'PDwRAxj.png')\r\nloadSprite('vase-1', '9cuEcDN.png')\r\nloadSprite('vase-2', 'ilzidZa.png')\r\nloadSprite('simple-box', 'jVIp5td.png')\r\n\r\n// Menu border\r\nloadSprite(\"border\", \"g3Y69Nq.png\");\r\n\r\n// Floor\r\nloadSpriteAtlas(\"lu5PJXh.png\", {\r\n\t\"floor\": {\r\n\t\t\"x\": 16,\r\n\t\t\"y\": 64,\r\n\t\t\"width\": 48,\r\n\t\t\"height\": 48,\r\n\t\t\"sliceX\": 3,\r\n\t\t\"sliceY\": 3\r\n\t},\r\n\t\"chest\": {\r\n\t\t\"x\": 304,\r\n\t\t\"y\": 304,\r\n\t\t\"width\": 48,\r\n\t\t\"height\": 16,\r\n\t\t\"sliceX\": 3,\r\n\t\t\"anims\": {\r\n\t\t\t\"open\": {\r\n\t\t\t\t\"from\": 0,\r\n\t\t\t\t\"to\": 2,\r\n\t\t\t\t\"speed\": 20,\r\n\t\t\t\t\"loop\": false\r\n\t\t\t},\r\n\t\t\t\"close\": {\r\n\t\t\t\t\"from\": 2,\r\n\t\t\t\t\"to\": 0,\r\n\t\t\t\t\"speed\": 20,\r\n\t\t\t\t\"loop\": false\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n  \"sword\": {\r\n\t\t\"x\": 322,\r\n\t\t\"y\": 81,\r\n\t\t\"width\": 12,\r\n\t\t\"height\": 30\r\n\t},\r\n})\r\n\r\nloadSprite('kaboom', 'o9WizfI.png')\r\n\r\ngo('menu-scene', MenuScene)","import kaboom from \"kaboom\";\r\n\r\nexport const k = kaboom({\r\n  scale: 2,\r\n  background: [0,0,0,1],\r\n  global: true,\r\n  debug: true,\r\n})\r\n\r\nexport default k",null,"export class IDList<T> extends Map<number, T> {\n\t_lastID: number;\n\tconstructor(...args) {\n\t\tsuper(...args);\n\t\tthis._lastID = 0;\n\t}\n\tpush(v: T): number {\n\t\tconst id = this._lastID;\n\t\tthis.set(id, v);\n\t\tthis._lastID++;\n\t\treturn id;\n\t}\n\tpushd(v: T): () => void {\n\t\tconst id = this.push(v);\n\t\treturn () => this.delete(id);\n\t}\n}\n\nexport function deepEq(o1: any, o2: any): boolean {\n\tconst t1 = typeof o1;\n\tconst t2 = typeof o2;\n\tif (t1 !== t2) {\n\t\treturn false;\n\t}\n\tif (t1 === \"object\" && t2 === \"object\") {\n\t\tconst k1 = Object.keys(o1);\n\t\tconst k2 = Object.keys(o2);\n\t\tif (k1.length !== k2.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (const k of k1) {\n\t\t\tconst v1 = o1[k];\n\t\t\tconst v2 = o2[k];\n\t\t\tif (!(typeof v1 === \"function\" && typeof v2 === \"function\")) {\n\t\t\t\tif (!deepEq(v1, v2)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\treturn o1 === o2;\n}\n\nexport function downloadURL(url: string, filename: string) {\n\tconst a = document.createElement(\"a\");\n\tdocument.body.appendChild(a);\n\ta.setAttribute(\"style\", \"display: none\");\n\ta.href = url;\n\ta.download = filename;\n\ta.click();\n\tdocument.body.removeChild(a);\n}\n\nexport function downloadBlob(blob: Blob, filename: string) {\n\tconst url = URL.createObjectURL(blob);\n\tdownloadURL(url, filename);\n\tURL.revokeObjectURL(url);\n}\n\nexport function isDataURL(str: string) {\n\treturn str.match(/^data:\\w+\\/\\w+;base64,.+/);\n}\n\nexport const uid = (() => {\n\tlet id = 0;\n\treturn () => id++;\n})();\n\nconst warned = new Set();\n\nexport function deprecateMsg(oldName: string, newName: string) {\n\tif (!warned.has(oldName)) {\n\t\twarned.add(oldName);\n\t\tconsole.warn(`${oldName} is deprecated. Use ${newName} instead.`);\n\t}\n}\n\nexport const deprecate = (oldName: string, newName: string, newFunc: (...args) => any) => (...args) => {\n\tdeprecateMsg(oldName, newName);\n\treturn newFunc(...args);\n};\n","import {\n\tVec4,\n\tPoint,\n\tPolygon,\n\tArea,\n} from \"./types\";\n\nimport {\n\tdeprecateMsg,\n} from \"./utils\";\n\nexport function deg2rad(deg: number): number {\n\treturn deg * Math.PI / 180;\n}\n\nexport function rad2deg(rad: number): number {\n\treturn rad * 180 / Math.PI;\n}\n\nexport function clamp(\n\tval: number,\n\tmin: number,\n\tmax: number,\n): number {\n\tif (min > max) {\n\t\treturn clamp(val, max, min);\n\t}\n\treturn Math.min(Math.max(val, min), max);\n}\n\nexport function lerp(\n\ta: number,\n\tb: number,\n\tt: number,\n): number {\n\treturn a + (b - a) * t;\n}\n\nexport function map(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn l2 + (v - l1) / (h1 - l1) * (h2 - l2);\n}\n\nexport function mapc(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn clamp(map(v, l1, h1, l2, h2), l2, h2);\n}\n\nexport class Vec2 {\n\tx: number = 0;\n\ty: number = 0;\n\tconstructor(x: number = 0, y: number = x) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\tstatic fromAngle(deg: number) {\n\t\tconst angle = deg2rad(deg);\n\t\treturn new Vec2(Math.cos(angle), Math.sin(angle));\n\t}\n\tstatic LEFT = new Vec2(-1, 0);\n\tstatic RIGHT = new Vec2(1, 0);\n\tstatic UP = new Vec2(0, -1);\n\tstatic DOWN = new Vec2(0, 1);\n\tclone(): Vec2 {\n\t\treturn new Vec2(this.x, this.y);\n\t}\n\tadd(...args): Vec2 {\n\t\tconst p2 = vec2(...args);\n\t\treturn new Vec2(this.x + p2.x, this.y + p2.y);\n\t}\n\tsub(...args): Vec2 {\n\t\tconst p2 = vec2(...args);\n\t\treturn new Vec2(this.x - p2.x, this.y - p2.y);\n\t}\n\tscale(...args): Vec2 {\n\t\tconst s = vec2(...args);\n\t\treturn new Vec2(this.x * s.x, this.y * s.y);\n\t}\n\tdist(...args): number {\n\t\tconst p2 = vec2(...args);\n\t\treturn Math.sqrt(\n\t\t\t(this.x - p2.x) * (this.x - p2.x)\n\t\t\t+ (this.y - p2.y) * (this.y - p2.y)\n\t\t);\n\t}\n\tlen(): number {\n\t\treturn this.dist(new Vec2(0, 0));\n\t}\n\tunit(): Vec2 {\n\t\treturn this.scale(1 / this.len());\n\t}\n\tnormal(): Vec2 {\n\t\treturn new Vec2(this.y, -this.x);\n\t}\n\tdot(p2: Vec2): number {\n\t\treturn this.x * p2.x + this.y * p2.y;\n\t}\n\tangle(...args): number {\n\t\tconst p2 = vec2(...args);\n\t\treturn rad2deg(Math.atan2(this.y - p2.y, this.x - p2.x));\n\t}\n\tlerp(p2: Vec2, t: number): Vec2 {\n\t\treturn new Vec2(lerp(this.x, p2.x, t), lerp(this.y, p2.y, t));\n\t}\n\ttoFixed(n: number): Vec2 {\n\t\treturn new Vec2(Number(this.x.toFixed(n)), Number(this.y.toFixed(n)));\n\t}\n\teq(other: Vec2): boolean {\n\t\treturn this.x === other.x && this.y === other.y;\n\t}\n\ttoString(): string {\n\t\treturn `(${this.x.toFixed(2)}, ${this.y.toFixed(2)})`;\n\t}\n\tstr(): string {\n\t\treturn this.toString();\n\t}\n}\n\nexport function vec2(...args): Vec2 {\n\tif (args.length === 1) {\n\t\tif (args[0] instanceof Vec2) {\n\t\t\treturn vec2(args[0].x, args[0].y);\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 2) {\n\t\t\treturn vec2.apply(null, args[0]);\n\t\t}\n\t}\n\treturn new Vec2(...args);\n}\n\nexport class Vec3 {\n\tx: number = 0;\n\ty: number = 0;\n\tz: number = 0;\n\tconstructor(x: number, y: number, z: number) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t}\n\txy() {\n\t\treturn vec2(this.x, this.y);\n\t}\n}\n\nexport const vec3 = (x, y, z) => new Vec3(x, y, z);\n\nexport class Color {\n\n\tr: number = 255;\n\tg: number = 255;\n\tb: number = 255;\n\n\tconstructor(r: number, g: number, b: number) {\n\t\tthis.r = clamp(r, 0, 255);\n\t\tthis.g = clamp(g, 0, 255);\n\t\tthis.b = clamp(b, 0, 255);\n\t}\n\n\tstatic fromArray(arr: number[]) {\n\t\treturn new Color(arr[0], arr[1], arr[2])\n\t}\n\n\tstatic RED = rgb(255, 0, 0);\n\tstatic GREEN = rgb(0, 255, 0);\n\tstatic BLUE = rgb(0, 0, 255);\n\tstatic YELLOW = rgb(255, 255, 0);\n\tstatic MAGENTA = rgb(255, 0, 255);\n\tstatic CYAN = rgb(0, 255, 255);\n\tstatic WHITE = rgb(255, 255, 255);\n\tstatic BLACK = rgb(0, 0, 0);\n\n\tclone(): Color {\n\t\treturn new Color(this.r, this.g, this.b);\n\t}\n\n\tlighten(a: number): Color {\n\t\treturn new Color(this.r + a, this.g + a, this.b + a);\n\t}\n\n\tdarken(a: number): Color {\n\t\treturn this.lighten(-a);\n\t}\n\n\tinvert(): Color {\n\t\treturn new Color(255 - this.r, 255 - this.g, 255 - this.b);\n\t}\n\n\tmult(other: Color): Color {\n\t\treturn new Color(\n\t\t\tthis.r * other.r / 255,\n\t\t\tthis.g * other.g / 255,\n\t\t\tthis.b * other.b / 255,\n\t\t);\n\t}\n\n\teq(other: Color): boolean {\n\t\treturn this.r === other.r\n\t\t\t&& this.g === other.g\n\t\t\t&& this.b === other.b\n\t\t\t;\n\t}\n\n\tstr(): string {\n\t\tdeprecateMsg(\"str()\", \"toString()\");\n\t\treturn `(${this.r}, ${this.g}, ${this.b})`;\n\t}\n\n\ttoString(): string {\n\t\treturn `(${this.r}, ${this.g}, ${this.b})`;\n\t}\n\n\tstatic fromHSL(h: number, s: number, l: number) {\n\n\t\tif (s == 0){\n\t\t\treturn rgb(255 * l, 255 * l, 255 * l);\n\t\t}\n\n\t\tconst hue2rgb = (p, q, t) => {\n\t\t\tif (t < 0) t += 1;\n\t\t\tif (t > 1) t -= 1;\n\t\t\tif (t < 1 / 6) return p + (q - p) * 6 * t;\n\t\t\tif (t < 1 / 2) return q;\n\t\t\tif (t < 2 / 3) return p + (q - p) * (2/3 - t) * 6;\n\t\t\treturn p;\n\t\t}\n\n\t\tconst q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tconst p = 2 * l - q;\n\t\tconst r = hue2rgb(p, q, h + 1 / 3);\n\t\tconst g = hue2rgb(p, q, h);\n\t\tconst b = hue2rgb(p, q, h - 1 / 3);\n\n\t\treturn new Color(Math.round(r * 255), Math.round(g * 255), Math.round(b * 255));\n\n\t}\n\n}\n\nexport function rgb(...args): Color {\n\tif (args.length === 0) {\n\t\treturn new Color(255, 255, 255);\n\t} else if (args.length === 1) {\n\t\tif (args[0] instanceof Color) {\n\t\t\treturn args[0].clone();\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 3) {\n\t\t\treturn Color.fromArray(args[0]);\n\t\t}\n\t}\n\t// @ts-ignore\n\treturn new Color(...args);\n}\n\nexport const hsl2rgb = (h, s, l) => Color.fromHSL(h, s, l);\n\nexport class Quad {\n\tx: number = 0;\n\ty: number = 0;\n\tw: number = 1;\n\th: number = 1;\n\tconstructor(x: number, y: number, w: number, h: number) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.w = w;\n\t\tthis.h = h;\n\t}\n\tscale(other: Quad): Quad {\n\t\treturn new Quad(\n\t\t\tthis.x + this.w * other.x,\n\t\t\tthis.y + this.h * other.y,\n\t\t\tthis.w * other.w,\n\t\t\tthis.h * other.h\n\t\t);\n\t}\n\tclone(): Quad {\n\t\treturn new Quad(this.x, this.y, this.w, this.h);\n\t}\n\teq(other: Quad): boolean {\n\t\treturn this.x === other.x\n\t\t\t&& this.y === other.y\n\t\t\t&& this.w === other.w\n\t\t\t&& this.h === other.h;\n\t}\n\ttoString(): string {\n\t\treturn `quad(${this.x}, ${this.y}, ${this.w}, ${this.h})`;\n\t}\n}\n\nexport function quad(x: number, y: number, w: number, h: number): Quad {\n\treturn new Quad(x, y, w, h);\n}\n\nexport class Mat4 {\n\n\tm: number[] = [\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1,\n\t];\n\n\tconstructor(m?: number[]) {\n\t\tif (m) {\n\t\t\tthis.m = m;\n\t\t}\n\t}\n\n\tclone(): Mat4 {\n\t\treturn new Mat4(this.m);\n\t};\n\n\tmult(other: Mat4): Mat4 {\n\n\t\tconst out = [];\n\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\tout[i * 4 + j] =\n\t\t\t\t\tthis.m[0 * 4 + j] * other.m[i * 4 + 0] +\n\t\t\t\t\tthis.m[1 * 4 + j] * other.m[i * 4 + 1] +\n\t\t\t\t\tthis.m[2 * 4 + j] * other.m[i * 4 + 2] +\n\t\t\t\t\tthis.m[3 * 4 + j] * other.m[i * 4 + 3];\n\t\t\t}\n\t\t}\n\n\t\treturn new Mat4(out);\n\n\t}\n\n\tmultVec4(p: Vec4): Vec4 {\n\t\treturn {\n\t\t\tx: p.x * this.m[0] + p.y * this.m[4] + p.z * this.m[8] + p.w * this.m[12],\n\t\t\ty: p.x * this.m[1] + p.y * this.m[5] + p.z * this.m[9] + p.w * this.m[13],\n\t\t\tz: p.x * this.m[2] + p.y * this.m[6] + p.z * this.m[10] + p.w * this.m[14],\n\t\t\tw: p.x * this.m[3] + p.y * this.m[7] + p.z * this.m[11] + p.w * this.m[15]\n\t\t};\n\t}\n\n\tmultVec3(p: Vec3): Vec3 {\n\t\tconst p4 = this.multVec4({\n\t\t\tx: p.x,\n\t\t\ty: p.y,\n\t\t\tz: p.z,\n\t\t\tw: 1.0,\n\t\t});\n\t\treturn vec3(p4.x, p4.y, p4.z);\n\t}\n\n\tmultVec2(p: Vec2): Vec2 {\n\t\treturn vec2(\n\t\t\tp.x * this.m[0] + p.y * this.m[4] + 0 * this.m[8] + 1 * this.m[12],\n\t\t\tp.x * this.m[1] + p.y * this.m[5] + 0 * this.m[9] + 1 * this.m[13],\n\t\t);\n\t}\n\n\tstatic translate(p: Vec2): Mat4 {\n\t\treturn new Mat4([\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\tp.x, p.y, 0, 1,\n\t\t]);\n\t}\n\n\tstatic scale(s: Vec2): Mat4 {\n\t\treturn new Mat4([\n\t\t\ts.x, 0, 0, 0,\n\t\t\t0, s.y, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t]);\n\t}\n\n\tstatic rotateX(a: number): Mat4 {\n\t\ta = deg2rad(-a);\n\t\treturn new Mat4([\n\t\t\t1, 0, 0, 0,\n\t\t\t0, Math.cos(a), -Math.sin(a), 0,\n\t\t\t0, Math.sin(a), Math.cos(a), 0,\n\t\t\t0, 0, 0, 1,\n\t\t]);\n\t}\n\n\tstatic rotateY(a: number): Mat4 {\n\t\ta = deg2rad(-a);\n\t\treturn new Mat4([\n\t\t\tMath.cos(a), 0, Math.sin(a), 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t-Math.sin(a), 0, Math.cos(a), 0,\n\t\t\t0, 0, 0, 1,\n\t\t]);\n\t}\n\n\tstatic rotateZ(a: number): Mat4 {\n\t\ta = deg2rad(-a);\n\t\treturn new Mat4([\n\t\t\tMath.cos(a), -Math.sin(a), 0, 0,\n\t\t\tMath.sin(a), Math.cos(a), 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t]);\n\t}\n\n\ttranslate(p: Vec2): Mat4 {\n\t\treturn this.mult(Mat4.translate(p));\n\t}\n\n\tscale(s: Vec2): Mat4 {\n\t\treturn this.mult(Mat4.scale(s));\n\t}\n\n\trotateX(a: number): Mat4 {\n\t\treturn this.mult(Mat4.rotateX(a));\n\t}\n\n\trotateY(a: number): Mat4 {\n\t\treturn this.mult(Mat4.rotateY(a));\n\t}\n\n\trotateZ(a: number): Mat4 {\n\t\treturn this.mult(Mat4.rotateZ(a));\n\t}\n\n\tinvert(): Mat4 {\n\n\t\tconst out = [];\n\n\t\tconst f00 = this.m[10] * this.m[15] - this.m[14] * this.m[11];\n\t\tconst f01 = this.m[9] * this.m[15] - this.m[13] * this.m[11];\n\t\tconst f02 = this.m[9] * this.m[14] - this.m[13] * this.m[10];\n\t\tconst f03 = this.m[8] * this.m[15] - this.m[12] * this.m[11];\n\t\tconst f04 = this.m[8] * this.m[14] - this.m[12] * this.m[10];\n\t\tconst f05 = this.m[8] * this.m[13] - this.m[12] * this.m[9];\n\t\tconst f06 = this.m[6] * this.m[15] - this.m[14] * this.m[7];\n\t\tconst f07 = this.m[5] * this.m[15] - this.m[13] * this.m[7];\n\t\tconst f08 = this.m[5] * this.m[14] - this.m[13] * this.m[6];\n\t\tconst f09 = this.m[4] * this.m[15] - this.m[12] * this.m[7];\n\t\tconst f10 = this.m[4] * this.m[14] - this.m[12] * this.m[6];\n\t\tconst f11 = this.m[5] * this.m[15] - this.m[13] * this.m[7];\n\t\tconst f12 = this.m[4] * this.m[13] - this.m[12] * this.m[5];\n\t\tconst f13 = this.m[6] * this.m[11] - this.m[10] * this.m[7];\n\t\tconst f14 = this.m[5] * this.m[11] - this.m[9] * this.m[7];\n\t\tconst f15 = this.m[5] * this.m[10] - this.m[9] * this.m[6];\n\t\tconst f16 = this.m[4] * this.m[11] - this.m[8] * this.m[7];\n\t\tconst f17 = this.m[4] * this.m[10] - this.m[8] * this.m[6];\n\t\tconst f18 = this.m[4] * this.m[9] - this.m[8] * this.m[5];\n\n\t\tout[0] = this.m[5] * f00 - this.m[6] * f01 + this.m[7] * f02;\n\t\tout[4] = -(this.m[4] * f00 - this.m[6] * f03 + this.m[7] * f04);\n\t\tout[8] = this.m[4] * f01 - this.m[5] * f03 + this.m[7] * f05;\n\t\tout[12] = -(this.m[4] * f02 - this.m[5] * f04 + this.m[6] * f05);\n\n\t\tout[1] = -(this.m[1] * f00 - this.m[2] * f01 + this.m[3] * f02);\n\t\tout[5] = this.m[0] * f00 - this.m[2] * f03 + this.m[3] * f04;\n\t\tout[9] = -(this.m[0] * f01 - this.m[1] * f03 + this.m[3] * f05);\n\t\tout[13] = this.m[0] * f02 - this.m[1] * f04 + this.m[2] * f05;\n\n\t\tout[2] = this.m[1] * f06 - this.m[2] * f07 + this.m[3] * f08;\n\t\tout[6] = -(this.m[0] * f06 - this.m[2] * f09 + this.m[3] * f10);\n\t\tout[10] = this.m[0] * f11 - this.m[1] * f09 + this.m[3] * f12;\n\t\tout[14] = -(this.m[0] * f08 - this.m[1] * f10 + this.m[2] * f12);\n\n\t\tout[3] = -(this.m[1] * f13 - this.m[2] * f14 + this.m[3] * f15);\n\t\tout[7] = this.m[0] * f13 - this.m[2] * f16 + this.m[3] * f17;\n\t\tout[11] = -(this.m[0] * f14 - this.m[1] * f16 + this.m[3] * f18);\n\t\tout[15] = this.m[0] * f15 - this.m[1] * f17 + this.m[2] * f18;\n\n\t\tconst det =\n\t\t\tthis.m[0] * out[0] +\n\t\t\tthis.m[1] * out[4] +\n\t\t\tthis.m[2] * out[8] +\n\t\t\tthis.m[3] * out[12];\n\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\tout[i * 4 + j] *= (1.0 / det);\n\t\t\t}\n\t\t}\n\n\t\treturn new Mat4(out);\n\n\t}\n\n\ttoString(): string {\n\t\treturn this.m.toString();\n\t}\n\n}\n\nexport function wave(lo: number, hi: number, t: number, f = Math.sin): number {\n\treturn lo + (f(t) + 1) / 2 * (hi - lo);\n}\n\n// basic ANSI C LCG\nconst A = 1103515245;\nconst C = 12345;\nconst M = 2147483648;\n\nexport class RNG {\n\tseed: number;\n\tconstructor(seed: number) {\n\t\tthis.seed = seed;\n\t}\n\tgen(...args) {\n\t\tif (args.length === 0) {\n\t\t\tthis.seed = (A * this.seed + C) % M;\n\t\t\treturn this.seed / M;\n\t\t} else if (args.length === 1) {\n\t\t\tif (typeof args[0] === \"number\") {\n\t\t\t\treturn this.gen(0, args[0]);\n\t\t\t} else if (args[0] instanceof Vec2) {\n\t\t\t\treturn this.gen(vec2(0, 0), args[0]);\n\t\t\t} else if (args[0] instanceof Color) {\n\t\t\t\treturn this.gen(rgb(0, 0, 0), args[0]);\n\t\t\t}\n\t\t} else if (args.length === 2) {\n\t\t\tif (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n\t\t\t\treturn (this.gen() * (args[1] - args[0])) + args[0];\n\t\t\t} else if (args[0] instanceof Vec2 && args[1] instanceof Vec2) {\n\t\t\t\treturn vec2(\n\t\t\t\t\tthis.gen(args[0].x, args[1].x),\n\t\t\t\t\tthis.gen(args[0].y, args[1].y),\n\t\t\t\t);\n\t\t\t} else if (args[0] instanceof Color && args[1] instanceof Color) {\n\t\t\t\treturn rgb(\n\t\t\t\t\tthis.gen(args[0].r, args[1].r),\n\t\t\t\t\tthis.gen(args[0].g, args[1].g),\n\t\t\t\t\tthis.gen(args[0].b, args[1].b),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n}\n\n// TODO: let user pass seed\nconst defRNG = new RNG(Date.now());\n\nexport function rng(seed: number): RNG {\n\tdeprecateMsg(\"rng()\", \"new RNG()\");\n\treturn new RNG(seed);\n}\n\nexport function randSeed(seed?: number): number {\n\tif (seed != null) {\n\t\tdefRNG.seed = seed;\n\t}\n\treturn defRNG.seed;\n}\n\nexport function rand(...args) {\n\t// @ts-ignore\n\treturn defRNG.gen(...args);\n}\n\n// TODO: randi() to return 0 / 1?\nexport function randi(...args) {\n\treturn Math.floor(rand(...args));\n}\n\nexport function chance(p: number): boolean {\n\treturn rand() <= p;\n}\n\nexport function choose<T>(list: T[]): T {\n\treturn list[randi(list.length)];\n}\n\n// TODO: better name\nexport function testRectRect2(r1: Rect, r2: Rect): boolean {\n\treturn r1.p2.x >= r2.p1.x\n\t\t&& r1.p1.x <= r2.p2.x\n\t\t&& r1.p2.y >= r2.p1.y\n\t\t&& r1.p1.y <= r2.p2.y;\n}\n\nexport function testRectRect(r1: Rect, r2: Rect): boolean {\n\treturn r1.p2.x > r2.p1.x\n\t\t&& r1.p1.x < r2.p2.x\n\t\t&& r1.p2.y > r2.p1.y\n\t\t&& r1.p1.y < r2.p2.y;\n}\n\n// TODO: better name\nexport function testLineLineT(l1: Line, l2: Line): number | null {\n\n\tif ((l1.p1.x === l1.p2.x && l1.p1.y === l1.p2.y) || (l2.p1.x === l2.p2.x && l2.p1.y === l2.p2.y)) {\n\t\treturn null;\n\t}\n\n\tconst denom = ((l2.p2.y - l2.p1.y) * (l1.p2.x - l1.p1.x) - (l2.p2.x - l2.p1.x) * (l1.p2.y - l1.p1.y));\n\n\t// parallel\n\tif (denom === 0) {\n\t\treturn null;\n\t}\n\n\tconst ua = ((l2.p2.x - l2.p1.x) * (l1.p1.y - l2.p1.y) - (l2.p2.y - l2.p1.y) * (l1.p1.x - l2.p1.x)) / denom;\n\tconst ub = ((l1.p2.x - l1.p1.x) * (l1.p1.y - l2.p1.y) - (l1.p2.y - l1.p1.y) * (l1.p1.x - l2.p1.x)) / denom;\n\n\t// is the intersection on the segments\n\tif (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\n\t\treturn null;\n\t}\n\n\treturn ua;\n\n}\n\nexport function testLineLine(l1: Line, l2: Line): Vec2 | null {\n\tconst t = testLineLineT(l1, l2);\n\tif (!t) return null;\n\treturn vec2(\n\t\tl1.p1.x + t * (l1.p2.x - l1.p1.x),\n\t\tl1.p1.y + t * (l1.p2.y - l1.p1.y),\n\t);\n}\n\nexport function testRectLine(r: Rect, l: Line): boolean {\n\tif (testRectPoint(r, l.p1) || testRectPoint(r, l.p2)) {\n\t\treturn true;\n\t}\n\treturn !!testLineLine(l, new Line(r.p1, vec2(r.p2.x, r.p1.y)))\n\t\t|| !!testLineLine(l, new Line(vec2(r.p2.x, r.p1.y), r.p2))\n\t\t|| !!testLineLine(l, new Line(r.p2, vec2(r.p1.x, r.p2.y)))\n\t\t|| !!testLineLine(l, new Line(vec2(r.p1.x, r.p2.y), r.p1));\n}\n\nexport function testRectPoint2(r: Rect, pt: Point): boolean {\n\treturn pt.x >= r.p1.x && pt.x <= r.p2.x && pt.y >= r.p1.y && pt.y <= r.p2.y;\n}\n\nexport function testRectPoint(r: Rect, pt: Point): boolean {\n\treturn pt.x > r.p1.x && pt.x < r.p2.x && pt.y > r.p1.y && pt.y < r.p2.y;\n}\n\nexport function testRectCircle(r: Rect, c: Circle): boolean {\n\tconst nx = Math.max(r.p1.x, Math.min(c.center.x, r.p2.x));\n\tconst ny = Math.max(r.p1.y, Math.min(c.center.y, r.p2.y));\n\tconst nearestPoint = vec2(nx, ny);\n\treturn nearestPoint.dist(c.center) <= c.radius;\n}\n\nexport function testRectPolygon(r: Rect, p: Polygon): boolean {\n\treturn testPolygonPolygon(p, [\n\t\tr.p1,\n\t\tvec2(r.p2.x, r.p1.y),\n\t\tr.p2,\n\t\tvec2(r.p1.x, r.p2.y),\n\t]);\n}\n\n// TODO\nexport function testLinePoint(l: Line, pt: Vec2): boolean {\n\treturn false;\n}\n\n// TODO\nexport function testLineCircle(l: Line, c: Circle): boolean {\n\treturn false;\n}\n\nexport function testLinePolygon(l: Line, p: Polygon): boolean {\n\n\t// test if line is inside\n\tif (testPolygonPoint(p, l.p1) || testPolygonPoint(p, l.p2)) {\n\t\treturn true;\n\t}\n\n\t// test each line\n\tfor (let i = 0; i < p.length; i++) {\n\t\tconst p1 = p[i];\n\t\tconst p2 = p[(i + 1) % p.length];\n\t\tif (testLineLine(l, { p1, p2 })) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n\n}\n\nexport function testCirclePoint(c: Circle, p: Point): boolean {\n\treturn c.center.dist(p) < c.radius;\n}\n\nexport function testCircleCircle(c1: Circle, c2: Circle): boolean {\n\treturn c1.center.dist(c2.center) < c1.radius + c2.radius;\n}\n\n// TODO\nexport function testCirclePolygon(c: Circle, p: Polygon): boolean {\n\treturn false;\n}\n\nexport function testPolygonPolygon(p1: Polygon, p2: Polygon): boolean {\n\tfor (let i = 0; i < p1.length; i++) {\n\t\tconst l = {\n\t\t\tp1: p1[i],\n\t\t\tp2: p1[(i + 1) % p1.length],\n\t\t};\n\t\tif (testLinePolygon(l, p2)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n// https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html\nexport function testPolygonPoint(p: Polygon, pt: Point): boolean {\n\n\tlet c = false;\n\n\tfor (let i = 0, j = p.length - 1; i < p.length; j = i++) {\n\t\tif (\n\t\t\t((p[i].y > pt.y) != (p[j].y > pt.y))\n\t\t\t&& (pt.x < (p[j].x - p[i].x) * (pt.y - p[i].y) / (p[j].y - p[i].y) + p[i].x)\n\t\t) {\n\t\t\tc = !c;\n\t\t}\n\t}\n\n\treturn c;\n\n}\n\nexport function testPointPoint(p1: Point, p2: Point): boolean {\n\treturn p1.eq(p2);\n}\n\nexport function testAreaRect(a: Area, r: Rect): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectRect(r, a);\n\t\tcase \"line\": return testRectLine(r, a);\n\t\tcase \"circle\": return testRectCircle(r, a);\n\t\tcase \"polygon\": return testRectPolygon(r, a.pts);\n\t\tcase \"point\": return testRectPoint(r, a.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nexport function testAreaLine(a: Area, l: Line): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectLine(a, l);\n\t\tcase \"line\": return Boolean(testLineLine(a, l));\n\t\tcase \"circle\": return testLineCircle(l, a);\n\t\tcase \"polygon\": return testLinePolygon(l, a.pts);\n\t\tcase \"point\": return testLinePoint(l, a.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nexport function testAreaCircle(a: Area, c: Circle): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectCircle(a, c);\n\t\tcase \"line\": return testLineCircle(a, c);\n\t\tcase \"circle\": return testCircleCircle(a, c);\n\t\tcase \"polygon\": return testCirclePolygon(c, a.pts);\n\t\tcase \"point\": return testCirclePoint(c, a.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nexport function testAreaPolygon(a: Area, p: Polygon): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectPolygon(a, p);\n\t\tcase \"line\": return testLinePolygon(a, p);\n\t\tcase \"circle\": return testCirclePolygon(a, p);\n\t\tcase \"polygon\": return testPolygonPolygon(p, a.pts);\n\t\tcase \"point\": return testPolygonPoint(p, a.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nexport function testAreaPoint(a: Area, p: Point): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectPoint(a, p);\n\t\tcase \"line\": return testLinePoint(a, p);\n\t\tcase \"circle\": return testCirclePoint(a, p);\n\t\tcase \"polygon\": return testPolygonPoint(a.pts, p);\n\t\tcase \"point\": return testPointPoint(a.pt, p);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nexport function testAreaArea(a1: Area, a2: Area): boolean {\n\tswitch (a2.shape) {\n\t\tcase \"rect\": return testAreaRect(a1, a2);\n\t\tcase \"line\": return testAreaLine(a1, a2);\n\t\tcase \"circle\": return testAreaCircle(a1, a2);\n\t\tcase \"polygon\": return testAreaPolygon(a1, a2.pts);\n\t\tcase \"point\": return testAreaPoint(a1, a2.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a2 as Area).shape}`);\n}\n\nexport function minkDiff(r1: Rect, r2: Rect): Rect {\n\treturn {\n\t\tp1: vec2(r1.p1.x - r2.p2.x, r1.p1.y - r2.p2.y),\n\t\tp2: vec2(r1.p2.x - r2.p1.x, r1.p2.y - r2.p1.y),\n\t};\n}\n\nexport class Line {\n\tp1: Vec2;\n\tp2: Vec2;\n\tconstructor(p1: Vec2, p2: Vec2) {\n\t\tthis.p1 = p1;\n\t\tthis.p2 = p2;\n\t}\n}\n\nexport class Rect {\n\tp1: Vec2;\n\tp2: Vec2;\n\tconstructor(p1: Vec2, p2: Vec2) {\n\t\tthis.p1 = p1;\n\t\tthis.p2 = p2;\n\t}\n}\n\nexport class Circle {\n\tcenter: Vec2;\n\tradius: number;\n\tconstructor(center: Vec2, radius: number) {\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\t}\n}\n","export default class FPSCounter {\n\n\tprivate buf: number[] = [];\n\tprivate timer: number = 0;\n\tfps: number = 0;\n\n\ttick(dt: number) {\n\n\t\tthis.buf.push(1 / dt);\n\t\tthis.timer += dt;\n\n\t\tif (this.timer >= 1) {\n\t\t\tthis.timer = 0;\n\t\t\tthis.fps = Math.round(this.buf.reduce((a, b) => a + b) / this.buf.length);\n\t\t\tthis.buf = [];\n\t\t}\n\n\t}\n\n}\n","export default class Timer {\n\n\ttime: number\n\taction: () => void\n\tfinished: boolean = false\n\tpaused: boolean = false\n\n\tconstructor(time: number, action: () => void) {\n\t\tthis.time = time;\n\t\tthis.action = action;\n\t}\n\n\ttick(dt: number): boolean {\n\t\tif (this.finished || this.paused) return false;\n\t\tthis.time -= dt;\n\t\tif (this.time <= 0) {\n\t\t\tthis.action();\n\t\t\tthis.finished = true;\n\t\t\tthis.time = 0;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\treset(time) {\n\t\tthis.time = time;\n\t\tthis.finished = false;\n\t}\n\n}\n","import {\n\tvec2,\n\tvec3,\n\tVec3,\n\tRect,\n\tLine,\n\tCircle,\n\tColor,\n\tVec2,\n\tMat4,\n\tQuad,\n\tRNG,\n\tquad,\n\trgb,\n\thsl2rgb,\n\trng,\n\trand,\n\trandi,\n\trandSeed,\n\tchance,\n\tchoose,\n\tclamp,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\ttestAreaRect,\n\ttestAreaLine,\n\ttestAreaCircle,\n\ttestAreaPolygon,\n\ttestAreaPoint,\n\ttestAreaArea,\n\ttestLineLineT,\n\ttestRectRect2,\n\ttestLineLine,\n\ttestRectRect,\n\ttestRectLine,\n\ttestRectPoint,\n\ttestPolygonPoint,\n\ttestLinePolygon,\n\ttestPolygonPolygon,\n\ttestCircleCircle,\n\ttestCirclePoint,\n\ttestRectPolygon,\n\tminkDiff,\n\tdeg2rad,\n\trad2deg,\n} from \"./math\";\n\nimport {\n\tIDList,\n\tdownloadURL,\n\tdownloadBlob,\n\tuid,\n\tdeprecate,\n\tdeprecateMsg,\n\tisDataURL,\n\tdeepEq,\n} from \"./utils\";\n\nimport {\n\tGfxShader,\n\tGfxFont,\n\tTexFilter,\n\tRenderProps,\n\tCharTransform,\n\tCharTransformFunc,\n\tTexWrap,\n\tFormattedText,\n\tFormattedChar,\n\tDrawRectOpt,\n\tDrawLineOpt,\n\tDrawLinesOpt,\n\tDrawTriangleOpt,\n\tDrawPolygonOpt,\n\tDrawCircleOpt,\n\tDrawEllipseOpt,\n\tDrawUVQuadOpt,\n\tVertex,\n\tSpriteData,\n\tSoundData,\n\tFontData,\n\tShaderData,\n\tSpriteLoadSrc,\n\tSpriteLoadOpt,\n\tSpriteAtlasData,\n\tFontLoadOpt,\n\tGfxTexData,\n\tKaboomCtx,\n\tKaboomOpt,\n\tAudioPlay,\n\tAudioPlayOpt,\n\tDrawSpriteOpt,\n\tDrawTextOpt,\n\tGameObj,\n\tEventCanceller,\n\tSceneID,\n\tSceneDef,\n\tCompList,\n\tComp,\n\tTag,\n\tKey,\n\tMouseButton,\n\tTouchID,\n\tCollision,\n\tPosComp,\n\tScaleComp,\n\tRotateComp,\n\tColorComp,\n\tOpacityComp,\n\tOrigin,\n\tOriginComp,\n\tLayerComp,\n\tZComp,\n\tFollowComp,\n\tMoveComp,\n\tOutviewCompOpt,\n\tOutviewComp,\n\tCleanupCompOpt,\n\tCleanupComp,\n\tAreaCompOpt,\n\tAreaComp,\n\tArea,\n\tSpriteComp,\n\tSpriteCompOpt,\n\tGfxTexture,\n\tSpriteAnimPlayOpt,\n\tTextComp,\n\tTextCompOpt,\n\tRectComp,\n\tRectCompOpt,\n\tUVQuadComp,\n\tCircleComp,\n\tOutlineComp,\n\tTimerComp,\n\tBodyComp,\n\tBodyCompOpt,\n\tUniform,\n\tShaderComp,\n\tSolidComp,\n\tFixedComp,\n\tStayComp,\n\tHealthComp,\n\tLifespanComp,\n\tLifespanCompOpt,\n\tStateComp,\n\tDebug,\n\tKaboomPlugin,\n\tMergeObj,\n\tLevel,\n\tLevelOpt,\n\tCursor,\n\tRecording,\n\tKaboom,\n} from \"./types\";\n\nimport FPSCounter from \"./fps\";\nimport Timer from \"./timer\";\n\n// @ts-ignore\nimport apl386Src from \"./assets/apl386.png\";\n// @ts-ignore\nimport apl386oSrc from \"./assets/apl386o.png\";\n// @ts-ignore\nimport sinkSrc from \"./assets/sink.png\";\n// @ts-ignore\nimport sinkoSrc from \"./assets/sinko.png\";\n// @ts-ignore\nimport beanSrc from \"./assets/bean.png\";\n// @ts-ignore\nimport burpBytes from \"./assets/burp.mp3\";\n// @ts-ignore\nimport kaSrc from \"./assets/ka.png\";\n// @ts-ignore\nimport boomSrc from \"./assets/boom.png\";\n\ntype ButtonState =\n\t\"up\"\n\t| \"pressed\"\n\t| \"rpressed\"\n\t| \"down\"\n\t| \"released\"\n\t;\n\ntype DrawTextureOpt = RenderProps & {\n\ttex: GfxTexture,\n\twidth?: number,\n\theight?: number,\n\ttiled?: boolean,\n\tflipX?: boolean,\n\tflipY?: boolean,\n\tquad?: Quad,\n\torigin?: Origin | Vec2,\n}\n\ninterface GfxTexOpt {\n\tfilter?: TexFilter,\n\twrap?: TexWrap,\n}\n\n// translate these key names to a simpler version\nconst KEY_ALIAS = {\n\t\"ArrowLeft\": \"left\",\n\t\"ArrowRight\": \"right\",\n\t\"ArrowUp\": \"up\",\n\t\"ArrowDown\": \"down\",\n\t\" \": \"space\",\n};\n\n// according to https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\nconst MOUSE_BUTTONS = [\n\t\"left\",\n\t\"middle\",\n\t\"right\",\n\t\"back\",\n\t\"forward\",\n];\n\n// don't trigger browser default event when these keys are pressed\nconst PREVENT_DEFAULT_KEYS = [\n\t\"space\",\n\t\"left\",\n\t\"right\",\n\t\"up\",\n\t\"down\",\n\t\"tab\",\n\t\"f1\",\n\t\"f2\",\n\t\"f3\",\n\t\"f4\",\n\t\"f5\",\n\t\"f6\",\n\t\"f7\",\n\t\"f8\",\n\t\"f9\",\n\t\"f10\",\n\t\"f11\",\n\t\"s\",\n];\n\n// some default charsets for loading bitmap fonts\nconst ASCII_CHARS = \" !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\";\nconst CP437_CHARS = \" ☺☻♥♦♣♠•◘○◙♂♀♪♫☼►◄↕‼¶§▬↨↑↓→←∟↔▲▼ !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~⌂ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■\";\n\n// audio gain range\nconst MIN_GAIN = 0;\nconst MAX_GAIN = 3;\n\n// audio speed range\nconst MIN_SPEED = 0;\nconst MAX_SPEED = 3;\n\n// audio detune range\nconst MIN_DETUNE = -1200;\nconst MAX_DETUNE = 1200;\n\nconst DEF_ORIGIN = \"topleft\";\nconst DEF_GRAVITY = 1600;\nconst QUEUE_COUNT = 65536;\nconst BG_GRID_SIZE = 64;\n\nconst DEF_FONT = \"apl386o\";\nconst DBG_FONT = \"sink\";\n\n// vertex format stride (vec3 pos, vec2 uv, vec4 color)\nconst STRIDE = 9;\n\n// vertex shader template, replace {{user}} with user vertex shader code\nconst VERT_TEMPLATE = `\nattribute vec3 a_pos;\nattribute vec2 a_uv;\nattribute vec4 a_color;\n\nvarying vec3 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nvec4 def_vert() {\n\treturn vec4(a_pos, 1.0);\n}\n\n{{user}}\n\nvoid main() {\n\tvec4 pos = vert(a_pos, a_uv, a_color);\n\tv_pos = a_pos;\n\tv_uv = a_uv;\n\tv_color = a_color;\n\tgl_Position = pos;\n}\n`;\n\n// fragment shader template, replace {{user}} with user fragment shader code\nconst FRAG_TEMPLATE = `\nprecision mediump float;\n\nvarying vec3 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nuniform sampler2D u_tex;\n\nvec4 def_frag() {\n\treturn v_color * texture2D(u_tex, v_uv);\n}\n\n{{user}}\n\nvoid main() {\n\tgl_FragColor = frag(v_pos, v_uv, v_color, u_tex);\n\tif (gl_FragColor.a == 0.0) {\n\t\tdiscard;\n\t}\n}\n`;\n\n// default {{user}} vertex shader code\nconst DEF_VERT = `\nvec4 vert(vec3 pos, vec2 uv, vec4 color) {\n\treturn def_vert();\n}\n`;\n\n// default {{user}} fragment shader code\nconst DEF_FRAG = `\nvec4 frag(vec3 pos, vec2 uv, vec4 color, sampler2D tex) {\n\treturn def_frag();\n}\n`;\n\nconst COMP_DESC = new Set([\n\t\"id\",\n\t\"require\",\n]);\n\nconst COMP_EVENTS = new Set([\n\t\"add\",\n\t\"load\",\n\t\"update\",\n\t\"draw\",\n\t\"destroy\",\n\t\"inspect\",\n]);\n\n// transform the button state to the next state\n// e.g. a button might become \"pressed\" one frame, and it should become \"down\" next frame\nfunction processButtonState(s: ButtonState): ButtonState {\n\tif (s === \"pressed\" || s === \"rpressed\") {\n\t\treturn \"down\";\n\t}\n\tif (s === \"released\") {\n\t\treturn \"up\";\n\t}\n\treturn s;\n}\n\n// wrappers around full screen functions to work across browsers\nfunction enterFullscreen(el: HTMLElement) {\n\tif (el.requestFullscreen) el.requestFullscreen();\n\t// @ts-ignore\n\telse if (el.webkitRequestFullscreen) el.webkitRequestFullscreen();\n};\n\nfunction exitFullscreen() {\n\tif (document.exitFullscreen) document.exitFullscreen();\n\t// @ts-ignore\n\telse if (document.webkitExitFullScreen) document.webkitExitFullScreen();\n};\n\nfunction getFullscreenElement(): Element | void {\n\treturn document.fullscreenElement\n\t\t// @ts-ignore\n\t\t|| document.webkitFullscreenElement\n\t\t;\n};\n\n// convert origin string to a vec2 offset\nfunction originPt(orig: Origin | Vec2): Vec2 {\n\tswitch (orig) {\n\t\tcase \"topleft\": return vec2(-1, -1);\n\t\tcase \"top\": return vec2(0, -1);\n\t\tcase \"topright\": return vec2(1, -1);\n\t\tcase \"left\": return vec2(-1, 0);\n\t\tcase \"center\": return vec2(0, 0);\n\t\tcase \"right\": return vec2(1, 0);\n\t\tcase \"botleft\": return vec2(-1, 1);\n\t\tcase \"bot\": return vec2(0, 1);\n\t\tcase \"botright\": return vec2(1, 1);\n\t\tdefault: return orig;\n\t}\n}\n\nfunction createEmptyAudioBuffer() {\n\treturn new AudioBuffer({\n\t\tlength: 1,\n\t\tnumberOfChannels: 1,\n\t\tsampleRate: 44100\n\t});\n}\n\n// only exports one kaboom() which contains all the state\nexport default (gopt: KaboomOpt = {}): KaboomCtx => {\n\nconst app = (() => {\n\n\tconst root = gopt.root ?? document.body;\n\n\t// if root is not defined (which falls back to <body>) we assume user is using kaboom on a clean page, and modify <body> to better fit a full screen canvas\n\tif (root === document.body) {\n\t\tdocument.body.style[\"width\"] = \"100%\";\n\t\tdocument.body.style[\"height\"] = \"100%\";\n\t\tdocument.body.style[\"margin\"] = \"0px\";\n\t\tdocument.documentElement.style[\"width\"] = \"100%\";\n\t\tdocument.documentElement.style[\"height\"] = \"100%\";\n\t}\n\n\t// create a <canvas> if user didn't provide one\n\tconst canvas = gopt.canvas ?? (() => {\n\t\tconst canvas = document.createElement(\"canvas\");\n\t\troot.appendChild(canvas);\n\t\treturn canvas;\n\t})();\n\n\t// global pixel scale\n\tconst gscale = gopt.scale ?? 1;\n\n\t// adjust canvas size according to user size / viewport settings\n\tif (gopt.width && gopt.height && !gopt.stretch && !gopt.letterbox) {\n\t\tcanvas.width = gopt.width * gscale;\n\t\tcanvas.height = gopt.height * gscale;\n\t} else {\n\t\tcanvas.width = canvas.parentElement.offsetWidth;\n\t\tcanvas.height = canvas.parentElement.offsetHeight;\n\t}\n\n\t// canvas css styles\n\tconst styles = [\n\t\t\"outline: none\",\n\t\t\"cursor: default\",\n\t];\n\n\tif (gopt.crisp) {\n\t\tstyles.push(\"image-rendering: pixelated\");\n\t\tstyles.push(\"image-rendering: crisp-edges\");\n\t}\n\n\t// TODO: .style is supposed to be readonly? alternative?\n\t// @ts-ignore\n\tcanvas.style = styles.join(\";\");\n\n\t// make canvas focusable\n\tcanvas.setAttribute(\"tabindex\", \"0\");\n\n\t// create webgl context\n\tconst gl = canvas\n\t\t.getContext(\"webgl\", {\n\t\t\tantialias: true,\n\t\t\tdepth: true,\n\t\t\tstencil: true,\n\t\t\talpha: true,\n\t\t\tpreserveDrawingBuffer: true,\n\t\t});\n\n\treturn {\n\n\t\tcanvas: canvas,\n\t\tscale: gscale,\n\t\tgl: gl,\n\n\t\t// keep track of all button states\n\t\tkeyStates: {} as Record<Key, ButtonState>,\n\t\tmouseStates: {} as Record<MouseButton, ButtonState>,\n\n\t\t// input states from last frame, should reset every frame\n\t\tcharInputted: [],\n\t\tisMouseMoved: false,\n\t\tisKeyPressed: false,\n\t\tisKeyPressedRepeat: false,\n\t\tisKeyReleased: false,\n\t\tmousePos: vec2(0, 0),\n\t\tmouseDeltaPos: vec2(0, 0),\n\n\t\t// total time elapsed\n\t\ttime: 0,\n\t\t// real total time elapsed (including paused time)\n\t\trealTime: 0,\n\t\t// if we should skip next dt, to prevent the massive dt surge if user switch to another tab for a while and comeback\n\t\tskipTime: false,\n\t\t// how much time last frame took\n\t\tdt: 0.0,\n\t\t// total frames elapsed\n\t\tnumFrames: 0,\n\n\t\t// if we're on a touch device\n\t\tisTouch: (\"ontouchstart\" in window) || navigator.maxTouchPoints > 0,\n\n\t\t// requestAnimationFrame id\n\t\tloopID: null,\n\t\t// if our game loop is currently stopped / paused\n\t\tstopped: false,\n\t\tpaused: false,\n\n\t\t// TODO: take fps counter out pure\n\t\tfpsCounter: new FPSCounter(),\n\n\t\t// if we finished loading all assets\n\t\tloaded: false,\n\n\t};\n\n})();\n\nconst gfx = (() => {\n\n\tconst gl = app.gl;\n\tconst defShader = makeShader(DEF_VERT, DEF_FRAG);\n\n\t// a 1x1 white texture to draw raw shapes like rectangles and polygons\n\t// we use a texture for those so we can use only 1 pipeline for drawing sprites + shapes\n\tconst emptyTex = makeTex(\n\t\tnew ImageData(new Uint8ClampedArray([ 255, 255, 255, 255, ]), 1, 1)\n\t);\n\n\tconst c = gopt.background ?? rgb(0, 0, 0);\n\n\tif (gopt.background) {\n\t\tconst c = Color.fromArray(gopt.background);\n\t\tgl.clearColor(c.r / 255, c.g / 255, c.b / 255, 1);\n\t}\n\n\tgl.enable(gl.BLEND);\n\tgl.enable(gl.SCISSOR_TEST);\n\tgl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n\t// we only use one vertex and index buffer that batches all draw calls\n\tconst vbuf = gl.createBuffer();\n\n\tgl.bindBuffer(gl.ARRAY_BUFFER, vbuf);\n\t// vec3 pos\n\tgl.vertexAttribPointer(0, 3, gl.FLOAT, false, STRIDE * 4, 0);\n\tgl.enableVertexAttribArray(0);\n\t// vec2 uv\n\tgl.vertexAttribPointer(1, 2, gl.FLOAT, false, STRIDE * 4, 12);\n\tgl.enableVertexAttribArray(1);\n\t// vec4 color\n\tgl.vertexAttribPointer(2, 4, gl.FLOAT, false, STRIDE * 4, 20);\n\tgl.enableVertexAttribArray(2);\n\tgl.bufferData(gl.ARRAY_BUFFER, QUEUE_COUNT * 4, gl.DYNAMIC_DRAW);\n\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n\tconst ibuf = gl.createBuffer();\n\n\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibuf);\n\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, QUEUE_COUNT * 2, gl.DYNAMIC_DRAW);\n\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n\t// a checkerboard texture used for the default background\n\tconst bgTex = makeTex(\n\t\tnew ImageData(new Uint8ClampedArray([\n\t\t\t128, 128, 128, 255,\n\t\t\t190, 190, 190, 255,\n\t\t\t190, 190, 190, 255,\n\t\t\t128, 128, 128, 255,\n\t\t]), 2, 2), {\n\t\t\twrap: \"repeat\",\n\t\t\tfilter: \"nearest\",\n\t\t},\n\t);\n\n\treturn {\n\n\t\t// keep track of how many draw calls we're doing this frame\n\t\tdrawCalls: 0,\n\t\t// how many draw calls we're doing last frame, this is the number we give to users\n\t\tlastDrawCalls: 0,\n\n\t\t// gfx states\n\t\tdefShader: defShader,\n\t\tcurShader: defShader,\n\t\tdefTex: emptyTex,\n\t\tcurTex: emptyTex,\n\t\tcurUniform: {},\n\t\tvbuf: vbuf,\n\t\tibuf: ibuf,\n\n\t\t// local vertex / index buffer queue\n\t\tvqueue: [],\n\t\tiqueue: [],\n\n\t\ttransform: new Mat4(),\n\t\ttransformStack: [],\n\n\t\tbgTex: bgTex,\n\n\t\twidth: gopt.width,\n\t\theight: gopt.height,\n\n\t\tviewport: {\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\twidth: gl.drawingBufferWidth,\n\t\t\theight: gl.drawingBufferHeight,\n\t\t},\n\n\t};\n\n})();\n\nupdateViewport();\n\nconst audio = (() => {\n\n\t// TODO: handle when audio context is unavailable\n\tconst ctx = new (window.AudioContext || (window as any).webkitAudioContext)() as AudioContext\n\tconst masterNode = ctx.createGain();\n\tmasterNode.connect(ctx.destination);\n\n\t// by default browsers can only load audio async, we don't deal with that and just start with an empty audio buffer\n\tconst burpSnd = {\n\t\tbuf: createEmptyAudioBuffer(),\n\t};\n\n\t// load that burp sound\n\tctx.decodeAudioData(burpBytes.buffer.slice(0), (buf) => {\n\t\tburpSnd.buf = buf;\n\t}, () => {\n\t\tthrow new Error(\"Failed to load burp.\")\n\t});\n\n\treturn {\n\t\tctx,\n\t\tmasterNode,\n\t\tburpSnd,\n\t};\n\n})();\n\nconst assets = {\n\n\t// keep track of how many assets are loading / loaded, for calculaating progress\n\tnumLoading: 0,\n\tnumLoaded: 0,\n\n\t// prefix for when loading from a url\n\turlPrefix: \"\",\n\n\t// asset holders\n\tsprites: {},\n\tsounds: {},\n\tshaders: {},\n\tfonts: {},\n\n};\n\nconst game = {\n\n\t// event callbacks\n\tevents: {},\n\tobjEvents: {},\n\n\t// root game object\n\t// these transforms are used as camera\n\troot: make([]),\n\n\ttimers: new IDList<Timer>(),\n\n\t// misc\n\tlayers: {},\n\tdefLayer: null,\n\tgravity: DEF_GRAVITY,\n\ton<F>(ev: string, cb: F): EventCanceller {\n\t\tif (!this.events[ev]) {\n\t\t\tthis.events[ev] = new IDList();\n\t\t}\n\t\treturn this.events[ev].pushd(cb);\n\t},\n\ttrigger(ev: string, ...args) {\n\t\tif (this.events[ev]) {\n\t\t\tthis.events[ev].forEach((cb) => cb(...args));\n\t\t}\n\t},\n\tscenes: {},\n\n\t// on screen log\n\tlogs: [],\n\n\t// camera\n\tcam: {\n\t\tpos: center(),\n\t\tscale: vec2(1),\n\t\tangle: 0,\n\t\tshake: 0,\n\t\ttransform: new Mat4(),\n\t},\n\n}\n\n// wrap individual loaders with global loader counter, for stuff like progress bar\nfunction load<T>(prom: Promise<T>): Promise<T> {\n\n\tassets.numLoading++;\n\n\t// wrapping another layer of promise because we are catching errors here internally and we also want users be able to catch errors, however only one catch is allowed per promise chain\n\treturn new Promise((resolve, reject) => {\n\t\tprom\n\t\t\t.then(resolve)\n\t\t\t.catch((err) => {\n\t\t\t\tdebug.error(err);\n\t\t\t\treject(err);\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tassets.numLoading--;\n\t\t\t\tassets.numLoaded++;\n\t\t\t});\n\t}) as Promise<T>;\n\n}\n\n// get current load progress\nfunction loadProgress(): number {\n\treturn assets.numLoaded / (assets.numLoading + assets.numLoaded);\n}\n\n// global load path prefix\nfunction loadRoot(path?: string): string {\n\tif (path !== undefined) {\n\t\tassets.urlPrefix = path;\n\t}\n\treturn assets.urlPrefix;\n}\n\n// wrapper around fetch() that applies urlPrefix and basic error handling\nfunction fetchURL(path: string) {\n\tconst url = assets.urlPrefix + path;\n\treturn fetch(url)\n\t\t.then((res) => {\n\t\t\tif (!res.ok) {\n\t\t\t\tthrow new Error(`Failed to fetch ${url}`);\n\t\t\t}\n\t\t\treturn res;\n\t\t});\n}\n\n// wrapper around image loader to get a Promise\nfunction loadImg(src: string): Promise<HTMLImageElement> {\n\tconst img = new Image();\n\timg.src = isDataURL(src) ? src : assets.urlPrefix + src;\n\timg.crossOrigin = \"anonymous\";\n\treturn new Promise<HTMLImageElement>((resolve, reject) => {\n\t\timg.onload = () => resolve(img);\n\t\t// TODO: truncate for long dataurl src\n\t\timg.onerror = () => reject(`Failed to load image from \"${src}\"`);\n\t});\n}\n\n// TODO: support SpriteLoadSrc\nfunction loadFont(\n\tname: string | null,\n\tsrc: string,\n\tgw: number,\n\tgh: number,\n\topt: FontLoadOpt = {},\n): Promise<FontData> {\n\treturn load(loadImg(src)\n\t\t.then((img) => {\n\t\t\tconst font = makeFont(\n\t\t\t\tmakeTex(img, opt),\n\t\t\t\tgw,\n\t\t\t\tgh,\n\t\t\t\topt.chars ?? ASCII_CHARS\n\t\t\t);\n\t\t\tif (name) {\n\t\t\t\tassets.fonts[name] = font;\n\t\t\t}\n\t\t\treturn font;\n\t\t})\n\t);\n}\n\nfunction getSprite(name: string): SpriteData | null {\n\treturn assets.sprites[name] ?? null;\n}\n\nfunction getSound(name: string): SoundData | null {\n\treturn assets.sounds[name] ?? null;\n}\n\nfunction getFont(name: string): FontData | null {\n\treturn assets.fonts[name] ?? null;\n}\n\nfunction getShader(name: string): ShaderData | null {\n\treturn assets.shaders[name] ?? null;\n}\n\n// get an array of frames based on configuration on how to slice the image\nfunction slice(x = 1, y = 1, dx = 0, dy = 0, w = 1, h = 1): Quad[] {\n\tconst frames = [];\n\tconst qw = w / x;\n\tconst qh = h / y;\n\tfor (let j = 0; j < y; j++) {\n\t\tfor (let i = 0; i < x; i++) {\n\t\t\tframes.push(new Quad(\n\t\t\t\tdx + i * qw,\n\t\t\t\tdy + j * qh,\n\t\t\t\tqw,\n\t\t\t\tqh,\n\t\t\t));\n\t\t}\n\t}\n\treturn frames;\n}\n\nfunction loadSpriteAtlas(\n\tsrc: SpriteLoadSrc,\n\tdata: SpriteAtlasData | string\n): Promise<Record<string, SpriteData>> {\n\tif (typeof data === \"string\") {\n\t\t// TODO: this adds a new loader asyncly\n\t\treturn load(fetchURL(data)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data2) => loadSpriteAtlas(src, data2)));\n\t}\n\treturn load(loadSprite(null, src).then((atlas) => {\n\t\tconst map = {};\n\t\tconst w = atlas.tex.width;\n\t\tconst h = atlas.tex.height;\n\t\tfor (const name in data) {\n\t\t\tconst info = data[name];\n\t\t\tconst spr = {\n\t\t\t\ttex: atlas.tex,\n\t\t\t\tframes: slice(info.sliceX, info.sliceY, info.x / w, info.y / h, info.width / w, info.height / h),\n\t\t\t\tanims: info.anims,\n\t\t\t}\n\t\t\tassets.sprites[name] = spr;\n\t\t\tmap[name] = spr;\n\t\t}\n\t\treturn map;\n\t}));\n}\n\n// synchronously load sprite from local pixel data\nfunction loadRawSprite(\n\tname: string | null,\n\tsrc: GfxTexData,\n\topt: SpriteLoadOpt = {}\n) {\n\n\tconst tex = makeTex(src, opt);\n\tconst frames = slice(opt.sliceX || 1, opt.sliceY || 1);\n\n\tconst sprite = {\n\t\ttex: tex,\n\t\tframes: frames,\n\t\tanims: opt.anims || {},\n\t};\n\n\tif (name) {\n\t\tassets.sprites[name] = sprite;\n\t}\n\n\treturn sprite;\n\n}\n\n// load a sprite to asset manager\nfunction loadSprite(\n\tname: string | null,\n\tsrc: SpriteLoadSrc,\n\topt: SpriteLoadOpt = {\n\t\tsliceX: 1,\n\t\tsliceY: 1,\n\t\tanims: {},\n\t},\n): Promise<SpriteData> {\n\n\treturn load(new Promise<SpriteData>((resolve, reject) => {\n\n\t\tif (!src) {\n\t\t\treturn reject(`Expected sprite src for \"${name}\"`);\n\t\t}\n\n\t\t// from url\n\t\tif (typeof(src) === \"string\") {\n\t\t\tloadImg(src)\n\t\t\t\t.then((img) => resolve(loadRawSprite(name, img, opt)))\n\t\t\t\t.catch(reject);\n\t\t} else {\n\t\t\tresolve(loadRawSprite(name, src, opt));\n\t\t}\n\n\t}));\n\n}\n\n// TODO: accept raw json\nfunction loadPedit(name: string, src: string): Promise<SpriteData> {\n\n\treturn load(new Promise<SpriteData>((resolve, reject) => {\n\n\t\tfetchURL(src)\n\t\t\t.then((res) => res.json())\n\t\t\t.then(async (data) => {\n\n\t\t\t\tconst images = await Promise.all(data.frames.map(loadImg));\n\t\t\t\tconst canvas = document.createElement(\"canvas\");\n\t\t\t\tcanvas.width = data.width;\n\t\t\t\tcanvas.height = data.height * data.frames.length;\n\n\t\t\t\tconst ctx = canvas.getContext(\"2d\");\n\n\t\t\t\timages.forEach((img: HTMLImageElement, i) => {\n\t\t\t\t\tctx.drawImage(img, 0, i * data.height);\n\t\t\t\t});\n\n\t\t\t\treturn loadSprite(name, canvas, {\n\t\t\t\t\tsliceY: data.frames.length,\n\t\t\t\t\tanims: data.anims,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.then(resolve)\n\t\t\t.catch(reject)\n\t\t\t;\n\n\t}));\n\n}\n\n// TODO: accept raw json\nfunction loadAseprite(\n\tname: string | null,\n\timgSrc: SpriteLoadSrc,\n\tjsonSrc: string\n): Promise<SpriteData> {\n\n\treturn load(new Promise<SpriteData>((resolve, reject) => {\n\n\t\tloadSprite(name, imgSrc)\n\t\t\t.then((sprite: SpriteData) => {\n\t\t\t\tfetchURL(jsonSrc)\n\t\t\t\t\t.then((res) => res.json())\n\t\t\t\t\t.then((data) => {\n\t\t\t\t\t\tconst size = data.meta.size;\n\t\t\t\t\t\tsprite.frames = data.frames.map((f: any) => {\n\t\t\t\t\t\t\treturn new Quad(\n\t\t\t\t\t\t\t\tf.frame.x / size.w,\n\t\t\t\t\t\t\t\tf.frame.y / size.h,\n\t\t\t\t\t\t\t\tf.frame.w / size.w,\n\t\t\t\t\t\t\t\tf.frame.h / size.h,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfor (const anim of data.meta.frameTags) {\n\t\t\t\t\t\t\tif (anim.from === anim.to) {\n\t\t\t\t\t\t\t\tsprite.anims[anim.name] = anim.from\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsprite.anims[anim.name] = {\n\t\t\t\t\t\t\t\t\tfrom: anim.from,\n\t\t\t\t\t\t\t\t\tto: anim.to,\n\t\t\t\t\t\t\t\t\t// TODO: let users define these\n\t\t\t\t\t\t\t\t\tspeed: 10,\n\t\t\t\t\t\t\t\t\tloop: true,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresolve(sprite);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(reject)\n\t\t\t\t\t;\n\t\t\t})\n\t\t\t.catch(reject);\n\n\t}));\n\n}\n\nfunction loadShader(\n\tname: string | null,\n\tvert?: string,\n\tfrag?: string,\n\tisUrl: boolean = false,\n): Promise<ShaderData> {\n\n\tfunction loadRawShader(\n\t\tname: string | null,\n\t\tvert: string | null,\n\t\tfrag: string | null,\n\t): ShaderData {\n\t\tconst shader = makeShader(vert, frag);\n\t\tif (name) {\n\t\t\tassets.shaders[name] = shader;\n\t\t}\n\t\treturn shader;\n\t}\n\n\treturn load(new Promise<ShaderData>((resolve, reject) => {\n\n\t\tif (!vert && !frag) {\n\t\t\treturn reject(\"no shader\");\n\t\t}\n\n\t\tfunction resolveUrl(url?: string) {\n\t\t\treturn url ?\n\t\t\t\tfetchURL(url)\n\t\t\t\t\t.then((res) => res.text())\n\t\t\t\t\t.catch(reject)\n\t\t\t\t: new Promise((r) => r(null));\n\t\t}\n\n\t\tif (isUrl) {\n\t\t\tPromise.all([resolveUrl(vert), resolveUrl(frag)])\n\t\t\t\t.then(([vcode, fcode]: [string | null, string | null]) => {\n\t\t\t\t\tresolve(loadRawShader(name, vcode, fcode));\n\t\t\t\t})\n\t\t\t\t.catch(reject);\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tresolve(loadRawShader(name, vert, frag));\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t}\n\n\t}));\n\n}\n\n// TODO: accept dataurl\n// load a sound to asset manager\nfunction loadSound(\n\tname: string | null,\n\tsrc: string,\n): Promise<SoundData> {\n\n\treturn load(new Promise<SoundData>((resolve, reject) => {\n\n\t\tif (!src) {\n\t\t\treturn reject(`expected sound src for \"${name}\"`);\n\t\t}\n\n\t\t// from url\n\t\tif (typeof(src) === \"string\") {\n\t\t\tfetchURL(src)\n\t\t\t\t.then((res) => res.arrayBuffer())\n\t\t\t\t.then((data) => {\n\t\t\t\t\treturn new Promise((resolve2, reject2) =>\n\t\t\t\t\t\taudio.ctx.decodeAudioData(data, resolve2, reject2)\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t\t.then((buf: AudioBuffer) => {\n\t\t\t\t\tconst snd = {\n\t\t\t\t\t\tbuf: buf,\n\t\t\t\t\t}\n\t\t\t\t\tif (name) {\n\t\t\t\t\t\tassets.sounds[name] = snd;\n\t\t\t\t\t}\n\t\t\t\t\tresolve(snd);\n\t\t\t\t})\n\t\t\t\t.catch(reject);\n\t\t}\n\n\t}));\n\n}\n\nfunction loadBean(name: string = \"bean\"): Promise<SpriteData> {\n\treturn loadSprite(name, beanSrc);\n}\n\n// get / set master volume\nfunction volume(v?: number): number {\n\tif (v !== undefined) {\n\t\taudio.masterNode.gain.value = clamp(v, MIN_GAIN, MAX_GAIN);\n\t}\n\treturn audio.masterNode.gain.value;\n}\n\n// plays a sound, returns a control handle\nfunction play(\n\tsrc: SoundData | string,\n\topt: AudioPlayOpt = {\n\t\tloop: false,\n\t\tvolume: 1,\n\t\tspeed: 1,\n\t\tdetune: 0,\n\t\tseek: 0,\n\t},\n): AudioPlay {\n\n\t// TODO: clean?\n\tif (typeof src === \"string\") {\n\n\t\tconst pb = play({\n\t\t\tbuf: createEmptyAudioBuffer(),\n\t\t});\n\n\t\tonLoad(() => {\n\t\t\tconst snd = assets.sounds[src];\n\t\t\tif (!snd) {\n\t\t\t\tthrow new Error(`Sound not found: \"${src}\"`);\n\t\t\t}\n\t\t\tconst pb2 = play(snd, opt);\n\t\t\tfor (const k in pb2) {\n\t\t\t\tpb[k] = pb2[k];\n\t\t\t}\n\t\t});\n\n\t\treturn pb;\n\n\t}\n\n\tconst ctx = audio.ctx;\n\tlet stopped = false;\n\tlet srcNode = ctx.createBufferSource();\n\n\tsrcNode.buffer = src.buf;\n\tsrcNode.loop = opt.loop ? true : false;\n\n\tconst gainNode = ctx.createGain();\n\n\tsrcNode.connect(gainNode);\n\tgainNode.connect(audio.masterNode);\n\n\tconst pos = opt.seek ?? 0;\n\n\tsrcNode.start(0, pos);\n\n\tlet startTime = ctx.currentTime - pos;\n\tlet stopTime: number | null = null;\n\n\tconst handle = {\n\n\t\tstop() {\n\t\t\tif (stopped) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.pause();\n\t\t\tstartTime = ctx.currentTime;\n\t\t},\n\n\t\tplay(seek?: number) {\n\n\t\t\tif (!stopped) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst oldNode = srcNode;\n\n\t\t\tsrcNode = ctx.createBufferSource();\n\t\t\tsrcNode.buffer = oldNode.buffer;\n\t\t\tsrcNode.loop = oldNode.loop;\n\t\t\tsrcNode.playbackRate.value = oldNode.playbackRate.value;\n\n\t\t\tif (srcNode.detune) {\n\t\t\t\tsrcNode.detune.value = oldNode.detune.value;\n\t\t\t}\n\n\t\t\tsrcNode.connect(gainNode);\n\n\t\t\tconst pos = seek ?? this.time();\n\n\t\t\tsrcNode.start(0, pos);\n\t\t\tstartTime = ctx.currentTime - pos;\n\t\t\tstopped = false;\n\t\t\tstopTime = null;\n\n\t\t},\n\n\t\tpause() {\n\t\t\tif (stopped) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsrcNode.stop();\n\t\t\tstopped = true;\n\t\t\tstopTime = ctx.currentTime;\n\t\t},\n\n\t\tisPaused(): boolean {\n\t\t\treturn stopped;\n\t\t},\n\n\t\tpaused(): boolean {\n\t\t\tdeprecateMsg(\"paused()\", \"isPaused()\");\n\t\t\treturn this.isPaused();\n\t\t},\n\n\t\tisStopped(): boolean {\n\t\t\treturn stopped;\n\t\t},\n\n\t\tstopped(): boolean {\n\t\t\tdeprecateMsg(\"stopped()\", \"isStopped()\");\n\t\t\treturn this.isStopped();\n\t\t},\n\n\t\t// TODO: affect time()\n\t\tspeed(val?: number): number {\n\t\t\tif (val !== undefined) {\n\t\t\t\tsrcNode.playbackRate.value = clamp(val, MIN_SPEED, MAX_SPEED);\n\t\t\t}\n\t\t\treturn srcNode.playbackRate.value;\n\t\t},\n\n\t\tdetune(val?: number): number {\n\t\t\tif (!srcNode.detune) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (val !== undefined) {\n\t\t\t\tsrcNode.detune.value = clamp(val, MIN_DETUNE, MAX_DETUNE);\n\t\t\t}\n\t\t\treturn srcNode.detune.value;\n\t\t},\n\n\t\tvolume(val?: number): number {\n\t\t\tif (val !== undefined) {\n\t\t\t\tgainNode.gain.value = clamp(val, MIN_GAIN, MAX_GAIN);\n\t\t\t}\n\t\t\treturn gainNode.gain.value;\n\t\t},\n\n\t\tloop() {\n\t\t\tsrcNode.loop = true;\n\t\t},\n\n\t\tunloop() {\n\t\t\tsrcNode.loop = false;\n\t\t},\n\n\t\tduration(): number {\n\t\t\treturn src.buf.duration;\n\t\t},\n\n\t\ttime(): number {\n\t\t\tif (stopped) {\n\t\t\t\treturn stopTime - startTime;\n\t\t\t} else {\n\t\t\t\treturn ctx.currentTime - startTime;\n\t\t\t}\n\t\t},\n\n\t};\n\n\thandle.speed(opt.speed);\n\thandle.detune(opt.detune);\n\thandle.volume(opt.volume);\n\n\treturn handle;\n\n}\n\n// core kaboom logic\nfunction burp(opt?: AudioPlayOpt): AudioPlay {\n\treturn play(audio.burpSnd, opt);\n}\n\n// TODO: take these webgl structures out pure\nfunction makeTex(\n\tdata: GfxTexData,\n\topt: GfxTexOpt = {}\n): GfxTexture {\n\n\tconst gl = app.gl;\n\tconst id = gl.createTexture();\n\n\tgl.bindTexture(gl.TEXTURE_2D, id);\n\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n\n\tconst filter = (() => {\n\t\tswitch (opt.filter ?? gopt.texFilter) {\n\t\t\tcase \"linear\": return gl.LINEAR;\n\t\t\tcase \"nearest\": return gl.NEAREST;\n\t\t\tdefault: return gl.NEAREST;\n\t\t}\n\t})();\n\n\tconst wrap = (() => {\n\t\tswitch (opt.wrap) {\n\t\t\tcase \"repeat\": return gl.REPEAT;\n\t\t\tcase \"clampToEdge\": return gl.CLAMP_TO_EDGE;\n\t\t\tdefault: return gl.CLAMP_TO_EDGE;\n\t\t}\n\t})();\n\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrap);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrap);\n\tgl.bindTexture(gl.TEXTURE_2D, null);\n\n\treturn {\n\t\twidth: data.width,\n\t\theight: data.height,\n\t\tbind() {\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, id);\n\t\t},\n\t\tunbind() {\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t\t},\n\t};\n\n}\n\nfunction makeShader(\n\tvertSrc: string | null = DEF_VERT,\n\tfragSrc: string | null = DEF_FRAG,\n): GfxShader {\n\n\tconst gl = app.gl;\n\tlet msg;\n\tconst vcode = VERT_TEMPLATE.replace(\"{{user}}\", vertSrc ?? DEF_VERT);\n\tconst fcode = FRAG_TEMPLATE.replace(\"{{user}}\", fragSrc ?? DEF_FRAG);\n\tconst vertShader = gl.createShader(gl.VERTEX_SHADER);\n\tconst fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n\n\tgl.shaderSource(vertShader, vcode);\n\tgl.shaderSource(fragShader, fcode);\n\tgl.compileShader(vertShader);\n\tgl.compileShader(fragShader);\n\n\tif ((msg = gl.getShaderInfoLog(vertShader))) {\n\t\tthrow new Error(msg);\n\t}\n\n\tif ((msg = gl.getShaderInfoLog(fragShader))) {\n\t\tthrow new Error(msg);\n\t}\n\n\tconst id = gl.createProgram();\n\n\tgl.attachShader(id, vertShader);\n\tgl.attachShader(id, fragShader);\n\n\tgl.bindAttribLocation(id, 0, \"a_pos\");\n\tgl.bindAttribLocation(id, 1, \"a_uv\");\n\tgl.bindAttribLocation(id, 2, \"a_color\");\n\n\tgl.linkProgram(id);\n\n\tif ((msg = gl.getProgramInfoLog(id))) {\n\t\t// for some reason on safari it always has a \"\\n\" msg\n\t\tif (msg !== \"\\n\") {\n\t\t\tthrow new Error(msg);\n\t\t}\n\t}\n\n\treturn {\n\n\t\tbind() {\n\t\t\tgl.useProgram(id);\n\t\t},\n\n\t\tunbind() {\n\t\t\tgl.useProgram(null);\n\t\t},\n\n\t\tsend(uniform: Uniform) {\n\t\t\tthis.bind();\n\t\t\tfor (const name in uniform) {\n\t\t\t\tconst val = uniform[name];\n\t\t\t\tconst loc = gl.getUniformLocation(id, name);\n\t\t\t\tif (typeof val === \"number\") {\n\t\t\t\t\tgl.uniform1f(loc, val);\n\t\t\t\t} else if (val instanceof Mat4) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tgl.uniformMatrix4fv(loc, false, new Float32Array(val.m));\n\t\t\t\t} else if (val instanceof Color) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tgl.uniform4f(loc, val.r, val.g, val.b, val.a);\n\t\t\t\t} else if (val instanceof Vec3) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tgl.uniform3f(loc, val.x, val.y, val.z);\n\t\t\t\t} else if (val instanceof Vec2) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tgl.uniform2f(loc, val.x, val.y);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.unbind();\n\t\t},\n\n\t};\n\n}\n\nfunction makeFont(\n\ttex: GfxTexture,\n\tgw: number,\n\tgh: number,\n\tchars: string,\n): GfxFont {\n\n\tconst cols = tex.width / gw;\n\tconst rows = tex.height / gh;\n\tconst qw = 1.0 / cols;\n\tconst qh = 1.0 / rows;\n\tconst map: Record<string, Vec2> = {};\n\tconst charMap = chars.split(\"\").entries();\n\n\tfor (const [i, ch] of charMap) {\n\t\tmap[ch] = vec2(\n\t\t\t(i % cols) * qw,\n\t\t\tMath.floor(i / cols) * qh,\n\t\t);\n\t}\n\n\treturn {\n\t\ttex: tex,\n\t\tmap: map,\n\t\tqw: qw,\n\t\tqh: qh,\n\t};\n\n}\n\n// TODO: expose\nfunction drawRaw(\n\tverts: Vertex[],\n\tindices: number[],\n\tfixed: boolean,\n\ttex: GfxTexture = gfx.defTex,\n\tshader: GfxShader = gfx.defShader,\n\tuniform: Uniform = {},\n) {\n\n\ttex = tex ?? gfx.defTex;\n\tshader = shader ?? gfx.defShader;\n\n\t// flush on texture / shader change and overflow\n\tif (\n\t\ttex !== gfx.curTex\n\t\t|| shader !== gfx.curShader\n\t\t|| !deepEq(gfx.curUniform, uniform)\n\t\t|| gfx.vqueue.length + verts.length * STRIDE > QUEUE_COUNT\n\t\t|| gfx.iqueue.length + indices.length > QUEUE_COUNT\n\t) {\n\t\tflush();\n\t}\n\n\tfor (const v of verts) {\n\n\t\t// TODO: cache camTransform * gfxTransform?\n\t\tconst transform = fixed ? gfx.transform : game.cam.transform.mult(gfx.transform);\n\n\t\t// normalized world space coordinate [-1.0 ~ 1.0]\n\t\tconst pt = screen2ndc(transform.multVec2(v.pos.xy()));\n\n\t\tgfx.vqueue.push(\n\t\t\tpt.x, pt.y, v.pos.z,\n\t\t\tv.uv.x, v.uv.y,\n\t\t\tv.color.r / 255, v.color.g / 255, v.color.b / 255, v.opacity,\n\t\t);\n\n\t}\n\n\tfor (const i of indices) {\n\t\tgfx.iqueue.push(i + gfx.vqueue.length / STRIDE - verts.length);\n\t}\n\n\tgfx.curTex = tex;\n\tgfx.curShader = shader;\n\tgfx.curUniform = uniform;\n\n}\n\n// draw all batched shapes\nfunction flush() {\n\n\tif (\n\t\t!gfx.curTex\n\t\t|| !gfx.curShader\n\t\t|| gfx.vqueue.length === 0\n\t\t|| gfx.iqueue.length === 0\n\t) {\n\t\treturn;\n\t}\n\n\tconst gl = app.gl;\n\n\tgfx.curShader.send(gfx.curUniform);\n\tgl.bindBuffer(gl.ARRAY_BUFFER, gfx.vbuf);\n\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, new Float32Array(gfx.vqueue));\n\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gfx.ibuf);\n\tgl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, 0, new Uint16Array(gfx.iqueue));\n\tgfx.curShader.bind();\n\tgfx.curTex.bind();\n\tgl.drawElements(gl.TRIANGLES, gfx.iqueue.length, gl.UNSIGNED_SHORT, 0);\n\tgfx.curTex.unbind();\n\tgfx.curShader.unbind();\n\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n\tgfx.iqueue = [];\n\tgfx.vqueue = [];\n\n\tgfx.drawCalls++;\n\n}\n\n// start a rendering frame, reset some states\nfunction frameStart() {\n\n\tapp.gl.clear(app.gl.COLOR_BUFFER_BIT);\n\n\tif (!gopt.background) {\n\t\tdrawUVQuad({\n\t\t\twidth: width(),\n\t\t\theight: height(),\n\t\t\tquad: new Quad(\n\t\t\t\t0,\n\t\t\t\t0,\n\t\t\t\twidth() * app.scale / BG_GRID_SIZE,\n\t\t\t\theight() * app.scale / BG_GRID_SIZE,\n\t\t\t),\n\t\t\ttex: gfx.bgTex,\n\t\t\tfixed: true,\n\t\t})\n\t}\n\n\tgfx.drawCalls = 0;\n\tgfx.transformStack = [];\n\tgfx.transform = new Mat4();\n\n}\n\nfunction frameEnd() {\n\tflush();\n\tgfx.lastDrawCalls = gfx.drawCalls;\n}\n\nfunction drawCalls() {\n\treturn gfx.lastDrawCalls;\n}\n\n// convert a screen space coordinate to webgl normalized device coordinate\nfunction screen2ndc(pt: Vec2): Vec2 {\n\treturn vec2(\n\t\tpt.x / width() * 2 - 1,\n\t\t-pt.y / height() * 2 + 1,\n\t);\n}\n\n// convert a webgl normalied device coordinate to screen space coordinate\nfunction ndc2screen(pt: Vec2): Vec2 {\n\treturn vec2(\n\t\t(pt.x + 1) / 2 * width(),\n\t\t-(pt.y - 1) / 2 * height(),\n\t);\n}\n\nfunction applyMatrix(m: Mat4) {\n\tgfx.transform = m.clone();\n}\n\nfunction pushTranslate(...args) {\n\tif (args[0] === undefined) return;\n\tconst p = vec2(...args);\n\tif (p.x === 0 && p.y === 0) return;\n\tgfx.transform = gfx.transform.translate(p);\n}\n\nfunction pushScale(...args) {\n\tif (args[0] === undefined) return;\n\tconst p = vec2(...args);\n\tif (p.x === 1 && p.y === 1) return;\n\tgfx.transform = gfx.transform.scale(p);\n}\n\nfunction pushRotateX(a: number) {\n\tif (!a) {\n\t\treturn;\n\t}\n\tgfx.transform = gfx.transform.rotateX(a);\n}\n\nfunction pushRotateY(a: number) {\n\tif (!a) {\n\t\treturn;\n\t}\n\tgfx.transform = gfx.transform.rotateY(a);\n}\n\nfunction pushRotateZ(a: number) {\n\tif (!a) {\n\t\treturn;\n\t}\n\tgfx.transform = gfx.transform.rotateZ(a);\n}\n\nfunction pushTransform() {\n\tgfx.transformStack.push(gfx.transform.clone());\n}\n\nfunction popTransform() {\n\tif (gfx.transformStack.length > 0) {\n\t\tgfx.transform = gfx.transformStack.pop();\n\t}\n}\n\n// draw a uv textured quad\nfunction drawUVQuad(opt: DrawUVQuadOpt) {\n\n\tif (opt.width === undefined || opt.height === undefined) {\n\t\tthrow new Error(\"drawUVQuad() requires property \\\"width\\\" and \\\"height\\\".\");\n\t}\n\n\tif (opt.width <= 0 || opt.height <= 0) {\n\t\treturn;\n\t}\n\n\tconst w = opt.width;\n\tconst h = opt.height;\n\tconst origin = originPt(opt.origin || DEF_ORIGIN);\n\tconst offset = origin.scale(vec2(w, h).scale(-0.5));\n\tconst q = opt.quad || new Quad(0, 0, 1, 1);\n\tconst color = opt.color || rgb(255, 255, 255);\n\tconst opacity = opt.opacity ?? 1;\n\n\tpushTransform();\n\tpushTranslate(opt.pos);\n\tpushRotateZ(opt.angle);\n\tpushScale(opt.scale);\n\tpushTranslate(offset);\n\n\tdrawRaw([\n\t\t{\n\t\t\tpos: vec3(-w / 2, h / 2, 0),\n\t\t\tuv: vec2(opt.flipX ? q.x + q.w : q.x, opt.flipY ? q.y : q.y + q.h),\n\t\t\tcolor: color,\n\t\t\topacity: opacity,\n\t\t},\n\t\t{\n\t\t\tpos: vec3(-w / 2, -h / 2, 0),\n\t\t\tuv: vec2(opt.flipX ? q.x + q.w : q.x, opt.flipY ? q.y + q.h : q.y),\n\t\t\tcolor: color,\n\t\t\topacity: opacity,\n\t\t},\n\t\t{\n\t\t\tpos: vec3(w / 2, -h / 2, 0),\n\t\t\tuv: vec2(opt.flipX ? q.x : q.x + q.w, opt.flipY ? q.y + q.h : q.y),\n\t\t\tcolor: color,\n\t\t\topacity: opacity,\n\t\t},\n\t\t{\n\t\t\tpos: vec3(w / 2, h / 2, 0),\n\t\t\tuv: vec2(opt.flipX ? q.x : q.x + q.w, opt.flipY ? q.y : q.y + q.h),\n\t\t\tcolor: color,\n\t\t\topacity: opacity,\n\t\t},\n\t], [0, 1, 3, 1, 2, 3], opt.fixed, opt.tex, opt.shader, opt.uniform);\n\n\tpopTransform();\n\n}\n\n// TODO: clean\nfunction drawTexture(opt: DrawTextureOpt) {\n\n\tif (!opt.tex) {\n\t\tthrow new Error(\"drawTexture() requires property \\\"tex\\\".\");\n\t}\n\n\tconst q = opt.quad ?? new Quad(0, 0, 1, 1);\n\tconst w = opt.tex.width * q.w;\n\tconst h = opt.tex.height * q.h;\n\tconst scale = vec2(1);\n\n\tif (opt.tiled) {\n\n\t\t// TODO: draw fract\n\t\tconst repX = Math.ceil((opt.width || w) / w);\n\t\tconst repY = Math.ceil((opt.height || h) / h);\n\t\tconst origin = originPt(opt.origin || DEF_ORIGIN).add(vec2(1, 1)).scale(0.5);\n\t\tconst offset = origin.scale(repX * w, repY * h);\n\n\t\t// TODO: rotation\n\t\tfor (let i = 0; i < repX; i++) {\n\t\t\tfor (let j = 0; j < repY; j++) {\n\t\t\t\tdrawUVQuad({\n\t\t\t\t\t...opt,\n\t\t\t\t\tpos: (opt.pos || vec2(0)).add(vec2(w * i, h * j)).sub(offset),\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tscale: scale.scale(opt.scale || vec2(1)),\n\t\t\t\t\ttex: opt.tex,\n\t\t\t\t\tquad: q,\n\t\t\t\t\twidth: w,\n\t\t\t\t\theight: h,\n\t\t\t\t\torigin: \"topleft\",\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t} else {\n\n\t\t// TODO: should this ignore scale?\n\t\tif (opt.width && opt.height) {\n\t\t\tscale.x = opt.width / w;\n\t\t\tscale.y = opt.height / h;\n\t\t} else if (opt.width) {\n\t\t\tscale.x = opt.width / w;\n\t\t\tscale.y = scale.x;\n\t\t} else if (opt.height) {\n\t\t\tscale.y = opt.height / h;\n\t\t\tscale.x = scale.y;\n\t\t}\n\n\t\tdrawUVQuad({\n\t\t\t...opt,\n\t\t\t// @ts-ignore\n\t\t\tscale: scale.scale(opt.scale || vec2(1)),\n\t\t\ttex: opt.tex,\n\t\t\tquad: q,\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t});\n\n\t}\n\n}\n\n// TODO: use native asset loader tracking\nconst loading = new Set();\n\nfunction drawSprite(opt: DrawSpriteOpt) {\n\n\tif (!opt.sprite) {\n\t\tthrow new Error(`drawSprite() requires property \"sprite\"`);\n\t}\n\n\tconst spr = findAsset(opt.sprite, assets.sprites);\n\n\tif (!spr) {\n\n\t\t// if passes a source url, we load it implicitly\n\t\tif (typeof opt.sprite === \"string\") {\n\t\t\tif (!loading.has(opt.sprite)) {\n\t\t\t\tloading.add(opt.sprite);\n\t\t\t\tloadSprite(opt.sprite, opt.sprite)\n\t\t\t\t\t.then((a) => loading.delete(opt.sprite));\n\t\t\t}\n\t\t\treturn;\n\t\t} else {\n\t\t\tthrow new Error(`sprite not found: \"${opt.sprite}\"`);\n\t\t}\n\n\t}\n\n\tconst q = spr.frames[opt.frame ?? 0];\n\n\tif (!q) {\n\t\tthrow new Error(`frame not found: ${opt.frame ?? 0}`);\n\t}\n\n\tdrawTexture({\n\t\t...opt,\n\t\ttex: spr.tex,\n\t\tquad: q.scale(opt.quad || new Quad(0, 0, 1, 1)),\n\t\tuniform: opt.uniform,\n\t});\n\n}\n\n// generate vertices to form an arc\nfunction getArcPts(\n\tpos: Vec2,\n\tradiusX: number,\n\tradiusY: number,\n\tstart: number,\n\tend: number,\n\tres: number = 1,\n): Vec2[] {\n\n\t// normalize and turn start and end angles to radians\n\tstart = deg2rad(start % 360);\n\tend = deg2rad(end % 360);\n\tif (end <= start) end += Math.PI * 2;\n\n\t// TODO: better way to get this?\n\t// the number of vertices is sqrt(r1 + r2) * 3 * res with a minimum of 16\n\tconst nverts = Math.ceil(Math.max(Math.sqrt(radiusX + radiusY) * 3 * (res || 1), 16));\n\tconst step = (end - start) / nverts;\n\tconst pts = [];\n\n\t// calculate vertices\n\tfor (let a = start; a < end; a += step) {\n\t\tpts.push(pos.add(radiusX * Math.cos(a), radiusY * Math.sin(a)));\n\t}\n\n\t// doing this on the side due to possible floating point inaccuracy\n\tpts.push(pos.add(radiusX * Math.cos(end), radiusY * Math.sin(end)));\n\n\treturn pts;\n\n}\n\nfunction drawRect(opt: DrawRectOpt) {\n\n\tif (opt.width === undefined || opt.height === undefined) {\n\t\tthrow new Error(\"drawRect() requires property \\\"width\\\" and \\\"height\\\".\");\n\t}\n\n\tif (opt.width <= 0 || opt.height <= 0) {\n\t\treturn;\n\t}\n\n\tconst w = opt.width;\n\tconst h = opt.height;\n\tconst origin = originPt(opt.origin || DEF_ORIGIN).add(1, 1);\n\tconst offset = origin.scale(vec2(w, h).scale(-0.5));\n\n\tlet pts = [\n\t\tvec2(0, 0),\n\t\tvec2(w, 0),\n\t\tvec2(w, h),\n\t\tvec2(0, h),\n\t];\n\n\t// TODO: drawPolygon should handle generic rounded corners\n\tif (opt.radius) {\n\n\t\t// maxium radius is half the shortest side\n\t\tconst r = Math.min(Math.min(w, h) / 2, opt.radius);\n\n\t\tpts = [\n\t\t\tvec2(r, 0),\n\t\t\tvec2(w - r, 0),\n\t\t\t...getArcPts(vec2(w - r, r), r, r, 270, 360),\n\t\t\tvec2(w, r),\n\t\t\tvec2(w, h - r),\n\t\t\t...getArcPts(vec2(w - r, h - r), r, r, 0, 90),\n\t\t\tvec2(w - r, h),\n\t\t\tvec2(r, h),\n\t\t\t...getArcPts(vec2(r, h - r), r, r, 90, 180),\n\t\t\tvec2(0, h - r),\n\t\t\tvec2(0, r),\n\t\t\t...getArcPts(vec2(r, r), r, r, 180, 270),\n\t\t];\n\n\t}\n\n\tdrawPolygon({ ...opt, offset, pts });\n\n}\n\nfunction drawLine(opt: DrawLineOpt) {\n\n\tconst { p1, p2 } = opt;\n\n\tif (!p1 || !p2) {\n\t\tthrow new Error(\"drawLine() requires properties \\\"p1\\\" and \\\"p2\\\".\");\n\t}\n\n\tconst w = opt.width || 1;\n\n\t// the displacement from the line end point to the corner point\n\tconst dis = p2.sub(p1).unit().normal().scale(w * 0.5);\n\n\t// calculate the 4 corner points of the line polygon\n\tconst verts = [\n\t\tp1.sub(dis),\n\t\tp1.add(dis),\n\t\tp2.add(dis),\n\t\tp2.sub(dis),\n\t].map((p) => ({\n\t\tpos: vec3(p.x, p.y, 0),\n\t\tuv: vec2(0),\n\t\tcolor: opt.color ?? Color.WHITE,\n\t\topacity: opt.opacity ?? 1,\n\t}));\n\n\tdrawRaw(verts, [0, 1, 3, 1, 2, 3], opt.fixed, gfx.defTex, opt.shader, opt.uniform);\n\n}\n\nfunction drawLines(opt: DrawLinesOpt) {\n\n\tconst pts = opt.pts;\n\n\tif (!pts) {\n\t\tthrow new Error(\"drawLines() requires property \\\"pts\\\".\");\n\t}\n\n\tif (pts.length < 2) {\n\t\treturn;\n\t}\n\n\tif (opt.radius && pts.length >= 3) {\n\n\t\t// TODO: rounded vertices for arbitury polygonic shape\n\t\tlet minLen = pts[0].dist(pts[1]);\n\n\t\tfor (let i = 1; i < pts.length - 1; i++) {\n\t\t\tminLen = Math.min(pts[i].dist(pts[i + 1]), minLen);\n\t\t}\n\n\t\tconst radius = Math.min(opt.radius, minLen / 2);\n\n\t\tdrawLine({ ...opt, p1: pts[0], p2: pts[1], });\n\n\t\tfor (let i = 1; i < pts.length - 2; i++) {\n\t\t\tconst p1 = pts[i];\n\t\t\tconst p2 = pts[i + 1];\n\t\t\tdrawLine({\n\t\t\t\t...opt,\n\t\t\t\tp1: p1,\n\t\t\t\tp2: p2,\n\t\t\t});\n\t\t}\n\n\t\tdrawLine({ ...opt, p1: pts[pts.length - 2], p2: pts[pts.length - 1], });\n\n\t} else {\n\n\t\tfor (let i = 0; i < pts.length - 1; i++) {\n\t\t\tdrawLine({\n\t\t\t\t...opt,\n\t\t\t\tp1: pts[i],\n\t\t\t\tp2: pts[i + 1],\n\t\t\t});\n\t\t}\n\n\t}\n\n}\n\nfunction drawTriangle(opt: DrawTriangleOpt) {\n\tif (!opt.p1 || !opt.p2 || !opt.p3) {\n\t\tthrow new Error(\"drawPolygon() requires properties \\\"p1\\\", \\\"p2\\\" and \\\"p3\\\".\");\n\t}\n\treturn drawPolygon({\n\t\t...opt,\n\t\tpts: [opt.p1, opt.p2, opt.p3],\n\t});\n}\n\n// TODO: origin\nfunction drawCircle(opt: DrawCircleOpt) {\n\n\tif (!opt.radius) {\n\t\tthrow new Error(\"drawCircle() requires property \\\"radius\\\".\");\n\t}\n\n\tif (opt.radius === 0) {\n\t\treturn;\n\t}\n\n\tdrawEllipse({\n\t\t...opt,\n\t\tradiusX: opt.radius,\n\t\tradiusY: opt.radius,\n\t\tangle: 0,\n\t});\n\n}\n\n// TODO: use fan-like triangulation\nfunction drawEllipse(opt: DrawEllipseOpt) {\n\n\tif (opt.radiusX === undefined || opt.radiusY === undefined) {\n\t\tthrow new Error(\"drawEllipse() requires properties \\\"radiusX\\\" and \\\"radiusY\\\".\");\n\t}\n\n\tif (opt.radiusX === 0 || opt.radiusY === 0) {\n\t\treturn;\n\t}\n\n\tdrawPolygon({\n\t\t...opt,\n\t\tpts: getArcPts(\n\t\t\tvec2(0),\n\t\t\topt.radiusX,\n\t\t\topt.radiusY,\n\t\t\topt.start ?? 0,\n\t\t\topt.end ?? 360,\n\t\t\topt.resolution\n\t\t),\n\t\tradius: 0,\n\t});\n\n}\n\nfunction drawPolygon(opt: DrawPolygonOpt) {\n\n\tif (!opt.pts) {\n\t\tthrow new Error(\"drawPolygon() requires property \\\"pts\\\".\");\n\t}\n\n\tconst npts = opt.pts.length;\n\n\tif (npts < 3) {\n\t\treturn;\n\t}\n\n\tpushTransform();\n\tpushTranslate(opt.pos);\n\tpushScale(opt.scale);\n\tpushRotateZ(opt.angle);\n\tpushTranslate(opt.offset);\n\n\tif (opt.fill !== false) {\n\n\t\tconst color = opt.color ?? Color.WHITE;\n\n\t\tconst verts = opt.pts.map((pt) => ({\n\t\t\tpos: vec3(pt.x, pt.y, 0),\n\t\t\tuv: vec2(0, 0),\n\t\t\tcolor: color,\n\t\t\topacity: opt.opacity ?? 1,\n\t\t}));\n\n\t\t// TODO: better triangulation\n\t\tconst indices = [...Array(npts - 2).keys()]\n\t\t\t.map((n) => [0, n + 1, n + 2])\n\t\t\t.flat();\n\n\t\tdrawRaw(verts, opt.indices ?? indices, opt.fixed, gfx.defTex, opt.shader, opt.uniform);\n\n\t}\n\n\tif (opt.outline) {\n\t\tdrawLines({\n\t\t\tpts: [ ...opt.pts, opt.pts[0] ],\n\t\t\tradius: opt.radius,\n\t\t\twidth: opt.outline.width,\n\t\t\tcolor: opt.outline.color,\n\t\t\tuniform: opt.uniform,\n\t\t\tfixed: opt.fixed,\n\t\t});\n\t}\n\n\tpopTransform();\n\n}\n\nfunction applyCharTransform(fchar: FormattedChar, tr: CharTransform) {\n\tif (tr.pos) fchar.pos = fchar.pos.add(tr.pos);\n\tif (tr.scale) fchar.scale = fchar.scale.scale(vec2(tr.scale));\n\tif (tr.angle) fchar.angle += tr.angle;\n\tif (tr.color) fchar.color = fchar.color.mult(tr.color);\n\tif (tr.opacity) fchar.opacity *= tr.opacity;\n}\n\n// TODO: escape\nconst TEXT_STYLE_RE = /\\[(?<text>[^\\]]*)\\]\\.(?<style>[\\w\\.]+)+/g;\n\nfunction compileStyledText(text: string): {\n\tcharStyleMap: Record<number, {\n\t\tlocalIdx: number,\n\t\tstyles: string[],\n\t}>,\n\ttext: string,\n} {\n\n\tconst charStyleMap = {};\n\t// get the text without the styling syntax\n\tconst renderText = text.replace(TEXT_STYLE_RE, \"$1\");\n\tlet idxOffset = 0;\n\n\t// put each styled char index into a map for easy access when iterating each char\n\tfor (const match of text.matchAll(TEXT_STYLE_RE)) {\n\t\tconst styles = match.groups.style.split(\".\");\n\t\tconst origIdx = match.index - idxOffset;\n\t\tfor (\n\t\t\tlet i = origIdx;\n\t\t\ti < match.index + match.groups.text.length;\n\t\t\ti++\n\t\t) {\n\t\t\tcharStyleMap[i] = {\n\t\t\t\tlocalIdx: i - origIdx,\n\t\t\t\tstyles: styles,\n\t\t\t};\n\t\t}\n\t\t// omit \"[\", \"]\", \".\" and the style text in the format string when calculating index\n\t\tidxOffset += 3 + match.groups.style.length;\n\t}\n\n\treturn {\n\t\tcharStyleMap: charStyleMap,\n\t\ttext: renderText,\n\t};\n\n}\n\nfunction findAsset<T>(src: string | T, lib: Record<string, T>, def?: string): T | undefined {\n\tif (src) {\n\t\treturn typeof src === \"string\" ? lib[src] : src;\n\t} else if (def) {\n\t\treturn lib[def];\n\t}\n}\n\n// format text and return a list of chars with their calculated position\nfunction formatText(opt: DrawTextOpt): FormattedText {\n\n\tif (opt.text === undefined) {\n\t\tthrow new Error(\"formatText() requires property \\\"text\\\".\");\n\t}\n\n\tconst font = findAsset(opt.font ?? gopt.font, assets.fonts, DEF_FONT);\n\n\tif (!font) {\n\t\tthrow new Error(`Font not found: ${opt.font}`);\n\t}\n\n\tconst { charStyleMap, text } = compileStyledText(opt.text + \"\");\n\tconst chars = text.split(\"\");\n\tconst gw = font.qw * font.tex.width;\n\tconst gh = font.qh * font.tex.height;\n\tconst size = opt.size || gh;\n\tconst scale = vec2(size / gh).scale(vec2(opt.scale || 1));\n\tconst cw = scale.x * gw + (opt.letterSpacing ?? 0);\n\tconst ch = scale.y * gh + (opt.lineSpacing ?? 0);\n\tlet curX = 0;\n\tlet th = ch;\n\tlet tw = 0;\n\tconst flines = [];\n\tlet curLine = [];\n\tlet lastSpace = null;\n\tlet cursor = 0;\n\n\twhile (cursor < chars.length) {\n\n\t\tlet char = chars[cursor];\n\n\t\t// check new line\n\t\tif (char === \"\\n\") {\n\t\t\t// always new line on '\\n'\n\t\t\tth += ch;\n\t\t\tcurX = 0;\n\t\t\tlastSpace = null;\n\t\t\tcurLine.push(char);\n\t\t\tflines.push(curLine);\n\t\t\tcurLine = [];\n\t\t} else if ((opt.width ? (curX + cw > opt.width) : false)) {\n\t\t\t// new line on last word if width exceeds\n\t\t\tth += ch;\n\t\t\tcurX = 0;\n\t\t\tif (lastSpace != null) {\n\t\t\t\tcursor -= curLine.length - lastSpace;\n\t\t\t\tchar = chars[cursor];\n\t\t\t\tcurLine = curLine.slice(0, lastSpace);\n\t\t\t}\n\t\t\tlastSpace = null;\n\t\t\tflines.push(curLine);\n\t\t\tcurLine = [];\n\t\t}\n\n\t\t// push char\n\t\tif (char !== \"\\n\") {\n\t\t\tcurLine.push(char);\n\t\t\tcurX += cw;\n\t\t\tif (char === \" \") {\n\t\t\t\tlastSpace = curLine.length;\n\t\t\t}\n\t\t}\n\n\t\ttw = Math.max(tw, curX);\n\t\tcursor++;\n\n\t}\n\n\tflines.push(curLine);\n\n\tif (opt.width) {\n\t\ttw = opt.width;\n\t}\n\n\t// whole text offset\n\tconst fchars = [];\n\tconst pos = vec2(opt.pos || 0);\n\tconst offset = originPt(opt.origin || DEF_ORIGIN).scale(0.5);\n\t// this math is complicated i forgot how it works instantly\n\tconst ox = -offset.x * cw - (offset.x + 0.5) * (tw - cw);\n\tconst oy = -offset.y * ch - (offset.y + 0.5) * (th - ch);\n\tlet idx = 0;\n\n\tflines.forEach((line, ln) => {\n\n\t\t// line offset\n\t\tconst oxl = (tw - line.length * cw) * (offset.x + 0.5);\n\n\t\tline.forEach((char, cn) => {\n\t\t\tconst qpos = font.map[char];\n\t\t\tconst x = cn * cw;\n\t\t\tconst y = ln * ch;\n\t\t\tif (qpos) {\n\t\t\t\tconst fchar: FormattedChar = {\n\t\t\t\t\ttex: font.tex,\n\t\t\t\t\tquad: new Quad(qpos.x, qpos.y, font.qw, font.qh),\n\t\t\t\t\tch: char,\n\t\t\t\t\tpos: vec2(pos.x + x + ox + oxl, pos.y + y + oy),\n\t\t\t\t\topacity: opt.opacity,\n\t\t\t\t\tcolor: opt.color ?? rgb(255, 255, 255),\n\t\t\t\t\tscale: scale,\n\t\t\t\t\tangle: 0,\n\t\t\t\t\tuniform: opt.uniform,\n\t\t\t\t\tfixed: opt.fixed,\n\t\t\t\t}\n\t\t\t\tif (opt.transform) {\n\t\t\t\t\tconst tr = typeof opt.transform === \"function\"\n\t\t\t\t\t\t? opt.transform(idx, char)\n\t\t\t\t\t\t: opt.transform;\n\t\t\t\t\tif (tr) {\n\t\t\t\t\t\tapplyCharTransform(fchar, tr);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (charStyleMap[idx]) {\n\t\t\t\t\tconst { styles, localIdx } = charStyleMap[idx];\n\t\t\t\t\tfor (const name of styles) {\n\t\t\t\t\t\tconst style = opt.styles[name];\n\t\t\t\t\t\tconst tr = typeof style === \"function\"\n\t\t\t\t\t\t\t? style(localIdx, char)\n\t\t\t\t\t\t\t: style;\n\t\t\t\t\t\tif (tr) {\n\t\t\t\t\t\t\tapplyCharTransform(fchar, tr);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfchars.push(fchar);\n\t\t\t}\n\t\t\tidx += 1;\n\t\t});\n\t});\n\n\treturn {\n\t\twidth: tw,\n\t\theight: th,\n\t\tchars: fchars,\n\t};\n\n}\n\nfunction drawText(opt: DrawTextOpt) {\n\tdrawFormattedText(formatText(opt));\n}\n\n// TODO: rotation\nfunction drawFormattedText(ftext: FormattedText) {\n\tfor (const ch of ftext.chars) {\n\t\tdrawUVQuad({\n\t\t\ttex: ch.tex,\n\t\t\twidth: ch.tex.width * ch.quad.w,\n\t\t\theight: ch.tex.height * ch.quad.h,\n\t\t\tpos: ch.pos,\n\t\t\tscale: ch.scale,\n\t\t\tangle: ch.angle,\n\t\t\tcolor: ch.color,\n\t\t\topacity: ch.opacity,\n\t\t\tquad: ch.quad,\n\t\t\t// TODO: topleft\n\t\t\torigin: \"center\",\n\t\t\tuniform: ch.uniform,\n\t\t\tfixed: ch.fixed,\n\t\t});\n\t}\n}\n\n/**\n * Update viewport based on user setting and fullscreen state\n */\nfunction updateViewport() {\n\n\tconst gl = app.gl;\n\n\t// canvas size\n\tconst cw = gl.drawingBufferWidth;\n\tconst ch = gl.drawingBufferHeight;\n\n\t// game size\n\tconst gw = width();\n\tconst gh = height();\n\n\tif (isFullscreen()) {\n\t\t// TODO: doesn't work with letterbox\n\t\tconst ww = window.innerWidth;\n\t\tconst wh = window.innerHeight;\n\t\tconst rw = ww / wh;\n\t\tconst rc = cw / ch;\n\t\tif (rw > rc) {\n\t\t\tconst sw = window.innerHeight * rc;\n\t\t\tgfx.viewport = {\n\t\t\t\tx: (ww - sw) / 2,\n\t\t\t\ty: 0,\n\t\t\t\twidth: sw,\n\t\t\t\theight: wh,\n\t\t\t};\n\t\t} else {\n\t\t\tconst sh = window.innerWidth / rc;\n\t\t\tgfx.viewport = {\n\t\t\t\tx: 0,\n\t\t\t\ty: (wh - sh) / 2,\n\t\t\t\twidth: ww,\n\t\t\t\theight: sh,\n\t\t\t};\n\t\t}\n\t\treturn;\n\t}\n\n\tif (gopt.letterbox) {\n\n\t\tif (!gopt.width || !gopt.height) {\n\t\t\tthrow new Error(\"Letterboxing requires width and height defined.\");\n\t\t}\n\n\t\tconst rc = cw / ch;\n\t\tconst rg = gopt.width / gopt.height;\n\n\t\tif (rc > rg) {\n\t\t\tif (!gopt.stretch) {\n\t\t\t\tgfx.width = ch * rg;\n\t\t\t\tgfx.height = ch;\n\t\t\t}\n\t\t\tconst sw = ch * rg;\n\t\t\tconst sh = ch;\n\t\t\tconst x = (cw - sw) / 2;\n\t\t\tgl.scissor(x, 0, sw, sh);\n\t\t\tgl.viewport(x, 0, sw, ch);\n\t\t\tgfx.viewport = {\n\t\t\t\tx: x,\n\t\t\t\ty: 0,\n\t\t\t\twidth: sw,\n\t\t\t\theight: ch,\n\t\t\t};\n\t\t} else {\n\t\t\tif (!gopt.stretch) {\n\t\t\t\tgfx.width = cw;\n\t\t\t\tgfx.height = cw / rg;\n\t\t\t}\n\t\t\tconst sw = cw;\n\t\t\tconst sh = cw / rg;\n\t\t\tconst y = (ch - sh) / 2;\n\t\t\tgl.scissor(0, y, sw, sh);\n\t\t\tgl.viewport(0, y, cw, sh);\n\t\t\tgfx.viewport = {\n\t\t\t\tx: 0,\n\t\t\t\ty: y,\n\t\t\t\twidth: cw,\n\t\t\t\theight: sh,\n\t\t\t};\n\t\t}\n\n\t\treturn;\n\n\t}\n\n\tif (gopt.stretch) {\n\n\t\tif (!gopt.width || !gopt.height) {\n\t\t\tthrow new Error(\"Stretching requires width and height defined.\");\n\t\t}\n\n\t\tgl.viewport(0, 0, cw, ch);\n\n\t\tgfx.viewport = {\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\twidth: cw,\n\t\t\theight: ch,\n\t\t};\n\n\t\treturn;\n\t}\n\n\tgfx.width = cw / app.scale;\n\tgfx.height = ch / app.scale;\n\tgl.viewport(0, 0, cw, ch);\n\n\tgfx.viewport = {\n\t\tx: 0,\n\t\ty: 0,\n\t\twidth: cw,\n\t\theight: ch,\n\t};\n\n}\n\n// get game width\nfunction width(): number {\n\treturn gfx.width;\n}\n\n// get game height\nfunction height(): number {\n\treturn gfx.height;\n}\n\n// TODO: support remove events\napp.canvas.addEventListener(\"mousemove\", (e) => {\n\tapp.mousePos = vec2(\n\t\t(e.offsetX - gfx.viewport.x) * width() / gfx.viewport.width,\n\t\t(e.offsetY - gfx.viewport.y) * height() / gfx.viewport.height,\n\t);\n\tapp.mouseDeltaPos = vec2(e.movementX, e.movementY).scale(1 / app.scale);\n\tapp.isMouseMoved = true;\n});\n\napp.canvas.addEventListener(\"mousedown\", (e) => {\n\tconst m = MOUSE_BUTTONS[e.button];\n\tif (m) {\n\t\tapp.mouseStates[m] = \"pressed\";\n\t}\n});\n\napp.canvas.addEventListener(\"mouseup\", (e) => {\n\tconst m = MOUSE_BUTTONS[e.button];\n\tif (m) {\n\t\tapp.mouseStates[m] = \"released\";\n\t}\n});\n\napp.canvas.addEventListener(\"keydown\", (e) => {\n\n\tconst k = KEY_ALIAS[e.key] || e.key.toLowerCase();\n\n\tif (PREVENT_DEFAULT_KEYS.includes(k)) {\n\t\te.preventDefault();\n\t}\n\n\tif (k.length === 1) {\n\t\tapp.charInputted.push(e.key);\n\t}\n\n\tif (k === \"space\") {\n\t\tapp.charInputted.push(\" \");\n\t}\n\n\tif (e.repeat) {\n\t\tapp.isKeyPressedRepeat = true;\n\t\tapp.keyStates[k] = \"rpressed\";\n\t} else {\n\t\tapp.isKeyPressed = true;\n\t\tapp.keyStates[k] = \"pressed\";\n\t}\n\n});\n\napp.canvas.addEventListener(\"keyup\", (e: KeyboardEvent) => {\n\tconst k = KEY_ALIAS[e.key] || e.key.toLowerCase();\n\tapp.keyStates[k] = \"released\";\n\tapp.isKeyReleased = true;\n});\n\napp.canvas.addEventListener(\"touchstart\", (e) => {\n\tif (!gopt.touchToMouse) return;\n\t// disable long tap context menu\n\te.preventDefault();\n\tconst t = e.touches[0];\n\tapp.mousePos = vec2(t.clientX, t.clientY).scale(1 / app.scale);\n\tapp.mouseStates[\"left\"] = \"pressed\";\n});\n\napp.canvas.addEventListener(\"touchmove\", (e) => {\n\tif (!gopt.touchToMouse) return;\n\t// disable scrolling\n\te.preventDefault();\n\tconst t = e.touches[0];\n\tapp.mousePos = vec2(t.clientX, t.clientY).scale(1 / app.scale);\n\tapp.isMouseMoved = true;\n});\n\napp.canvas.addEventListener(\"touchend\", (e) => {\n\tif (!gopt.touchToMouse) return;\n\tapp.mouseStates[\"left\"] = \"released\";\n});\n\napp.canvas.addEventListener(\"touchcancel\", (e) => {\n\tif (!gopt.touchToMouse) return;\n\tapp.mouseStates[\"left\"] = \"released\";\n});\n\napp.canvas.addEventListener(\"touchstart\", (e) => {\n\t[...e.changedTouches].forEach((t) => {\n\t\tgame.trigger(\"onTouchStart\", t.identifier, vec2(t.clientX, t.clientY).scale(1 / app.scale));\n\t});\n});\n\napp.canvas.addEventListener(\"touchmove\", (e) => {\n\t[...e.changedTouches].forEach((t) => {\n\t\tgame.trigger(\"onTouchMove\", t.identifier, vec2(t.clientX, t.clientY).scale(1 / app.scale));\n\t});\n});\n\napp.canvas.addEventListener(\"touchend\", (e) => {\n\t[...e.changedTouches].forEach((t) => {\n\t\tgame.trigger(\"onTouchEnd\", t.identifier, vec2(t.clientX, t.clientY).scale(1 / app.scale));\n\t});\n});\n\napp.canvas.addEventListener(\"contextmenu\", function (e) {\n\te.preventDefault();\n});\n\ndocument.addEventListener(\"visibilitychange\", () => {\n\tswitch (document.visibilityState) {\n\t\tcase \"visible\":\n\t\t\t// prevent a surge of dt() when switch back after the tab being hidden for a while\n\t\t\tapp.skipTime = true;\n\t\t\t// TODO: don't resume if debug.paused\n\t\t\taudio.ctx.resume();\n\t\t\tbreak;\n\t\tcase \"hidden\":\n\t\t\taudio.ctx.suspend();\n\t\t\tbreak;\n\t}\n});\n\n// TODO: not quite working\n// window.addEventListener(\"resize\", () => {\n// \tif (!(gopt.width && gopt.height && !gopt.stretch)) {\n// \t\tapp.canvas.width = app.canvas.parentElement.offsetWidth;\n// \t\tapp.canvas.height = app.canvas.parentElement.offsetHeight;\n// \t}\n// });\n\nfunction mousePos(): Vec2 {\n\treturn app.mousePos.clone();\n}\n\nfunction mouseDeltaPos(): Vec2 {\n\treturn app.mouseDeltaPos.clone();\n}\n\nfunction isMousePressed(m = \"left\"): boolean {\n\treturn app.mouseStates[m] === \"pressed\";\n}\n\nfunction isMouseDown(m = \"left\"): boolean {\n\treturn app.mouseStates[m] === \"pressed\" || app.mouseStates[m] === \"down\";\n}\n\nfunction isMouseReleased(m = \"left\"): boolean {\n\treturn app.mouseStates[m] === \"released\";\n}\n\nfunction isMouseMoved(): boolean {\n\treturn app.isMouseMoved;\n}\n\nfunction isKeyPressed(k?: string): boolean {\n\tif (k === undefined) {\n\t\treturn app.isKeyPressed;\n\t} else {\n\t\treturn app.keyStates[k] === \"pressed\";\n\t}\n}\n\nfunction isKeyPressedRepeat(k: string): boolean {\n\tif (k === undefined) {\n\t\treturn app.isKeyPressedRepeat;\n\t} else {\n\t\treturn app.keyStates[k] === \"pressed\" || app.keyStates[k] === \"rpressed\";\n\t}\n}\n\nfunction isKeyDown(k: string): boolean {\n\treturn app.keyStates[k] === \"pressed\"\n\t\t|| app.keyStates[k] === \"rpressed\"\n\t\t|| app.keyStates[k] === \"down\";\n}\n\nfunction isKeyReleased(k?: string): boolean {\n\tif (k === undefined) {\n\t\treturn app.isKeyReleased;\n\t} else {\n\t\treturn app.keyStates[k] === \"released\";\n\t}\n}\n\nfunction charInputted(): string[] {\n\treturn [...app.charInputted];\n}\n\nfunction time(): number {\n\treturn app.time;\n}\n\n// get a base64 png image of canvas\nfunction screenshot(): string {\n\treturn app.canvas.toDataURL();\n}\n\n// TODO: custom cursor\nfunction cursor(c?: Cursor): Cursor {\n\tif (c) {\n\t\tapp.canvas.style.cursor = c;\n\t}\n\treturn app.canvas.style.cursor;\n}\n\nfunction fullscreen(f: boolean = true) {\n\tif (f) {\n\t\tenterFullscreen(app.canvas);\n\t} else {\n\t\texitFullscreen();\n\t}\n}\n\nfunction isFullscreen(): boolean {\n\treturn Boolean(getFullscreenElement());\n}\n\nfunction quit() {\n\tcancelAnimationFrame(app.loopID);\n\tapp.stopped = true;\n}\n\nconst debug: Debug = {\n\tinspect: false,\n\ttimeScale: 1,\n\tshowLog: true,\n\tfps: () => app.fpsCounter.fps,\n\tobjCount(): number {\n\t\t// TODO: recursive count\n\t\treturn game.root.children.length;\n\t},\n\tstepFrame: updateFrame,\n\tdrawCalls: () => gfx.drawCalls,\n\tclearLog: () => game.logs = [],\n\tlog: (msg) => game.logs.unshift(`[${time().toFixed(2)}].time [${msg}].info`),\n\terror: (msg) => game.logs.unshift(`[${time().toFixed(2)}].time [${msg}].error`),\n\tcurRecording: null,\n\tget paused() {\n\t\treturn app.paused;\n\t},\n\tset paused(v) {\n\t\tapp.paused = v;\n\t\tif (v) {\n\t\t\taudio.ctx.suspend();\n\t\t} else {\n\t\t\taudio.ctx.resume();\n\t\t}\n\t}\n};\n\nfunction dt() {\n\treturn app.dt * debug.timeScale;\n}\n\nfunction mouseWorldPos(): Vec2 {\n\tdeprecateMsg(\"mouseWorldPos()\", \"toWorld(mousePos())\");\n\treturn toWorld(mousePos());\n}\n\ntype Camera = {\n\tpos: Vec2,\n\tscale: Vec2,\n\tangle: number,\n\tshake: number,\n};\n\ntype Layer = {\n\torder: number,\n}\n\ntype TaggedEvent = {\n\ttag: string,\n\tcb: (...args) => void,\n};\n\ntype KeyEvent = {\n\tkey: string,\n\tcb(),\n};\n\ntype MouseInputEvent = {\n\tcb(),\n};\n\ntype LoadEvent = () => void;\ntype NextFrameEvent = () => void;\ntype MouseEvent = () => void;\ntype CharEvent = (ch: string) => void;\n\nfunction layers(list: string[], def?: string) {\n\n\tlist.forEach((name, idx) => {\n\t\tgame.layers[name] = idx + 1;\n\t});\n\n\tif (def) {\n\t\tgame.defLayer = def;\n\t}\n\n}\n\nfunction camPos(...pos): Vec2 {\n\tif (pos.length > 0) {\n\t\tgame.cam.pos = vec2(...pos);\n\t}\n\treturn game.cam.pos.clone();\n}\n\nfunction camScale(...scale): Vec2 {\n\tif (scale.length > 0) {\n\t\tgame.cam.scale = vec2(...scale);\n\t}\n\treturn game.cam.scale.clone();\n}\n\nfunction camRot(angle: number): number {\n\tif (angle !== undefined) {\n\t\tgame.cam.angle = angle;\n\t}\n\treturn game.cam.angle;\n}\n\nfunction shake(intensity: number = 12) {\n\tgame.cam.shake = intensity;\n}\n\nfunction toScreen(p: Vec2): Vec2 {\n\treturn game.cam.transform.multVec2(p);\n}\n\nfunction toWorld(p: Vec2): Vec2 {\n\treturn game.cam.transform.invert().multVec2(p);\n}\n\nfunction make<T>(comps: CompList<T>): GameObj<T> {\n\n\tconst compStates = new Map();\n\tconst customState = {};\n\tlet events = {};\n\n\tconst obj = {\n\n\t\t_id: uid(),\n\t\thidden: false,\n\t\tpaused: false,\n\t\tchildren: [],\n\t\tparent: null,\n\n\t\t// TODO: accept gameobj\n\t\tadd<T2>(comps: CompList<T2>): GameObj<T2> {\n\t\t\tif (this !== game.root) {\n\t\t\t\tthrow new Error(\"Children game object not supported yet\");\n\t\t\t}\n\t\t\tconst obj = make(comps);\n\t\t\tobj.parent = this;\n\t\t\tobj.trigger(\"add\");\n\t\t\tonLoad(() => obj.trigger(\"load\"));\n\t\t\tthis.children.push(obj);\n\t\t\treturn obj;\n\t\t},\n\n\t\t// TODO: use add()\n\t\treadd(obj: GameObj): GameObj {\n\t\t\tthis.remove(obj);\n\t\t\tthis.children.push(obj);\n\t\t\treturn obj;\n\t\t},\n\n\t\tremove(obj: GameObj): void {\n\t\t\tconst idx = this.children.indexOf(obj);\n\t\t\tif (idx !== -1) {\n\t\t\t\tobj.parent = null;\n\t\t\t\tobj.trigger(\"destroy\");\n\t\t\t\tthis.children.splice(idx, 1);\n\t\t\t}\n\t\t},\n\n\t\tremoveAll(tag: Tag) {\n\t\t\tthis.every(tag, (obj) => this.remove(obj));\n\t\t},\n\n\t\tupdate() {\n\t\t\tif (this.paused) return;\n\t\t\tthis.revery((child) => child.update());\n\t\t\tthis.trigger(\"update\");\n\t\t},\n\n\t\tdraw() {\n\t\t\tif (this.hidden) return;\n\t\t\tpushTransform();\n\t\t\tpushTranslate(this.pos);\n\t\t\tpushScale(this.scale);\n\t\t\tpushRotateZ(this.angle);\n\t\t\tthis.every((child) => child.draw());\n\t\t\tthis.trigger(\"draw\");\n\t\t\tpopTransform();\n\t\t},\n\n\t\t// use a comp, or tag\n\t\tuse(comp: Comp | Tag) {\n\n\t\t\tif (!comp) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// tag\n\t\t\tif (typeof comp === \"string\") {\n\t\t\t\treturn this.use({\n\t\t\t\t\tid: comp\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// clear if overwrite\n\t\t\tif (comp.id) {\n\t\t\t\tthis.unuse(comp.id);\n\t\t\t\tcompStates.set(comp.id, {});\n\t\t\t}\n\n\t\t\t// state source location\n\t\t\tconst state = comp.id ? compStates.get(comp.id) : customState;\n\n\t\t\tstate.cleanups = [];\n\n\t\t\tfor (const k in comp) {\n\n\t\t\t\tif (COMP_DESC.has(k)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// event / custom method\n\t\t\t\tif (typeof comp[k] === \"function\") {\n\t\t\t\t\tconst func = comp[k].bind(this);\n\t\t\t\t\tif (COMP_EVENTS.has(k)) {\n\t\t\t\t\t\tstate.cleanups.push(this.on(k, func));\n\t\t\t\t\t\tstate[k] = func;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate[k] = func;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tstate[k] = comp[k];\n\t\t\t\t}\n\n\t\t\t\tif (this[k] === undefined) {\n\t\t\t\t\t// assign comp fields to game obj\n\t\t\t\t\tObject.defineProperty(this, k, {\n\t\t\t\t\t\tget: () => state[k],\n\t\t\t\t\t\tset: (val) => state[k] = val,\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst checkDeps = () => {\n\t\t\t\tif (!comp.require) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfor (const dep of comp.require) {\n\t\t\t\t\tif (!this.c(dep)) {\n\t\t\t\t\t\tthrow new Error(`comp '${comp.id}' requires comp '${dep}'`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// check deps or run add event\n\t\t\tif (this.exists()) {\n\t\t\t\tif (comp.add) {\n\t\t\t\t\tcomp.add.call(this);\n\t\t\t\t}\n\t\t\t\tif (comp.load) {\n\t\t\t\t\tonLoad(() => comp.load.call(this));\n\t\t\t\t}\n\t\t\t\tcheckDeps();\n\t\t\t} else {\n\t\t\t\tif (comp.require) {\n\t\t\t\t\tstate.cleanups.push(this.on(\"add\", checkDeps));\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\tunuse(id: Tag) {\n\t\t\tif (compStates.has(id)) {\n\t\t\t\tconst comp = compStates.get(id);\n\t\t\t\tcomp.cleanups.forEach((f) => f());\n\t\t\t\tfor (const k in comp) {\n\t\t\t\t\tdelete comp[k];\n\t\t\t\t}\n\t\t\t}\n\t\t\tcompStates.delete(id);\n\t\t},\n\n\t\tc(id: Tag): Comp {\n\t\t\treturn compStates.get(id);\n\t\t},\n\n\t\t// TODO: a recursive variant\n\t\tget(t?: Tag | Tag[]): GameObj[] {\n\t\t\treturn this.children\n\t\t\t\t.filter((child) => t ? child.is(t) : true)\n\t\t\t\t.sort((o1, o2) => {\n\t\t\t\t\t// TODO: layers are deprecated\n\t\t\t\t\tconst l1 = game.layers[o1.layer ?? game.defLayer] ?? 0;\n\t\t\t\t\tconst l2 = game.layers[o2.layer ?? game.defLayer] ?? 0;\n\t\t\t\t\t// if on same layer, use \"z\" comp to decide which is on top, if given\n\t\t\t\t\tif (l1 == l2) {\n\t\t\t\t\t\treturn (o1.z ?? 0) - (o2.z ?? 0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn l1 - l2;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t},\n\n\t\tevery<T>(t: Tag | Tag[] | ((obj: GameObj) => T), f?: (obj: GameObj) => T) {\n\t\t\tif (typeof t === \"function\" && f === undefined) {\n\t\t\t\treturn this.get().forEach((obj) => t(obj));\n\t\t\t} else if (typeof t === \"string\" || Array.isArray(t)) {\n\t\t\t\treturn this.get(t).forEach((obj) => f(obj));\n\t\t\t}\n\t\t},\n\n\t\trevery<T>(t: Tag | Tag[] | ((obj: GameObj) => T), f?: (obj: GameObj) => T) {\n\t\t\tif (typeof t === \"function\" && f === undefined) {\n\t\t\t\treturn this.get().reverse().forEach((obj) => t(obj));\n\t\t\t} else if (typeof t === \"string\" || Array.isArray(t)) {\n\t\t\t\treturn this.get(t).reverse().forEach((obj) => f(obj));\n\t\t\t}\n\t\t},\n\n\t\texists(): boolean {\n\t\t\tif (this.parent === game.root) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn this.parent?.exists();\n\t\t\t}\n\t\t},\n\n\t\tis(tag: Tag | Tag[]): boolean {\n\t\t\tif (tag === \"*\") {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (Array.isArray(tag)) {\n\t\t\t\tfor (const t of tag) {\n\t\t\t\t\tif (!this.c(t)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn this.c(tag) != null;\n\t\t\t}\n\t\t},\n\n\t\ton(ev: string, cb): EventCanceller {\n\t\t\tif (!events[ev]) {\n\t\t\t\tevents[ev] = new IDList();\n\t\t\t}\n\t\t\treturn events[ev].pushd(cb);\n\t\t},\n\n\t\taction(...args): EventCanceller {\n\t\t\tconsole.warn(\"action() is deprecated. Use onUpdate() instead\")\n\t\t\treturn this.onUpdate(...args);\n\t\t},\n\n\t\ttrigger(ev: string, ...args): void {\n\n\t\t\tif (events[ev]) {\n\t\t\t\tevents[ev].forEach((cb) => cb.call(this, ...args));\n\t\t\t}\n\n\t\t\tconst gEvents = game.objEvents[ev];\n\n\t\t\tif (gEvents) {\n\t\t\t\tgEvents.forEach((e) => {\n\t\t\t\t\tif (this.is(e.tag)) {\n\t\t\t\t\t\te.cb(this, ...args);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t},\n\n\t\tdestroy() {\n\t\t\tthis.parent?.remove(this);\n\t\t},\n\n\t\tinspect() {\n\t\t\tconst info = {};\n\t\t\tfor (const [tag, comp] of compStates) {\n\t\t\t\tinfo[tag] = comp.inspect ? comp.inspect() : null;\n\t\t\t}\n\t\t\treturn info;\n\t\t},\n\n\t\tonUpdate(cb: () => void): EventCanceller {\n\t\t\treturn this.on(\"update\", cb);\n\t\t},\n\n\t\tonDraw(cb: () => void): EventCanceller {\n\t\t\treturn this.on(\"draw\", cb);\n\t\t},\n\n\t\tonDestroy(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"destroy\", action);\n\t\t},\n\n\t\tclearEvents() {\n\t\t\tevents = {}\n\t\t},\n\n\t};\n\n\tfor (const comp of comps) {\n\t\tobj.use(comp);\n\t}\n\n\treturn obj as unknown as GameObj<T>;\n\n}\n\n// add an event to a tag\nfunction on(event: string, tag: Tag, cb: (obj: GameObj, ...args) => void): EventCanceller {\n\tif (!game.objEvents[event]) {\n\t\tgame.objEvents[event] = new IDList();\n\t}\n\treturn game.objEvents[event].pushd({\n\t\ttag: tag,\n\t\tcb: cb,\n\t});\n}\n\n// add update event to a tag or global update\nfunction onUpdate(tag: Tag | (() => void), cb?: (obj: GameObj) => void): EventCanceller {\n\tif (typeof tag === \"function\" && cb === undefined) {\n\t\treturn game.root.onUpdate(tag);\n\t} else if (typeof tag === \"string\") {\n\t\treturn on(\"update\", tag, cb);\n\t}\n}\n\n// add draw event to a tag or global draw\nfunction onDraw(tag: Tag | (() => void), cb?: (obj: GameObj) => void) {\n\tif (typeof tag === \"function\" && cb === undefined) {\n\t\treturn game.root.onDraw(tag);\n\t} else if (typeof tag === \"string\") {\n\t\treturn on(\"draw\", tag, cb);\n\t}\n}\n\n// add an event that runs with objs with t1 collides with objs with t2\nfunction onCollide(\n\tt1: Tag,\n\tt2: Tag,\n\tf: (a: GameObj, b: GameObj, col?: Collision) => void,\n): EventCanceller {\n\tconst e1 = on(\"collide\", t1, (a, b, col) => b.is(t2) && f(a, b, col));\n\tconst e2 = on(\"collide\", t2, (a, b, col) => b.is(t1) && f(b, a, col));\n\tconst e3 = onUpdate(t1, (o1: GameObj) => {\n\t\tif (!o1.area) {\n\t\t\tthrow new Error(\"onCollide() requires the object to have area() component\");\n\t\t}\n\t\to1._checkCollisions(t2, (o2) => {\n\t\t\tf(o1, o2);\n\t\t});\n\t});\n\treturn () => [e1, e2, e3].forEach((f) => f());\n}\n\n// add an event that runs when objs with tag t is clicked\nfunction onClick(tag: Tag | (() => void), cb?: (obj: GameObj) => void): EventCanceller {\n\tif (typeof tag === \"function\") {\n\t\treturn onMousePress(tag);\n\t} else {\n\t\treturn onUpdate(tag, (o: GameObj) => {\n\t\t\tif (!o.area) throw new Error(\"onClick() requires the object to have area() component\");\n\t\t\tif (o.isClicked()) {\n\t\t\t\tcb(o);\n\t\t\t}\n\t\t});\n\t}\n}\n\n// add an event that runs when objs with tag t is hovered\nfunction onHover(t: string, onHover: (obj: GameObj) => void, onNotHover?: (obj: GameObj) => void): EventCanceller {\n\treturn onUpdate(t, (o: GameObj) => {\n\t\tif (!o.area) throw new Error(\"onHover() requires the object to have area() component\");\n\t\tif (o.isHovering()) {\n\t\t\tonHover(o);\n\t\t} else {\n\t\t\tif (onNotHover) {\n\t\t\t\tonNotHover(o);\n\t\t\t}\n\t\t}\n\t});\n}\n\n// add an event that'd be run after t\nfunction wait(t: number, f?: () => void): Promise<void> {\n\treturn new Promise((resolve) => {\n\t\tgame.timers.push(new Timer(t, () => {\n\t\t\tif (f) f();\n\t\t\tresolve();\n\t\t}))\n\t});\n}\n\n// add an event that's run every t seconds\nfunction loop(t: number, f: () => void): EventCanceller {\n\n\tlet stopped = false;\n\n\tconst newF = () => {\n\t\tif (stopped) {\n\t\t\treturn;\n\t\t}\n\t\tf();\n\t\twait(t, newF);\n\t};\n\n\tnewF();\n\n\treturn () => stopped = true;\n\n}\n\n// input callbacks\nfunction onKeyDown(k: Key | Key[], f: () => void): EventCanceller {\n\tif (Array.isArray(k)) {\n\t\tconst cancellers = k.map((key) => onKeyDown(key, f));\n\t\treturn () => cancellers.forEach((cb) => cb());\n\t} {\n\t\treturn game.on(\"input\", () => isKeyDown(k) && f());\n\t}\n}\n\nfunction onKeyPress(k: Key | Key[] | (() => void), f?: () => void): EventCanceller {\n\tif (Array.isArray(k)) {\n\t\tconst cancellers = k.map((key) => onKeyPress(key, f));\n\t\treturn () => cancellers.forEach((cb) => cb());\n\t} else if (typeof k === \"function\") {\n\t\treturn game.on(\"input\", () => isKeyPressed() && k());\n\t} else {\n\t\treturn game.on(\"input\", () => isKeyPressed(k) && f());\n\t}\n}\n\nfunction onKeyPressRepeat(k: Key | Key[] | (() => void), f?: () => void): EventCanceller {\n\tif (Array.isArray(k)) {\n\t\tconst cancellers = k.map((key) => onKeyPressRepeat(key, f));\n\t\treturn () => cancellers.forEach((cb) => cb());\n\t} else if (typeof k === \"function\") {\n\t\treturn game.on(\"input\", () => isKeyPressed() && k());\n\t} else {\n\t\treturn game.on(\"input\", () => isKeyPressedRepeat(k) && f());\n\t}\n}\n\nfunction onKeyRelease(k: Key | Key[] | (() => void), f?: () => void): EventCanceller {\n\tif (Array.isArray(k)) {\n\t\tconst cancellers = k.map((key) => onKeyRelease(key, f));\n\t\treturn () => cancellers.forEach((cb) => cb());\n\t} else if (typeof k === \"function\") {\n\t\treturn game.on(\"input\", () => isKeyReleased() && k());\n\t} else {\n\t\treturn game.on(\"input\", () => isKeyReleased(k) && f());\n\t}\n}\n\nfunction onMouseDown(\n\tm: MouseButton | ((pos?: Vec2) => void),\n\taction?: (pos?: Vec2) => void\n): EventCanceller {\n\tif (typeof m === \"function\") {\n\t\treturn game.on(\"input\", () => isMouseDown() && m(mousePos()));\n\t} else {\n\t\treturn game.on(\"input\", () => isMouseDown(m) && action(mousePos()));\n\t}\n}\n\nfunction onMousePress(\n\tm: MouseButton | ((pos?: Vec2) => void),\n\taction?: (pos?: Vec2) => void\n): EventCanceller {\n\tif (typeof m === \"function\") {\n\t\treturn game.on(\"input\", () => isMousePressed() && m(mousePos()));\n\t} else {\n\t\treturn game.on(\"input\", () => isMousePressed(m) && action(mousePos()));\n\t}\n}\n\nfunction onMouseRelease(\n\tm: MouseButton | ((pos?: Vec2) => void),\n\taction?: (pos?: Vec2) => void\n): EventCanceller {\n\tif (typeof m === \"function\") {\n\t\treturn game.on(\"input\", () => isMouseReleased() && m(mousePos()));\n\t} else {\n\t\treturn game.on(\"input\", () => isMouseReleased(m) && action(mousePos()));\n\t}\n}\n\nfunction onMouseMove(f: (pos: Vec2, dpos: Vec2) => void): EventCanceller {\n\treturn game.on(\"input\", () => isMouseMoved() && f(mousePos(), mouseDeltaPos()));\n}\n\nfunction onCharInput(f: (ch: string) => void): EventCanceller {\n\treturn game.on(\"input\", () => charInputted().forEach((ch) => f(ch)));\n}\n\nfunction onTouchStart(f: (id: TouchID, pos: Vec2) => void): EventCanceller {\n\treturn game.on(\"onTouchStart\", f);\n}\n\nfunction onTouchMove(f: (id: TouchID, pos: Vec2) => void): EventCanceller {\n\treturn game.on(\"onTouchMove\", f);\n}\n\nfunction onTouchEnd(f: (id: TouchID, pos: Vec2) => void): EventCanceller {\n\treturn game.on(\"onTouchEnd\", f);\n}\n\nfunction enterDebugMode() {\n\n\tonKeyPress(\"f1\", () => {\n\t\tdebug.inspect = !debug.inspect;\n\t});\n\n\tonKeyPress(\"f2\", () => {\n\t\tdebug.clearLog();\n\t});\n\n\tonKeyPress(\"f8\", () => {\n\t\tdebug.paused = !debug.paused;\n\t});\n\n\tonKeyPress(\"f7\", () => {\n\t\tdebug.timeScale = toFixed(clamp(debug.timeScale - 0.2, 0, 2), 1);\n\t});\n\n\tonKeyPress(\"f9\", () => {\n\t\tdebug.timeScale = toFixed(clamp(debug.timeScale + 0.2, 0, 2), 1);\n\t});\n\n\tonKeyPress(\"f10\", () => {\n\t\tdebug.stepFrame();\n\t});\n\n\tonKeyPress(\"f5\", () => {\n\t\tdownloadURL(screenshot(), \"kaboom.png\");\n\t});\n\n\tonKeyPress(\"f6\", () => {\n\t\tif (debug.curRecording) {\n\t\t\tdebug.curRecording.download();\n\t\t\tdebug.curRecording = null;\n\t\t} else {\n\t\t\tdebug.curRecording = record();\n\t\t}\n\t});\n\n}\n\nfunction enterBurpMode() {\n\tonKeyPress(\"b\", burp);\n}\n\n// get / set gravity\nfunction gravity(g?: number): number {\n\tif (g !== undefined) {\n\t\tgame.gravity = g;\n\t}\n\treturn game.gravity;\n}\n\nfunction regCursor(c: Cursor, draw: string | ((mpos: Vec2) => void)) {\n\t// TODO\n}\n\nfunction makeCollision(target: GameObj<any>, dis: Vec2): Collision {\n\treturn {\n\t\ttarget: target,\n\t\tdisplacement: dis,\n\t\tisTop: () => dis.y > 0,\n\t\tisBottom: () => dis.y < 0,\n\t\tisLeft: () => dis.x > 0,\n\t\tisRight: () => dis.x < 0,\n\t};\n}\n\n// TODO: manage global velocity here?\nfunction pos(...args): PosComp {\n\n\treturn {\n\n\t\tid: \"pos\",\n\t\tpos: vec2(...args),\n\n\t\t// TODO: clean\n\t\tmoveBy(...args): Collision | null {\n\n\t\t\tconst p = vec2(...args);\n\t\t\tlet dx = p.x;\n\t\t\tlet dy = p.y;\n\t\t\tlet col = null;\n\n\t\t\tif (this.solid && this.area?.shape === \"rect\") {\n\n\t\t\t\tlet a1 = this.worldArea();\n\n\t\t\t\t// TODO: definitely shouln't iterate through all solid objs\n\t\t\t\tgame.root.every((other) => {\n\n\t\t\t\t\t// make sure we still exist, don't check with self, and only\n\t\t\t\t\t// check with other solid objects\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this.exists()\n\t\t\t\t\t\t|| other === this\n\t\t\t\t\t\t|| !other.solid\n\t\t\t\t\t\t|| other.area?.shape !== \"rect\"\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst a2 = other.worldArea();\n\t\t\t\t\tlet md = minkDiff(a2, a1);\n\n\t\t\t\t\t// if they're already overlapping, push them away first\n\t\t\t\t\tif (testRectPoint(md, vec2(0))) {\n\n\t\t\t\t\t\tlet dist = Math.min(\n\t\t\t\t\t\t\tMath.abs(md.p1.x),\n\t\t\t\t\t\t\tMath.abs(md.p2.x),\n\t\t\t\t\t\t\tMath.abs(md.p1.y),\n\t\t\t\t\t\t\tMath.abs(md.p2.y),\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst res = (() => {\n\t\t\t\t\t\t\tswitch (dist) {\n\t\t\t\t\t\t\t\tcase Math.abs(md.p1.x): return vec2(dist, 0);\n\t\t\t\t\t\t\t\tcase Math.abs(md.p2.x): return vec2(-dist, 0);\n\t\t\t\t\t\t\t\tcase Math.abs(md.p1.y): return vec2(0, dist);\n\t\t\t\t\t\t\t\tcase Math.abs(md.p2.y): return vec2(0, -dist);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})();\n\n\t\t\t\t\t\tthis.pos = this.pos.sub(res);\n\n\t\t\t\t\t\t// calculate new mink diff\n\t\t\t\t\t\ta1 = this.worldArea();\n\t\t\t\t\t\tmd = minkDiff(a2, a1);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst ray = { p1: vec2(0), p2: vec2(dx, dy) };\n\t\t\t\t\tlet minT = 1;\n\t\t\t\t\tconst p1 = md.p1;\n\t\t\t\t\tconst p2 = vec2(md.p1.x, md.p2.y);\n\t\t\t\t\tconst p3 = md.p2;\n\t\t\t\t\tconst p4 = vec2(md.p2.x, md.p1.y);\n\t\t\t\t\tlet numCols = 0;\n\t\t\t\t\tconst lines = {\n\t\t\t\t\t\t\"right\": { p1: p1, p2: p2, },\n\t\t\t\t\t\t\"top\": { p1: p2, p2: p3, },\n\t\t\t\t\t\t\"left\": { p1: p3, p2: p4, },\n\t\t\t\t\t\t\"bottom\": { p1: p4, p2: p1, },\n\t\t\t\t\t};\n\n\t\t\t\t\tfor (const s in lines) {\n\t\t\t\t\t\tconst line = lines[s];\n\t\t\t\t\t\t// if moving along a side, we forgive\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t(dx === 0 && line.p1.x === 0 && line.p2.x === 0)\n\t\t\t\t\t\t\t||\n\t\t\t\t\t\t\t(dy === 0 && line.p1.y === 0 && line.p2.y === 0)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tminT = 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst t = testLineLineT(ray, line);\n\t\t\t\t\t\tif (t != null) {\n\t\t\t\t\t\t\tnumCols++;\n\t\t\t\t\t\t\tif (t < minT) {\n\t\t\t\t\t\t\t\tminT = t;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// if moving away, we forgive\n\t\t\t\t\tif (\n\t\t\t\t\t\tminT < 1\n\t\t\t\t\t\t&& !(minT === 0 && numCols == 1 && !testRectPoint(md, vec2(dx, dy)))\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst dis = vec2(-dx * (1 - minT), -dy * (1 - minT));\n\t\t\t\t\t\tdx *= minT;\n\t\t\t\t\t\tdy *= minT;\n\t\t\t\t\t\tcol = makeCollision(other, dis);\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t\tthis.pos.x += dx;\n\t\t\tthis.pos.y += dy;\n\n\t\t\tif (col) {\n\t\t\t\tthis.trigger(\"collide\", col.target, col);\n\t\t\t\tcol.target.trigger(\"collide\", this, makeCollision(this, col.displacement.scale(-1)));\n\t\t\t}\n\n\t\t\treturn col;\n\n\t\t},\n\n\t\t// move with velocity (pixels per second)\n\t\tmove(...args): Collision | null {\n\t\t\treturn this.moveBy(vec2(...args).scale(dt()));\n\t\t},\n\n\t\t// move to a destination, with optional speed\n\t\tmoveTo(...args) {\n\t\t\tif (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n\t\t\t\treturn this.moveTo(vec2(args[0], args[1]), args[2]);\n\t\t\t}\n\t\t\tconst dest = args[0];\n\t\t\tconst speed = args[1];\n\t\t\tif (speed === undefined) {\n\t\t\t\tthis.pos = vec2(dest);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst diff = dest.sub(this.pos);\n\t\t\tif (diff.len() <= speed * dt()) {\n\t\t\t\tthis.pos = vec2(dest);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.move(diff.unit().scale(speed));\n\t\t},\n\n\t\t// TODO\n\t\t// get the screen position (transformed by camera)\n\t\tscreenPos(): Vec2 {\n\t\t\tif (this.fixed) {\n\t\t\t\treturn this.pos;\n\t\t\t} else {\n\t\t\t\treturn toScreen(this.pos);\n\t\t\t}\n\t\t},\n\n\t\tinspect() {\n\t\t\treturn `(${Math.round(this.pos.x)}, ${Math.round(this.pos.y)})`;\n\t\t},\n\n\t};\n\n};\n\n// TODO: allow single number assignment\nfunction scale(...args): ScaleComp {\n\tif (args.length === 0) {\n\t\treturn scale(1);\n\t}\n\treturn {\n\t\tid: \"scale\",\n\t\tscale: vec2(...args),\n\t\tscaleTo(...args) {\n\t\t\tthis.scale = vec2(...args);\n\t\t},\n\t\tinspect() {\n\t\t\tif (typeof this.scale === \"number\") {\n\t\t\t\treturn `${toFixed(this.scale, 2)}`;\n\t\t\t} else {\n\t\t\t\treturn `(${toFixed(this.scale.x, 2)}, ${toFixed(this.scale.y, 2)})`;\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction rotate(r: number): RotateComp {\n\treturn {\n\t\tid: \"rotate\",\n\t\tangle: r ?? 0,\n\t\tinspect() {\n\t\t\treturn `${Math.round(this.angle)}`;\n\t\t},\n\t};\n}\n\nfunction color(...args): ColorComp {\n\treturn {\n\t\tid: \"color\",\n\t\tcolor: rgb(...args),\n\t\tinspect() {\n\t\t\treturn this.color.str();\n\t\t},\n\t};\n}\n\nfunction toFixed(n: number, f: number) {\n\treturn Number(n.toFixed(f));\n}\n\nfunction opacity(a: number): OpacityComp {\n\treturn {\n\t\tid: \"opacity\",\n\t\topacity: a ?? 1,\n\t\tinspect() {\n\t\t\treturn `${toFixed(this.opacity, 2)}`;\n\t\t},\n\t};\n}\n\nfunction origin(o: Origin | Vec2): OriginComp {\n\tif (!o) {\n\t\tthrow new Error(\"please define an origin\");\n\t}\n\treturn {\n\t\tid: \"origin\",\n\t\torigin: o,\n\t\tinspect() {\n\t\t\tif (typeof this.origin === \"string\") {\n\t\t\t\treturn this.origin;\n\t\t\t} else {\n\t\t\t\treturn this.origin.str();\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction layer(l: string): LayerComp {\n\treturn {\n\t\tid: \"layer\",\n\t\tlayer: l,\n\t\tinspect() {\n\t\t\treturn this.layer ?? game.defLayer;\n\t\t},\n\t};\n}\n\nfunction z(z: number): ZComp {\n\treturn {\n\t\tid: \"z\",\n\t\tz: z,\n\t\tinspect() {\n\t\t\treturn `${this.z}`;\n\t\t},\n\t};\n}\n\nfunction follow(obj: GameObj, offset?: Vec2): FollowComp {\n\treturn {\n\t\tid: \"follow\",\n\t\trequire: [ \"pos\", ],\n\t\tfollow: {\n\t\t\tobj: obj,\n\t\t\toffset: offset ?? vec2(0),\n\t\t},\n\t\tadd() {\n\t\t\tif (obj.exists()) {\n\t\t\t\tthis.pos = this.follow.obj.pos.add(this.follow.offset);\n\t\t\t}\n\t\t},\n\t\tupdate() {\n\t\t\tif (obj.exists()) {\n\t\t\t\tthis.pos = this.follow.obj.pos.add(this.follow.offset);\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction move(dir: number | Vec2, speed: number): MoveComp {\n\tconst d = typeof dir === \"number\" ? Vec2.fromAngle(dir) : dir.unit();\n\treturn {\n\t\tid: \"move\",\n\t\trequire: [ \"pos\", ],\n\t\tupdate() {\n\t\t\tthis.move(d.scale(speed));\n\t\t},\n\t};\n}\n\nfunction outview(opt: OutviewCompOpt = {}): OutviewComp {\n\tlet timer = 0;\n\tlet isOut = false;\n\treturn {\n\t\tid: \"outview\",\n\t\trequire: [ \"pos\", \"area\", ],\n\t\tisOutOfView(): boolean {\n\t\t\tconst offset = vec2(opt.offset ?? 0);\n\t\t\tconst screenRect = new Rect(\n\t\t\t\tvec2(0, 0).sub(offset),\n\t\t\t\tvec2(width(), height()).add(offset),\n\t\t\t);\n\t\t\treturn !testAreaRect(this.screenArea(), screenRect);\n\t\t},\n\t\tonExitView(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"exitView\", action);\n\t\t},\n\t\tonEnterView(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"enterView\", action);\n\t\t},\n\t\tupdate() {\n\t\t\tif (this.isOutOfView()) {\n\t\t\t\tif (!isOut) {\n\t\t\t\t\tthis.trigger(\"exitView\");\n\t\t\t\t\tisOut = true;\n\t\t\t\t}\n\t\t\t\tif (opt.delay) {\n\t\t\t\t\ttimer += dt();\n\t\t\t\t\tif (timer < opt.delay) return\n\t\t\t\t}\n\t\t\t\tif (opt.hide) this.hidden = true;\n\t\t\t\tif (opt.pause) this.paused = true;\n\t\t\t\tif (opt.destroy) this.destroy();\n\t\t\t} else {\n\t\t\t\tif (isOut) {\n\t\t\t\t\tthis.trigger(\"enterView\");\n\t\t\t\t\tisOut = false;\n\t\t\t\t}\n\t\t\t\ttimer = 0;\n\t\t\t\tif (opt.hide) this.hidden = false;\n\t\t\t\tif (opt.pause) this.paused = false;\n\t\t\t}\n\t\t},\n\t\tinspect() {\n\t\t\treturn this.isOutOfView();\n\t\t},\n\t};\n}\n\nfunction cleanup(opt: (number | undefined) | CleanupCompOpt = {}): CleanupComp {\n\tif (typeof opt === \"number\") {\n\t\tdeprecateMsg(\"clean(time)\", \"cleanup({ delay: time })\");\n\t\treturn {\n\t\t\t...outview({\n\t\t\t\tdestroy: true,\n\t\t\t\tdelay: opt,\n\t\t\t}),\n\t\t\tid: \"cleanup\",\n\t\t};\n\t}\n\treturn {\n\t\t...outview({\n\t\t\tdestroy: true,\n\t\t\tonExitView: opt.onCleanup,\n\t\t\toffset: opt.offset,\n\t\t\tdelay: opt.delay,\n\t\t}),\n\t\tid: \"cleanup\",\n\t};\n}\n\nfunction area(opt: AreaCompOpt = {}): AreaComp {\n\n\tconst colliding = {};\n\n\treturn {\n\n\t\tid: \"area\",\n\n\t\tadd() {\n\t\t\tif (this.area.cursor) {\n\t\t\t\t// TODO: collect\n\t\t\t\tthis.onHover(() => cursor(this.area.cursor));\n\t\t\t}\n\t\t},\n\n\t\tarea: {\n\t\t\tshape: \"rect\",\n\t\t\toffset: opt.offset ?? vec2(0),\n\t\t\twidth: opt.width,\n\t\t\theight: opt.height,\n\t\t\tscale: opt.scale ?? vec2(1),\n\t\t\tcursor: opt.cursor,\n\t\t},\n\n\t\tisClicked(): boolean {\n\t\t\treturn isMousePressed() && this.isHovering();\n\t\t},\n\n\t\tisHovering() {\n\t\t\tconst mpos = this.fixed ? mousePos() : toWorld(mousePos());\n\t\t\treturn this.hasPoint(mpos);\n\t\t},\n\n\t\tisColliding(other) {\n\t\t\tif (!other.area || !other.exists()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst a1 = this.worldArea();\n\t\t\tconst a2 = other.worldArea();\n\t\t\treturn testAreaArea(a1, a2);\n\t\t},\n\n\t\tisTouching(other) {\n\t\t\tif (!other.area || !other.exists()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// TODO: support other shapes\n\t\t\tconst a1 = this.worldArea();\n\t\t\tconst a2 = other.worldArea();\n\t\t\treturn testRectRect2(a1, a2);\n\t\t},\n\n\t\tonClick(f: () => void): EventCanceller {\n\t\t\treturn this.onUpdate(() => {\n\t\t\t\tif (this.isClicked()) {\n\t\t\t\t\tf();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tonHover(onHover: () => void, onNotHover: () => void): EventCanceller {\n\t\t\treturn this.onUpdate(() => {\n\t\t\t\tif (this.isHovering()) {\n\t\t\t\t\tonHover();\n\t\t\t\t} else {\n\t\t\t\t\tif (onNotHover) {\n\t\t\t\t\t\tonNotHover();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tonCollide(tag: Tag, f: (o: GameObj, col?: Collision) => void): EventCanceller {\n\t\t\tconst e1 = this.onUpdate(() => this._checkCollisions(tag, f));\n\t\t\tconst e2 = this.on(\"collide\", (obj, col) => obj.is(tag) && f(obj, col));\n\t\t\treturn () => [e1, e2].forEach((f) => f());\n\t\t},\n\n\t\tclicks(...args) {\n\t\t\tdeprecateMsg(\"clicks()\", \"onClick()\");\n\t\t\treturn this.onClick(...args);\n\t\t},\n\n\t\thovers(...args) {\n\t\t\tdeprecateMsg(\"hovers()\", \"onHover()\");\n\t\t\treturn this.onHover(...args);\n\t\t},\n\n\t\tcollides(...args) {\n\t\t\tdeprecateMsg(\"collides()\", \"onCollide()\");\n\t\t\treturn this.onCollide(...args);\n\t\t},\n\n\t\thasPoint(pt: Vec2): boolean {\n\t\t\treturn testAreaPoint(this.worldArea(), pt);\n\t\t},\n\n\t\t// push an obj out of another if they're overlapped\n\t\tpushOut(obj: GameObj): Vec2 | null {\n\n\t\t\tif (obj === this) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// TODO: support other shapes\n\t\t\tif (obj.area?.shape !== \"rect\") {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst a1 = this.worldArea();\n\t\t\tconst a2 = obj.worldArea();\n\t\t\tconst md = minkDiff(a1, a2);\n\n\t\t\tif (!testRectPoint(md, vec2(0))) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tlet dist = Math.min(\n\t\t\t\tMath.abs(md.p1.x),\n\t\t\t\tMath.abs(md.p2.x),\n\t\t\t\tMath.abs(md.p1.y),\n\t\t\t\tMath.abs(md.p2.y),\n\t\t\t);\n\n\t\t\tconst res = (() => {\n\t\t\t\tswitch (dist) {\n\t\t\t\t\tcase Math.abs(md.p1.x): return vec2(dist, 0);\n\t\t\t\t\tcase Math.abs(md.p2.x): return vec2(-dist, 0);\n\t\t\t\t\tcase Math.abs(md.p1.y): return vec2(0, dist);\n\t\t\t\t\tcase Math.abs(md.p2.y): return vec2(0, -dist);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\tthis.pos = this.pos.add(res);\n\n\t\t},\n\n\t\t// push object out of other solid objects\n\t\tpushOutAll() {\n\t\t\tgame.root.every(this.pushOut);\n\t\t},\n\n\t\t// @ts-ignore\n\t\t_checkCollisions(tag: Tag) {\n\n\t\t\tgame.root.every(tag, (obj) => {\n\n\t\t\t\tif (this === obj || !this.exists() || colliding[obj._id]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this.isColliding(obj)) {\n\t\t\t\t\tthis.trigger(\"collide\", obj, null);\n\t\t\t\t\tcolliding[obj._id] = obj;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\tfor (const id in colliding) {\n\t\t\t\tconst obj = colliding[id];\n\t\t\t\tif (!this.isColliding(obj)) {\n\t\t\t\t\tdelete colliding[id];\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\t// TODO: doesn't work with nested parent transforms\n\t\t// TODO: cache\n\t\t// TODO: use matrix mult for more accuracy and rotation?\n\t\tworldArea(): Area {\n\n\t\t\tlet w = this.area.width ?? this.width;\n\t\t\tlet h = this.area.height ?? this.height;\n\n\t\t\tif (w == null || h == null) {\n\t\t\t\tthrow new Error(\"failed to get area dimension\");\n\t\t\t}\n\n\t\t\tconst scale = vec2(this.scale ?? 1).scale(this.area.scale);\n\n\t\t\tw *= scale.x;\n\t\t\th *= scale.y;\n\n\t\t\tconst orig = originPt(this.origin || DEF_ORIGIN);\n\t\t\tconst pos = (this.pos ?? vec2(0))\n\t\t\t\t.add(this.area.offset)\n\t\t\t\t.sub(orig.add(1, 1).scale(0.5).scale(w, h));\n\n\t\t\treturn {\n\t\t\t\tshape: \"rect\",\n\t\t\t\tp1: pos,\n\t\t\t\tp2: vec2(pos.x + w, pos.y + h),\n\t\t\t};\n\n\t\t},\n\n\t\tscreenArea(): Area {\n\t\t\tconst area = this.worldArea();\n\t\t\tif (this.fixed) {\n\t\t\t\treturn area;\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\tshape: \"rect\",\n\t\t\t\t\tp1: toScreen(area.p1),\n\t\t\t\t\tp2: toScreen(area.p2),\n\t\t\t\t};\n\t\t\t}\n\t\t},\n\n\t};\n\n}\n\n// make the list of common render properties from the \"pos\", \"scale\", \"color\", \"opacity\", \"rotate\", \"origin\", \"outline\", and \"shader\" components of a character\nfunction getRenderProps(obj: GameObj<any>) {\n\treturn {\n\t\tcolor: obj.color,\n\t\topacity: obj.opacity,\n\t\torigin: obj.origin,\n\t\toutline: obj.outline,\n\t\tfixed: obj.fixed,\n\t\tshader: assets.shaders[obj.shader],\n\t\tuniform: obj.uniform,\n\t};\n}\n\ninterface SpriteCurAnim {\n\tname: string,\n\ttimer: number,\n\tloop: boolean,\n\tspeed: number,\n\tpingpong: boolean,\n\tonEnd: () => void,\n}\n\n// TODO: clean\nfunction sprite(id: string | SpriteData, opt: SpriteCompOpt = {}): SpriteComp {\n\n\tlet spr = null;\n\tlet curAnim: SpriteCurAnim | null = null;\n\n\tfunction calcTexScale(tex: GfxTexture, q: Quad, w?: number, h?: number): Vec2 {\n\t\tconst scale = vec2(1, 1);\n\t\tif (w && h) {\n\t\t\tscale.x = w / (tex.width * q.w);\n\t\t\tscale.y = h / (tex.height * q.h);\n\t\t} else if (w) {\n\t\t\tscale.x = w / (tex.width * q.w);\n\t\t\tscale.y = scale.x;\n\t\t} else if (h) {\n\t\t\tscale.y = h / (tex.height * q.h);\n\t\t\tscale.x = scale.y;\n\t\t}\n\t\treturn scale;\n\t}\n\n\treturn {\n\n\t\tid: \"sprite\",\n\t\t// TODO: allow update\n\t\twidth: 0,\n\t\theight: 0,\n\t\tframe: opt.frame || 0,\n\t\tquad: opt.quad || new Quad(0, 0, 1, 1),\n\t\tanimSpeed: opt.animSpeed ?? 1,\n\n\t\tload() {\n\n\t\t\tif (typeof id === \"string\") {\n\t\t\t\tspr = assets.sprites[id];\n\t\t\t} else {\n\t\t\t\tspr = id;\n\t\t\t}\n\n\t\t\tif (!spr) {\n\t\t\t\tthrow new Error(`sprite not found: \"${id}\"`);\n\t\t\t}\n\n\t\t\tlet q = spr.frames[0].clone();\n\n\t\t\tif (opt.quad) {\n\t\t\t\tq = q.scale(opt.quad);\n\t\t\t}\n\n\t\t\tconst scale = calcTexScale(spr.tex, q, opt.width, opt.height);\n\n\t\t\tthis.width = spr.tex.width * q.w * scale.x;\n\t\t\tthis.height = spr.tex.height * q.h * scale.y;\n\n\t\t\tif (opt.anim) {\n\t\t\t\tthis.play(opt.anim);\n\t\t\t}\n\n\t\t},\n\n\t\tdraw() {\n\t\t\tdrawSprite({\n\t\t\t\t...getRenderProps(this),\n\t\t\t\tsprite: spr,\n\t\t\t\tframe: this.frame,\n\t\t\t\tquad: this.quad,\n\t\t\t\tflipX: opt.flipX,\n\t\t\t\tflipY: opt.flipY,\n\t\t\t\ttiled: opt.tiled,\n\t\t\t\twidth: opt.width,\n\t\t\t\theight: opt.height,\n\t\t\t});\n\t\t},\n\n\t\tupdate() {\n\n\t\t\tif (!curAnim) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst anim = spr.anims[curAnim.name];\n\n\t\t\tif (typeof anim === \"number\") {\n\t\t\t\tthis.frame = anim;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (anim.speed === 0) {\n\t\t\t\tthrow new Error(\"sprite anim speed cannot be 0\");\n\t\t\t}\n\n\t\t\tcurAnim.timer += dt() * this.animSpeed;\n\n\t\t\tif (curAnim.timer >= (1 / curAnim.speed)) {\n\t\t\t\tcurAnim.timer = 0;\n\t\t\t\t// TODO: clean up\n\t\t\t\tif (anim.from > anim.to) {\n\t\t\t\t\tthis.frame--;\n\t\t\t\t\tif (this.frame < anim.to) {\n\t\t\t\t\t\tif (curAnim.loop) {\n\t\t\t\t\t\t\tthis.frame = anim.from;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.frame++;\n\t\t\t\t\t\t\tcurAnim.onEnd();\n\t\t\t\t\t\t\tthis.stop();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.frame++;\n\t\t\t\t\tif (this.frame > anim.to) {\n\t\t\t\t\t\tif (curAnim.loop) {\n\t\t\t\t\t\t\tthis.frame = anim.from;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.frame--;\n\t\t\t\t\t\t\tcurAnim.onEnd();\n\t\t\t\t\t\t\tthis.stop();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\t// TODO: this opt should be used instead of the sprite data opt, if given\n\t\tplay(name: string, opt: SpriteAnimPlayOpt = {}) {\n\n\t\t\tif (!spr) {\n\t\t\t\tonLoad(() => {\n\t\t\t\t\tthis.play(name);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst anim = spr.anims[name];\n\n\t\t\tif (anim == null) {\n\t\t\t\tthrow new Error(`anim not found: ${name}`);\n\t\t\t}\n\n\t\t\tif (curAnim) {\n\t\t\t\tthis.stop();\n\t\t\t}\n\n\t\t\tcurAnim = {\n\t\t\t\tname: name,\n\t\t\t\ttimer: 0,\n\t\t\t\tloop: opt.loop ?? anim.loop ?? false,\n\t\t\t\tpingpong: opt.pingpong ?? anim.pingpong ?? false,\n\t\t\t\tspeed: opt.speed ?? anim.speed ?? 10,\n\t\t\t\tonEnd: opt.onEnd ?? (() => {}),\n\t\t\t};\n\n\t\t\tif (typeof anim === \"number\") {\n\t\t\t\tthis.frame = anim;\n\t\t\t} else {\n\t\t\t\tthis.frame = anim.from;\n\t\t\t}\n\n\t\t\t// TODO: \"animPlay\" is deprecated\n\t\t\tthis.trigger(\"animPlay\", name);\n\t\t\tthis.trigger(\"animStart\", name);\n\n\t\t},\n\n\t\tstop() {\n\t\t\tif (!curAnim) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst prevAnim = curAnim.name;\n\t\t\tcurAnim = null;\n\t\t\tthis.trigger(\"animEnd\", prevAnim);\n\t\t},\n\n\t\tnumFrames() {\n\t\t\tif (!spr) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn spr.frames.length;\n\t\t},\n\n\t\tcurAnim() {\n\t\t\treturn curAnim?.name;\n\t\t},\n\n\t\tflipX(b: boolean) {\n\t\t\topt.flipX = b;\n\t\t},\n\n\t\tflipY(b: boolean) {\n\t\t\topt.flipY = b;\n\t\t},\n\n\t\tonAnimEnd(name: string, action: () => void): EventCanceller {\n\t\t\treturn this.on(\"animEnd\", (anim) => {\n\t\t\t\tif (anim === name) {\n\t\t\t\t\taction();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tonAnimStart(name: string, action: () => void): EventCanceller {\n\t\t\treturn this.on(\"animStart\", (anim) => {\n\t\t\t\tif (anim === name) {\n\t\t\t\t\taction();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tinspect() {\n\t\t\tlet msg = \"\";\n\t\t\tif (typeof id === \"string\") {\n\t\t\t\tmsg += JSON.stringify(id);\n\t\t\t} else {\n\t\t\t\tmsg += \"[blob]\";\n\t\t\t}\n\t\t\treturn msg;\n\t\t},\n\n\t};\n\n}\n\nfunction text(t: string, opt: TextCompOpt = {}): TextComp {\n\n\tfunction update(obj: GameObj<TextComp | any>) {\n\n\t\tconst ftext = formatText({\n\t\t\t...getRenderProps(obj),\n\t\t\ttext: obj.text + \"\",\n\t\t\tsize: obj.textSize,\n\t\t\tfont: obj.font,\n\t\t\twidth: opt.width && obj.width,\n\t\t\tletterSpacing: obj.letterSpacing,\n\t\t\tlineSpacing: obj.lineSpacing,\n\t\t\ttransform: obj.transform,\n\t\t\tstyles: obj.styles,\n\t\t});\n\n\t\tobj.width = ftext.width / (obj.scale?.x || 1);\n\t\tobj.height = ftext.height / (obj.scale?.y || 1);\n\n\t\treturn ftext;\n\n\t};\n\n\treturn {\n\n\t\tid: \"text\",\n\t\ttext: t,\n\t\ttextSize: opt.size,\n\t\tfont: opt.font,\n\t\twidth: opt.width,\n\t\theight: 0,\n\t\tlineSpacing: opt.lineSpacing,\n\t\tletterSpacing: opt.letterSpacing,\n\t\ttransform: opt.transform,\n\t\tstyles: opt.styles,\n\n\t\tload() {\n\t\t\tupdate(this);\n\t\t},\n\n\t\tdraw() {\n\t\t\tdrawFormattedText(update(this));\n\t\t},\n\n\t};\n\n}\n\nfunction rect(w: number, h: number, opt: RectCompOpt = {}): RectComp {\n\treturn {\n\t\tid: \"rect\",\n\t\twidth: w,\n\t\theight: h,\n\t\tradius: opt.radius || 0,\n\t\tdraw() {\n\t\t\tdrawRect({\n\t\t\t\t...getRenderProps(this),\n\t\t\t\twidth: this.width,\n\t\t\t\theight: this.height,\n\t\t\t\tradius: this.radius,\n\t\t\t});\n\t\t},\n\t\tinspect() {\n\t\t\treturn `${Math.ceil(this.width)}, ${Math.ceil(this.height)}`;\n\t\t},\n\t};\n}\n\nfunction uvquad(w: number, h: number): UVQuadComp {\n\treturn {\n\t\tid: \"rect\",\n\t\twidth: w,\n\t\theight: h,\n\t\tdraw() {\n\t\t\tdrawUVQuad({\n\t\t\t\t...getRenderProps(this),\n\t\t\t\twidth: this.width,\n\t\t\t\theight: this.height,\n\t\t\t});\n\t\t},\n\t\tinspect() {\n\t\t\treturn `${Math.ceil(this.width)}, ${Math.ceil(this.height)}`;\n\t\t},\n\t};\n}\n\nfunction circle(radius: number): CircleComp {\n\treturn {\n\t\tid: \"circle\",\n\t\tradius: radius,\n\t\tdraw() {\n\t\t\tdrawCircle({\n\t\t\t\t...getRenderProps(this),\n\t\t\t\tradius: this.radius,\n\t\t\t});\n\t\t},\n\t\tinspect() {\n\t\t\treturn `${Math.ceil(this.radius)}`;\n\t\t},\n\t};\n}\n\nfunction outline(width: number = 1, color: Color = rgb(0, 0, 0)): OutlineComp {\n\treturn {\n\t\tid: \"outline\",\n\t\toutline: {\n\t\t\twidth,\n\t\t\tcolor,\n\t\t},\n\t};\n}\n\nfunction timer(time?: number, action?: () => void): TimerComp {\n\tconst timers: IDList<Timer> = new IDList();\n\tif (time && action) {\n\t\ttimers.pushd(new Timer(time, action));\n\t}\n\treturn {\n\t\tid: \"timer\",\n\t\twait(time: number, action: () => void): EventCanceller {\n\t\t\treturn timers.pushd(new Timer(time, action));\n\t\t},\n\t\tupdate() {\n\t\t\ttimers.forEach((timer, id) => {\n\t\t\t\tif (timer.tick(dt())) {\n\t\t\t\t\ttimers.delete(id);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t};\n}\n\n// maximum y velocity with body()\nconst DEF_JUMP_FORCE = 640;\nconst MAX_VEL = 65536;\n\n// TODO: land on wall\nfunction body(opt: BodyCompOpt = {}): BodyComp {\n\n\tlet velY = 0;\n\tlet curPlatform: GameObj | null = null;\n\tlet lastPlatformPos = null;\n\tlet canDouble = true;\n\n\treturn {\n\n\t\tid: \"body\",\n\t\trequire: [ \"pos\", \"area\", ],\n\t\tjumpForce: opt.jumpForce ?? DEF_JUMP_FORCE,\n\t\tweight: opt.weight ?? 1,\n\t\tsolid: opt.solid ?? true,\n\n\t\tupdate() {\n\n\t\t\tlet justFall = false;\n\n\t\t\t// check if loses current platform\n\t\t\tif (curPlatform) {\n\n\t\t\t\tconst a1 = this.worldArea();\n\t\t\t\tconst a2 = curPlatform.worldArea();\n\t\t\t\tconst y1 = a1.p2.y;\n\t\t\t\tconst y2 = a2.p1.y;\n\t\t\t\tconst x1 = a1.p1.x;\n\t\t\t\tconst x2 = a1.p2.x;\n\t\t\t\tconst x3 = a2.p1.x;\n\t\t\t\tconst x4 = a2.p2.x;\n\n\t\t\t\tif (\n\t\t\t\t\t!curPlatform.exists()\n\t\t\t\t\t|| y1 !== y2\n\t\t\t\t\t|| x2 < x3\n\t\t\t\t\t|| x1 > x4\n\t\t\t\t) {\n\t\t\t\t\tthis.trigger(\"fall\", curPlatform);\n\t\t\t\t\tcurPlatform = null;\n\t\t\t\t\tlastPlatformPos = null;\n\t\t\t\t\tjustFall = true;\n\t\t\t\t} else {\n\t\t\t\t\tif (lastPlatformPos && curPlatform.pos) {\n\t\t\t\t\t\t// TODO: moveBy?\n\t\t\t\t\t\t// sticky platform\n\t\t\t\t\t\tthis.pos = this.pos.add(curPlatform.pos.sub(lastPlatformPos));\n\t\t\t\t\t\tlastPlatformPos = curPlatform.pos.clone();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!curPlatform) {\n\n\t\t\t\tconst col = this.move(0, velY);\n\n\t\t\t\t// check if grounded to a new platform\n\t\t\t\tif (col) {\n\t\t\t\t\tif (col.isBottom()) {\n\t\t\t\t\t\tcurPlatform = col.target;\n\t\t\t\t\t\tconst oy = velY;\n\t\t\t\t\t\tvelY = 0;\n\t\t\t\t\t\tif (curPlatform.pos) {\n\t\t\t\t\t\t\tlastPlatformPos = curPlatform.pos.clone();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!justFall) {\n\t\t\t\t\t\t\tthis.trigger(\"ground\", curPlatform);\n\t\t\t\t\t\t\tcanDouble = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (col.isTop()) {\n\t\t\t\t\t\tvelY = 0;\n\t\t\t\t\t\tthis.trigger(\"headbutt\", col.target);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvelY += gravity() * this.weight * dt();\n\t\t\t\tvelY = Math.min(velY, opt.maxVel ?? MAX_VEL);\n\n\t\t\t}\n\n\t\t},\n\n\t\tcurPlatform(): GameObj | null {\n\t\t\treturn curPlatform;\n\t\t},\n\n\t\tisGrounded() {\n\t\t\treturn curPlatform !== null;\n\t\t},\n\n\t\tgrounded(): boolean {\n\t\t\tdeprecateMsg(\"grounded()\", \"isGrounded()\");\n\t\t\treturn this.isGrounded();\n\t\t},\n\n\t\tisFalling(): boolean {\n\t\t\treturn velY > 0;\n\t\t},\n\n\t\tfalling(): boolean {\n\t\t\tdeprecateMsg(\"falling()\", \"isFalling()\");\n\t\t\treturn this.isFalling();\n\t\t},\n\n\t\tjump(force: number) {\n\t\t\tcurPlatform = null;\n\t\t\tlastPlatformPos = null;\n\t\t\tvelY = -force || -this.jumpForce;\n\t\t},\n\n\t\tdoubleJump(force: number) {\n\t\t\tif (this.isGrounded()) {\n\t\t\t\tthis.jump(force);\n\t\t\t} else if (canDouble) {\n\t\t\t\tcanDouble = false;\n\t\t\t\tthis.jump(force);\n\t\t\t\tthis.trigger(\"doubleJump\");\n\t\t\t}\n\t\t},\n\n\t\tonGround(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"ground\", action);\n\t\t},\n\n\t\tonFall(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"fall\", action);\n\t\t},\n\n\t\tonHeadbutt(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"headbutt\", action);\n\t\t},\n\n\t\tonDoubleJump(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"doubleJump\", action);\n\t\t},\n\n\t};\n\n}\n\nfunction shader(id: string, uniform: Uniform = {}): ShaderComp {\n\tconst shader = assets.shaders[id];\n\treturn {\n\t\tid: \"shader\",\n\t\tshader: id,\n\t\tuniform: uniform,\n\t};\n}\n\nfunction solid(): SolidComp {\n\treturn {\n\t\tid: \"solid\",\n\t\trequire: [ \"area\", ],\n\t\tsolid: true,\n\t};\n}\n\nfunction fixed(): FixedComp {\n\treturn {\n\t\tid: \"fixed\",\n\t\tfixed: true,\n\t};\n}\n\nfunction stay(): StayComp {\n\treturn {\n\t\tid: \"stay\",\n\t\tstay: true,\n\t};\n}\n\nfunction health(hp: number): HealthComp {\n\tif (hp == null) {\n\t\tthrow new Error(\"health() requires the initial amount of hp\");\n\t}\n\treturn {\n\t\tid: \"health\",\n\t\thurt(n: number = 1) {\n\t\t\tthis.setHP(hp - n);\n\t\t\tthis.trigger(\"hurt\");\n\t\t},\n\t\theal(n: number = 1) {\n\t\t\tthis.setHP(hp + n);\n\t\t\tthis.trigger(\"heal\");\n\t\t},\n\t\thp(): number {\n\t\t\treturn hp;\n\t\t},\n\t\tsetHP(n: number) {\n\t\t\thp = n;\n\t\t\tif (hp <= 0) {\n\t\t\t\tthis.trigger(\"death\");\n\t\t\t}\n\t\t},\n\t\tonHurt(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"hurt\", action);\n\t\t},\n\t\tonHeal(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"heal\", action);\n\t\t},\n\t\tonDeath(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"death\", action);\n\t\t},\n\t\tinspect() {\n\t\t\treturn `${hp}`;\n\t\t},\n\t};\n}\n\nfunction lifespan(time: number, opt: LifespanCompOpt = {}): LifespanComp {\n\tif (time == null) {\n\t\tthrow new Error(\"lifespan() requires time\");\n\t}\n\tlet timer = 0;\n\tconst fade = opt.fade ?? 0;\n\tconst startFade = Math.max((time - fade), 0);\n\treturn {\n\t\tid: \"lifespan\",\n\t\tupdate() {\n\t\t\ttimer += dt();\n\t\t\t// TODO: don't assume 1 as start opacity\n\t\t\tif (timer >= startFade) {\n\t\t\t\tthis.opacity = map(timer, startFade, time, 1, 0);\n\t\t\t}\n\t\t\tif (timer >= time) {\n\t\t\t\tthis.destroy();\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction state(\n\tinitState: string,\n\tstateList?: string[],\n\ttransitions?: Record<string, string | string[]>,\n): StateComp {\n\n\tif (!initState) {\n\t\tthrow new Error(\"state() requires an initial state\");\n\t}\n\n\tconst events = {};\n\n\tfunction initStateHook(state: string) {\n\t\tif (!events[state]) {\n\t\t\tevents[state] = {\n\t\t\t\tenter: [],\n\t\t\t\tleave: [],\n\t\t\t\tupdate: [],\n\t\t\t\tdraw: [],\n\t\t\t};\n\t\t}\n\t}\n\n\tfunction on(event, state, action) {\n\t\tinitStateHook(state);\n\t\tevents[state][event].push(action);\n\t}\n\n\tfunction trigger(event, state, ...args) {\n\t\tinitStateHook(state);\n\t\tevents[state][event].forEach((action) => action(...args));\n\t}\n\n\treturn {\n\n\t\tid: \"state\",\n\t\tstate: initState,\n\n\t\tenterState(state: string, ...args) {\n\n\t\t\tif (stateList && !stateList.includes(state)) {\n\t\t\t\tthrow new Error(`State not found: ${state}`);\n\t\t\t}\n\n\t\t\tconst oldState = this.state;\n\n\t\t\tif (transitions) {\n\n\t\t\t\t// check if the transition is legal, if transition graph is defined\n\t\t\t\tif (!transitions?.[oldState]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst available = typeof transitions[oldState] === \"string\"\n\t\t\t\t\t? [transitions[oldState]]\n\t\t\t\t\t: transitions[oldState] as string[];\n\n\t\t\t\tif (!available.includes(state)) {\n\t\t\t\t\tthrow new Error(`Cannot transition state from \"${oldState}\" to \"${state}\". Available transitions: ${available.map((s) => `\"${s}\"`).join(\", \")}`);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttrigger(\"leave\", oldState, ...args);\n\t\t\tthis.state = state;\n\t\t\ttrigger(\"enter\", state, ...args);\n\t\t\ttrigger(\"enter\", `${oldState} -> ${state}`, ...args);\n\n\t\t},\n\n\t\tonStateTransition(from: string, to: string, action: () => void) {\n\t\t\ton(\"enter\", `${from} -> ${to}`, action);\n\t\t},\n\n\t\tonStateEnter(state: string, action: () => void) {\n\t\t\ton(\"enter\", state, action);\n\t\t},\n\n\t\tonStateUpdate(state: string, action: () => void) {\n\t\t\ton(\"update\", state, action);\n\t\t},\n\n\t\tonStateDraw(state: string, action: () => void) {\n\t\t\ton(\"draw\", state, action);\n\t\t},\n\n\t\tonStateLeave(state: string, action: () => void) {\n\t\t\ton(\"leave\", state, action);\n\t\t},\n\n\t\tupdate() {\n\t\t\ttrigger(\"update\", this.state);\n\t\t},\n\n\t\tdraw() {\n\t\t\ttrigger(\"draw\", this.state);\n\t\t},\n\n\t\tinspect() {\n\t\t\treturn this.state;\n\t\t},\n\n\t};\n\n}\n\nfunction onLoad(cb: () => void): void {\n\tif (app.loaded) {\n\t\tcb();\n\t} else {\n\t\tgame.on(\"load\", cb);\n\t}\n}\n\nfunction scene(id: SceneID, def: SceneDef) {\n\tgame.scenes[id] = def;\n}\n\nfunction go(id: SceneID, ...args) {\n\n\tif (!game.scenes[id]) {\n\t\tthrow new Error(`scene not found: ${id}`);\n\t}\n\n\tconst cancel = game.on(\"updateStart\", () => {\n\n\t\tgame.events = {};\n\n\t\tgame.objEvents = {\n\t\t\tadd: new IDList(),\n\t\t\tupdate: new IDList(),\n\t\t\tdraw: new IDList(),\n\t\t\tdestroy: new IDList(),\n\t\t};\n\n\t\tgame.root.every((obj) => {\n\t\t\tif (!obj.is(\"stay\")) {\n\t\t\t\tgame.root.remove(obj);\n\t\t\t}\n\t\t})\n\n\t\tgame.root.clearEvents();\n\t\tgame.timers = new IDList();\n\n\t\t// cam\n\t\tgame.cam = {\n\t\t\tpos: center(),\n\t\t\tscale: vec2(1),\n\t\t\tangle: 0,\n\t\t\tshake: 0,\n\t\t\ttransform: new Mat4(),\n\t\t};\n\n\t\tgame.layers = {};\n\t\tgame.defLayer = null;\n\t\tgame.gravity = DEF_GRAVITY;\n\n\t\tgame.scenes[id](...args);\n\n\t\tif (gopt.debug !== false) {\n\t\t\tenterDebugMode();\n\t\t}\n\n\t\tif (gopt.burp) {\n\t\t\tenterBurpMode();\n\t\t}\n\n\t\tcancel();\n\n\t});\n\n}\n\nfunction getData<T>(key: string, def?: T): T {\n\ttry {\n\t\treturn JSON.parse(window.localStorage[key]);\n\t} catch {\n\t\tif (def) {\n\t\t\tsetData(key, def);\n\t\t\treturn def;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nfunction setData(key: string, data: any) {\n\twindow.localStorage[key] = JSON.stringify(data);\n}\n\nfunction plug<T>(plugin: KaboomPlugin<T>): MergeObj<T> & KaboomCtx {\n\tconst funcs = plugin(ctx);\n\tfor (const k in funcs) {\n\t\t// @ts-ignore\n\t\tctx[k] = funcs[k];\n\t\tif (gopt.global !== false) {\n\t\t\t// @ts-ignore\n\t\t\twindow[k] = funcs[k];\n\t\t}\n\t}\n\treturn ctx as unknown as MergeObj<T> & KaboomCtx;\n}\n\nfunction center(): Vec2 {\n\treturn vec2(width() / 2, height() / 2);\n}\n\nfunction grid(level: Level, p: Vec2) {\n\n\treturn {\n\n\t\tid: \"grid\",\n\t\tgridPos: p.clone(),\n\n\t\tsetGridPos(...args) {\n\t\t\tconst p = vec2(...args);\n\t\t\tthis.gridPos = p.clone();\n\t\t\tthis.pos = vec2(\n\t\t\t\tlevel.offset().x + this.gridPos.x * level.gridWidth(),\n\t\t\t\tlevel.offset().y + this.gridPos.y * level.gridHeight()\n\t\t\t);\n\t\t},\n\n\t\tmoveLeft() {\n\t\t\tthis.setGridPos(this.gridPos.add(vec2(-1, 0)));\n\t\t},\n\n\t\tmoveRight() {\n\t\t\tthis.setGridPos(this.gridPos.add(vec2(1, 0)));\n\t\t},\n\n\t\tmoveUp() {\n\t\t\tthis.setGridPos(this.gridPos.add(vec2(0, -1)));\n\t\t},\n\n\t\tmoveDown() {\n\t\t\tthis.setGridPos(this.gridPos.add(vec2(0, 1)));\n\t\t},\n\n\t};\n\n}\n\nfunction addLevel(map: string[], opt: LevelOpt): Level {\n\n\tif (!opt.width || !opt.height) {\n\t\tthrow new Error(\"Must provide level grid width & height.\");\n\t}\n\n\tconst objs: GameObj[] = [];\n\tconst offset = vec2(opt.pos || vec2(0));\n\tlet longRow = 0;\n\n\tconst level = {\n\n\t\toffset() {\n\t\t\treturn offset.clone();\n\t\t},\n\n\t\tgridWidth() {\n\t\t\treturn opt.width;\n\t\t},\n\n\t\tgridHeight() {\n\t\t\treturn opt.height;\n\t\t},\n\n\t\tgetPos(...args): Vec2 {\n\t\t\tconst p = vec2(...args);\n\t\t\treturn vec2(\n\t\t\t\toffset.x + p.x * opt.width,\n\t\t\t\toffset.y + p.y * opt.height\n\t\t\t);\n\t\t},\n\n\t\tspawn(sym: string, ...args): GameObj {\n\n\t\t\tconst p = vec2(...args);\n\n\t\t\tconst comps = (() => {\n\t\t\t\tif (opt[sym]) {\n\t\t\t\t\tif (typeof opt[sym] !== \"function\") {\n\t\t\t\t\t\tthrow new Error(\"level symbol def must be a function returning a component list\");\n\t\t\t\t\t}\n\t\t\t\t\treturn opt[sym](p);\n\t\t\t\t} else if (opt.any) {\n\t\t\t\t\treturn opt.any(sym, p);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\tif (!comps) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst posComp = vec2(\n\t\t\t\toffset.x + p.x * opt.width,\n\t\t\t\toffset.y + p.y * opt.height\n\t\t\t);\n\n\t\t\tfor (const comp of comps) {\n\t\t\t\tif (comp.id === \"pos\") {\n\t\t\t\t\tposComp.x += comp.pos.x;\n\t\t\t\t\tposComp.y += comp.pos.y;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcomps.push(pos(posComp));\n\t\t\tcomps.push(grid(this, p));\n\n\t\t\tconst obj = game.root.add(comps);\n\n\t\t\tobjs.push(obj);\n\n\t\t\treturn obj;\n\n\t\t},\n\n\t\twidth() {\n\t\t\treturn longRow * opt.width;\n\t\t},\n\n\t\theight() {\n\t\t\treturn map.length * opt.height;\n\t\t},\n\n\t\tdestroy() {\n\t\t\tfor (const obj of objs) {\n\t\t\t\tobj.destroy();\n\t\t\t}\n\t\t},\n\n\t};\n\n\tmap.forEach((row, i) => {\n\n\t\tconst syms = row.split(\"\");\n\n\t\tlongRow = Math.max(syms.length, longRow);\n\n\t\tsyms.forEach((sym, j) => {\n\t\t\tlevel.spawn(sym, vec2(j, i));\n\t\t});\n\n\t});\n\n\treturn level;\n\n}\n\nfunction record(frameRate?): Recording {\n\n\tconst stream = app.canvas.captureStream(frameRate);\n\tconst audioDest = audio.ctx.createMediaStreamDestination();\n\n\taudio.masterNode.connect(audioDest)\n\n\tconst audioStream = audioDest.stream;\n\tconst [firstAudioTrack] = audioStream.getAudioTracks();\n\n\t// TODO: Enabling audio results in empty video if no audio received\n\t// stream.addTrack(firstAudioTrack);\n\n\tconst recorder = new MediaRecorder(stream);\n\tconst chunks = [];\n\n\trecorder.ondataavailable = (e) => {\n\t\tif (e.data.size > 0) {\n\t\t\tchunks.push(e.data);\n\t\t}\n\t};\n\n\trecorder.onerror = (e) => {\n\t\taudio.masterNode.disconnect(audioDest)\n\t\tstream.getTracks().forEach(t => t.stop());\n\t};\n\n\trecorder.start();\n\n\treturn {\n\n\t\tresume() {\n\t\t\trecorder.resume();\n\t\t},\n\n\t\tpause() {\n\t\t\trecorder.pause();\n\t\t},\n\n\t\tdownload(filename = \"kaboom.mp4\") {\n\n\t\t\trecorder.onstop = () => {\n\t\t\t\tdownloadBlob(new Blob(chunks, {\n\t\t\t\t\ttype: \"video/mp4\",\n\t\t\t\t}), filename);\n\t\t\t}\n\n\t\t\trecorder.stop();\n\t\t\t// cleanup\n\t\t\taudio.masterNode.disconnect(audioDest)\n\t\t\tstream.getTracks().forEach(t => t.stop());\n\n\t\t},\n\n\t};\n\n}\n\nfunction focus() {\n\tdeprecateMsg(\"focus()\", \"canvas.focus()\");\n\tapp.canvas.focus();\n}\n\nfunction isFocused(): boolean {\n\treturn document.activeElement === app.canvas;\n}\n\ninterface BoomOpt {\n\t/**\n\t * Animation speed.\n\t */\n\tspeed?: number,\n\t/**\n\t * Scale.\n\t */\n\tscale?: number,\n\t/**\n\t * Additional ka components.\n\t */\n\tkaComps?: () => CompList<any>,\n\t/**\n\t * Additional boom components.\n\t */\n\tboomComps?: () => CompList<any>,\n}\n\n// aliases for root game obj operations\nfunction add<T>(comps: CompList<T>): GameObj<T> {\n\treturn game.root.add(comps);\n}\n\nfunction readd<T>(obj: GameObj<T>): GameObj<T> {\n\treturn game.root.readd(obj);\n}\n\nfunction destroy(obj: GameObj) {\n\treturn game.root.remove(obj);\n}\n\nfunction destroyAll(tag: Tag) {\n\treturn game.root.removeAll(tag);\n}\n\nfunction get(...args) {\n\treturn game.root.get(...args);\n}\n\nfunction every(...args) {\n\t// @ts-ignore\n\treturn game.root.every(...args);\n}\n\nfunction revery(...args) {\n\t// @ts-ignore\n\treturn game.root.revery(...args);\n}\n\ninterface ExplodeComp extends Comp {\n}\n\nfunction explode(speed: number = 2, size: number = 1): ExplodeComp {\n\tlet time = 0;\n\treturn {\n\t\tid: \"explode\",\n\t\trequire: [ \"scale\", ],\n\t\tupdate() {\n\t\t\tconst s = Math.sin(time * speed) * size;\n\t\t\tif (s < 0) {\n\t\t\t\tdestroy(this);\n\t\t\t}\n\t\t\tthis.scale = vec2(s);\n\t\t\ttime += dt();\n\t\t},\n\t};\n}\n\nlet kaSprite = null;\nlet boomSprite = null;\n\nloadSprite(null, kaSrc).then((spr) => kaSprite = spr);\nloadSprite(null, boomSrc).then((spr) => boomSprite = spr);\n\n// TODO: use children obj\nfunction addKaboom(p: Vec2, opt: BoomOpt = {}): Kaboom {\n\n\tconst speed = (opt.speed || 1) * 5;\n\tconst s = opt.scale || 1;\n\n\tconst boom = add([\n\t\tpos(p),\n\t\tsprite(boomSprite),\n\t\tscale(0),\n\t\tstay(),\n\t\torigin(\"center\"),\n\t\texplode(speed, s),\n\t\t...(opt.boomComps ?? (() => []))(),\n\t]);\n\n\tconst ka = add([\n\t\tpos(p),\n\t\tsprite(kaSprite),\n\t\tscale(0),\n\t\tstay(),\n\t\torigin(\"center\"),\n\t\ttimer(0.4 / speed, () => ka.use(explode(speed, s))),\n\t\t...(opt.kaComps ?? (() => []))(),\n\t]);\n\n\treturn {\n\t\tdestroy() {\n\t\t\tdestroy(ka);\n\t\t\tdestroy(boom);\n\t\t},\n\t};\n\n}\n\nfunction frames() {\n\treturn app.numFrames;\n}\n\nfunction updateFrame() {\n\n\tgame.trigger(\"updateStart\");\n\n\t// update timers\n\tgame.timers.forEach((t, id) => {\n\t\tt.time -= dt();\n\t\tif (t.time <= 0) {\n\t\t\t// TODO: some timer action causes crash on FF when dt is really high, not sure why\n\t\t\tt.action();\n\t\t\tgame.timers.delete(id);\n\t\t}\n\t});\n\n\t// update every obj\n\tgame.root.update();\n\n}\n\nfunction drawFrame() {\n\n\t// calculate camera matrix\n\tconst cam = game.cam;\n\tconst shake = Vec2.fromAngle(rand(0, 360)).scale(cam.shake);\n\n\tcam.shake = lerp(cam.shake, 0, 5 * dt());\n\tcam.transform = new Mat4()\n\t\t.translate(center())\n\t\t.scale(cam.scale)\n\t\t.rotateZ(cam.angle)\n\t\t.translate(cam.pos.scale(-1).add(shake))\n\t\t;\n\n\tgame.root.draw();\n\n}\n\nfunction drawLoadScreen() {\n\n\t// if assets are not fully loaded, draw a progress bar\n\tconst progress = loadProgress();\n\n\tif (progress === 1) {\n\t\tapp.loaded = true;\n\t\tgame.trigger(\"load\");\n\t} else {\n\n\t\tconst w = width() / 2;\n\t\tconst h = 24 / app.scale;\n\t\tconst pos = vec2(width() / 2, height() / 2).sub(vec2(w / 2, h / 2));\n\n\t\tdrawRect({\n\t\t\tpos: vec2(0),\n\t\t\twidth: width(),\n\t\t\theight: height(),\n\t\t\tcolor: rgb(0, 0, 0),\n\t\t});\n\n\t\tdrawRect({\n\t\t\tpos: pos,\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t\tfill: false,\n\t\t\toutline: {\n\t\t\t\twidth: 4 / app.scale,\n\t\t\t},\n\t\t});\n\n\t\tdrawRect({\n\t\t\tpos: pos,\n\t\t\twidth: w * progress,\n\t\t\theight: h,\n\t\t});\n\n\t}\n\n}\n\nfunction drawInspectText(pos, txt) {\n\n\tconst pad = vec2(8);\n\n\tpushTransform();\n\tpushTranslate(pos);\n\tpushScale(1 / app.scale);\n\n\tconst ftxt = formatText({\n\t\ttext: txt,\n\t\tfont: assets.fonts[DBG_FONT],\n\t\tsize: 16,\n\t\tpos: pad,\n\t\tcolor: rgb(255, 255, 255),\n\t\tfixed: true,\n\t});\n\n\tconst bw = ftxt.width + pad.x * 2;\n\tconst bh = ftxt.height + pad.x * 2;\n\n\tif (pos.x + bw / app.scale >= width()) {\n\t\tpushTranslate(vec2(-bw, 0));\n\t}\n\n\tif (pos.y + bh / app.scale >= height()) {\n\t\tpushTranslate(vec2(0, -bh));\n\t}\n\n\tdrawRect({\n\t\twidth: bw,\n\t\theight: bh,\n\t\tcolor: rgb(0, 0, 0),\n\t\tradius: 4,\n\t\topacity: 0.8,\n\t\tfixed: true,\n\t});\n\n\tdrawFormattedText(ftxt);\n\tpopTransform();\n\n}\n\nfunction drawDebug() {\n\n\tif (debug.inspect) {\n\n\t\tlet inspecting = null;\n\t\tconst lcolor = Color.fromArray(gopt.inspectColor ?? [0, 0, 255]);\n\n\t\t// draw area outline\n\t\tgame.root.every((obj) => {\n\n\t\t\tif (!obj.area) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (obj.hidden) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!inspecting) {\n\t\t\t\tif (obj.isHovering()) {\n\t\t\t\t\tinspecting = obj;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst lwidth = (inspecting === obj ? 8 : 4);\n\t\t\tconst a = obj.worldArea();\n\t\t\tconst w = a.p2.x - a.p1.x;\n\t\t\tconst h = a.p2.y - a.p1.y;\n\n\t\t\tdrawRect({\n\t\t\t\tpos: a.p1,\n\t\t\t\twidth: w,\n\t\t\t\theight: h,\n\t\t\t\toutline: {\n\t\t\t\t\twidth: lwidth,\n\t\t\t\t\tcolor: lcolor,\n\t\t\t\t},\n\t\t\t\tfill: false,\n\t\t\t\tfixed: obj.fixed,\n\t\t\t});\n\n\t\t});\n\n\t\tif (inspecting) {\n\n\t\t\tconst lines = [];\n\t\t\tconst data = inspecting.inspect();\n\n\t\t\tfor (const tag in data) {\n\t\t\t\tif (data[tag]) {\n\t\t\t\t\tlines.push(`${tag}: ${data[tag]}`);\n\t\t\t\t} else {\n\t\t\t\t\tlines.push(`${tag}`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdrawInspectText(mousePos(), lines.join(\"\\n\"));\n\n\t\t}\n\n\t\tdrawInspectText(vec2(8 / app.scale), `FPS: ${debug.fps()}`);\n\n\t}\n\n\tif (debug.paused) {\n\n\t\t// top right corner\n\t\tpushTransform();\n\t\tpushTranslate(width(), 0);\n\t\tpushScale(1 / app.scale);\n\t\tpushTranslate(-8, 8);\n\n\t\tconst size = 32;\n\n\t\t// bg\n\t\tdrawRect({\n\t\t\twidth: size,\n\t\t\theight: size,\n\t\t\torigin: \"topright\",\n\t\t\tcolor: rgb(0, 0, 0),\n\t\t\topacity: 0.8,\n\t\t\tradius: 4,\n\t\t\tfixed: true,\n\t\t});\n\n\t\t// pause icon\n\t\tfor (let i = 1; i <= 2; i++) {\n\t\t\tdrawRect({\n\t\t\t\twidth: 4,\n\t\t\t\theight: size * 0.6,\n\t\t\t\torigin: \"center\",\n\t\t\t\tpos: vec2(-size / 3 * i, size * 0.5),\n\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\tradius: 2,\n\t\t\t\tfixed: true,\n\t\t\t});\n\t\t}\n\n\t\tpopTransform();\n\n\t}\n\n\tif (debug.timeScale !== 1) {\n\n\t\t// bottom right corner\n\t\tpushTransform();\n\t\tpushTranslate(width(), height());\n\t\tpushScale(1 / app.scale);\n\t\tpushTranslate(-8, -8);\n\n\t\tconst pad = 8;\n\n\t\t// format text first to get text size\n\t\tconst ftxt = formatText({\n\t\t\ttext: debug.timeScale.toFixed(1),\n\t\t\tfont: assets.fonts[DBG_FONT],\n\t\t\tsize: 16,\n\t\t\tcolor: rgb(255, 255, 255),\n\t\t\tpos: vec2(-pad),\n\t\t\torigin: \"botright\",\n\t\t\tfixed: true,\n\t\t});\n\n\t\t// bg\n\t\tdrawRect({\n\t\t\twidth: ftxt.width + pad * 2 + pad * 4,\n\t\t\theight: ftxt.height + pad * 2,\n\t\t\torigin: \"botright\",\n\t\t\tcolor: rgb(0, 0, 0),\n\t\t\topacity: 0.8,\n\t\t\tradius: 4,\n\t\t\tfixed: true,\n\t\t});\n\n\t\t// fast forward / slow down icon\n\t\tfor (let i = 0; i < 2; i++) {\n\t\t\tconst flipped = debug.timeScale < 1;\n\t\t\tdrawTriangle({\n\t\t\t\tp1: vec2(-ftxt.width - pad * (flipped ? 2 : 3.5), -pad),\n\t\t\t\tp2: vec2(-ftxt.width - pad * (flipped ? 2 : 3.5), -pad - ftxt.height),\n\t\t\t\tp3: vec2(-ftxt.width - pad * (flipped ? 3.5 : 2), -pad - ftxt.height / 2),\n\t\t\t\tpos: vec2(-i * pad * 1 + (flipped ? -pad * 0.5 : 0), 0),\n\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\tfixed: true,\n\t\t\t});\n\t\t}\n\n\t\t// text\n\t\tdrawFormattedText(ftxt);\n\n\t\tpopTransform();\n\n\t}\n\n\tif (debug.curRecording) {\n\n\t\tpushTransform();\n\t\tpushTranslate(0, height());\n\t\tpushScale(1 / app.scale);\n\t\tpushTranslate(24, -24);\n\n\t\tdrawCircle({\n\t\t\tradius: 12,\n\t\t\tcolor: rgb(255, 0, 0),\n\t\t\topacity: wave(0, 1, time() * 4),\n\t\t\tfixed: true,\n\t\t});\n\n\t\tpopTransform();\n\n\t}\n\n\tif (debug.showLog && game.logs.length > 0) {\n\n\t\tpushTransform();\n\t\tpushTranslate(0, height());\n\t\tpushScale(1 / app.scale);\n\t\tpushTranslate(8, -8);\n\n\t\tconst pad = 8;\n\t\tconst max = gopt.logMax ?? 1;\n\n\t\tif (game.logs.length > max) {\n\t\t\tgame.logs = game.logs.slice(0, max);\n\t\t}\n\n\t\tconst ftext = formatText({\n\t\t\ttext: game.logs.join(\"\\n\"),\n\t\t\tfont: assets.fonts[DBG_FONT],\n\t\t\tpos: vec2(pad, -pad),\n\t\t\torigin: \"botleft\",\n\t\t\tsize: 16,\n\t\t\twidth: width() * app.scale * 0.6,\n\t\t\tlineSpacing: pad / 2,\n\t\t\tfixed: true,\n\t\t\tstyles: {\n\t\t\t\t\"time\": { color: rgb(127, 127, 127) },\n\t\t\t\t\"info\": { color: rgb(255, 255, 255) },\n\t\t\t\t\"error\": { color: rgb(255, 0, 127) },\n\t\t\t},\n\t\t});\n\n\t\tdrawRect({\n\t\t\twidth: ftext.width + pad * 2,\n\t\t\theight: ftext.height + pad * 2,\n\t\t\torigin: \"botleft\",\n\t\t\tcolor: rgb(0, 0, 0),\n\t\t\tradius: 4,\n\t\t\topacity: 0.8,\n\t\t\tfixed: true,\n\t\t});\n\n\t\tdrawFormattedText(ftext);\n\t\tpopTransform();\n\n\t}\n\n}\n\nif (gopt.debug !== false) {\n\tenterDebugMode();\n}\n\nif (gopt.burp) {\n\tenterBurpMode();\n}\n\nwindow.addEventListener(\"error\", (e) => {\n\tdebug.error(`Error: ${e.error.message}`);\n\tquit();\n\trun(() => {\n\t\tif (loadProgress() === 1) {\n\t\t\tframeStart();\n\t\t\tdrawDebug();\n\t\t\tframeEnd();\n\t\t}\n\t});\n});\n\nfunction run(f: () => void) {\n\n\tconst frame = (t: number) => {\n\n\t\tif (document.visibilityState !== \"visible\") {\n\t\t\tapp.loopID = requestAnimationFrame(frame);\n\t\t\treturn;\n\t\t}\n\n\t\tconst realTime = t / 1000;\n\t\tconst realDt = realTime - app.realTime;\n\n\t\tapp.realTime = realTime;\n\n\t\tif (!app.skipTime) {\n\t\t\tapp.dt = realDt;\n\t\t\tapp.time += app.dt;\n\t\t\tapp.fpsCounter.tick(app.dt);\n\t\t}\n\n\t\tapp.skipTime = false;\n\t\tapp.numFrames++;\n\n\t\tf();\n\n\t\tfor (const k in app.keyStates) {\n\t\t\tapp.keyStates[k] = processButtonState(app.keyStates[k]);\n\t\t}\n\n\t\tfor (const m in app.mouseStates) {\n\t\t\tapp.mouseStates[m] = processButtonState(app.mouseStates[m]);\n\t\t}\n\n\t\tapp.charInputted = [];\n\t\tapp.isMouseMoved = false;\n\t\tapp.isKeyPressed = false;\n\t\tapp.isKeyPressedRepeat = false;\n\t\tapp.isKeyReleased = false;\n\t\tapp.loopID = requestAnimationFrame(frame);\n\n\t};\n\n\tapp.stopped = false;\n\tapp.loopID = requestAnimationFrame(frame);\n\n}\n\n// main game loop\nrun(() => {\n\n\t// running this every frame now mainly because isFullscreen() is not updated real time when requested fullscreen\n\tupdateViewport();\n\n\tif (!app.loaded) {\n\t\tframeStart();\n\t\tdrawLoadScreen();\n\t\tframeEnd();\n\t} else {\n\n\t\t// TODO: this gives the latest mousePos in input handlers but uses cam matrix from last frame\n\t\tgame.trigger(\"input\");\n\n\t\tif (!debug.paused) {\n\t\t\tupdateFrame();\n\t\t}\n\n\t\tframeStart();\n\t\tdrawFrame();\n\n\t\tif (gopt.debug !== false) {\n\t\t\tdrawDebug();\n\t\t}\n\n\t\tframeEnd();\n\n\t}\n\n});\n\nloadFont(\n\t\"apl386\",\n\tapl386Src,\n\t45,\n\t74,\n);\n\nloadFont(\n\t\"apl386o\",\n\tapl386oSrc,\n\t45,\n\t74,\n);\n\nloadFont(\n\t\"sink\",\n\tsinkSrc,\n\t6,\n\t8,\n\t{\n\t\tchars: `█☺☻♥♦♣♠●○▪□■◘♪♫≡►◄⌂ÞÀß×¥↑↓→←◌●▼▲ !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_\\`abcdefghijklmnopqrstuvwxyz{|}~Χ░▒▓ḀḁḂ│┬┤┌┐ḃḄ┼ḅḆḇḈḉḊḋḌ─├┴└┘ḍḎ⁞ḏḐḑḒḓḔḕḖḗḘ▄ḙḚḛḜ…ḝḞḟḠḡḢḣḤḥḦ▌▐ḧḨḩḪḫḬḭḮḯḰḱḲḳḴḵḶḷḸḹḺḻḼḽḾḿṀṁṂṃṄṅṆṇṈṉṊṋṌṍṎṏṐṑṒṓṔṕṖṗṘṙṚṛṜṝṞṟṠṡṢṣṤṥṦṧṨṩṪṫṬṭṮṯṰṱṲṳṴṵṶṷṸṹṺṻṼ`,\n\t}\n);\n\nloadFont(\n\t\"sinko\",\n\tsinkoSrc,\n\t8,\n\t10,\n);\n\nframeStart();\nframeEnd();\n\n// the exported ctx handle\nconst ctx: KaboomCtx = {\n\t// asset load\n\tloadRoot,\n\tloadSprite,\n\tloadSpriteAtlas,\n\tloadSound,\n\tloadFont,\n\tloadShader,\n\tloadAseprite,\n\tloadPedit,\n\tloadBean,\n\tload,\n\t// query\n\twidth,\n\theight,\n\tcenter,\n\tdt,\n\ttime,\n\tscreenshot,\n\trecord,\n\tisFocused,\n\tfocus,\n\tcursor,\n\tregCursor,\n\tfullscreen,\n\tisFullscreen,\n\tonLoad,\n\tisTouch: () => app.isTouch,\n\t// misc\n\tlayers,\n\tcamPos,\n\tcamScale,\n\tcamRot,\n\tshake,\n\ttoScreen,\n\ttoWorld,\n\tgravity,\n\t// obj\n\tadd,\n\treadd,\n\tdestroy,\n\tdestroyAll,\n\tget,\n\tevery,\n\trevery,\n\t// comps\n\tpos,\n\tscale,\n\trotate,\n\tcolor,\n\topacity,\n\torigin,\n\tlayer,\n\tarea,\n\tsprite,\n\ttext,\n\trect,\n\tcircle,\n\tuvquad,\n\toutline,\n\tbody,\n\tshader,\n\ttimer,\n\tsolid,\n\tfixed,\n\tstay,\n\thealth,\n\tlifespan,\n\tz,\n\tmove,\n\toutview,\n\tcleanup,\n\tfollow,\n\tstate,\n\t// group events\n\ton,\n\tonUpdate,\n\tonDraw,\n\tonCollide,\n\tonClick,\n\tonHover,\n\t// input\n\tonKeyDown,\n\tonKeyPress,\n\tonKeyPressRepeat,\n\tonKeyRelease,\n\tonMouseDown,\n\tonMousePress,\n\tonMouseRelease,\n\tonMouseMove,\n\tonCharInput,\n\tonTouchStart,\n\tonTouchMove,\n\tonTouchEnd,\n\tmousePos,\n\tmouseWorldPos,\n\tmouseDeltaPos,\n\tisKeyDown,\n\tisKeyPressed,\n\tisKeyPressedRepeat,\n\tisKeyReleased,\n\tisMouseDown,\n\tisMousePressed,\n\tisMouseReleased,\n\tisMouseMoved,\n\t// timer\n\tloop,\n\twait,\n\t// audio\n\tplay,\n\tvolume,\n\tburp,\n\taudioCtx: audio.ctx,\n\t// math\n\tTimer,\n\tLine,\n\tRect,\n\tCircle,\n\tVec2,\n\tColor,\n\tMat4,\n\tQuad,\n\tRNG,\n\trng,\n\trand,\n\trandi,\n\trandSeed,\n\tvec2,\n\trgb,\n\thsl2rgb,\n\tquad,\n\tchoose,\n\tchance,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\tdeg2rad,\n\trad2deg,\n\ttestAreaRect,\n\ttestAreaLine,\n\ttestAreaCircle,\n\ttestAreaPolygon,\n\ttestAreaPoint,\n\ttestAreaArea,\n\ttestLineLine,\n\ttestRectRect,\n\ttestRectLine,\n\ttestRectPoint,\n\ttestPolygonPoint,\n\ttestLinePolygon,\n\ttestPolygonPolygon,\n\ttestCircleCircle,\n\ttestCirclePoint,\n\ttestRectPolygon,\n\t// raw draw\n\tdrawSprite,\n\tdrawText,\n\tformatText,\n\tdrawRect,\n\tdrawLine,\n\tdrawLines,\n\tdrawTriangle,\n\tdrawCircle,\n\tdrawEllipse,\n\tdrawUVQuad,\n\tdrawPolygon,\n\tdrawFormattedText,\n\tpushTransform,\n\tpopTransform,\n\tpushTranslate,\n\tpushRotate: pushRotateZ,\n\tpushScale,\n\t// debug\n\tdebug,\n\t// scene\n\tscene,\n\tgo,\n\t// level\n\taddLevel,\n\t// storage\n\tgetData,\n\tsetData,\n\t// plugin\n\tplug,\n\t// char sets\n\tASCII_CHARS,\n\tCP437_CHARS,\n\t// dom\n\tcanvas: app.canvas,\n\t// misc\n\taddKaboom,\n\t// dirs\n\tLEFT: Vec2.LEFT,\n\tRIGHT: Vec2.RIGHT,\n\tUP: Vec2.UP,\n\tDOWN: Vec2.DOWN,\n\t// colors\n\tRED: Color.RED,\n\tGREEN: Color.GREEN,\n\tBLUE: Color.BLUE,\n\tYELLOW: Color.YELLOW,\n\tMAGENTA: Color.MAGENTA,\n\tCYAN: Color.CYAN,\n\tWHITE: Color.WHITE,\n\tBLACK: Color.BLACK,\n\t// deprecated\n\tkeyIsDown: deprecate(\"keyIsDown()\", \"isKeyDown()\", isKeyDown),\n\tkeyIsPressed: deprecate(\"keyIsPressed()\", \"isKeyPressed()\", isKeyPressed),\n\tkeyIsPressedRep: deprecate(\"keyIsPressedRep()\", \"isKeyPressedRepeat()\", isKeyPressedRepeat),\n\tkeyIsReleased: deprecate(\"keyIsReleased()\", \"isKeyReleased()\", isKeyReleased),\n\tmouseIsDown: deprecate(\"mouseIsDown()\", \"isMouseDown()\", isMouseDown),\n\tmouseIsClicked: deprecate(\"mouseIsClicked()\", \"isMousePressed()\", isMousePressed),\n\tmouseIsReleased: deprecate(\"mouseIsReleased()\", \"isMouseReleased()\", isMouseReleased),\n\tmouseIsMoved: deprecate(\"mouseIsMoved()\", \"isMouseMoved()\", isMouseMoved),\n\tdir: deprecate(\"dir()\", \"Vec2.fromAngle()\", Vec2.fromAngle),\n\taction: deprecate(\"action()\", \"onUpdate()\", onUpdate),\n\trender: deprecate(\"render()\", \"onDraw()\", onDraw),\n\tcollides: deprecate(\"collides()\", \"onCollide()\", onCollide),\n\tclicks: deprecate(\"clicks()\", \"onClick()\", onClick),\n\thovers: deprecate(\"hovers()\", \"onHover()\", onHover),\n\tkeyDown: deprecate(\"keyDown()\", \"onKeyDown()\", onKeyDown),\n\tkeyPress: deprecate(\"keyPress()\", \"onKeyPress()\", onKeyPress),\n\tkeyPressRep: deprecate(\"keyPressRep()\", \"onKeyPressRepeat()\", onKeyPressRepeat),\n\tkeyRelease: deprecate(\"keyRelease()\", \"onKeyRelease()\", onKeyRelease),\n\tmouseDown: deprecate(\"mouseDown()\", \"onMouseDown()\", onMouseDown),\n\tmouseClick: deprecate(\"mouseClick()\", \"onMousePress()\", onMousePress),\n\tmouseRelease: deprecate(\"mouseRelease()\", \"onMouseRelease()\", onMouseRelease),\n\tmouseMove: deprecate(\"mouseMove()\", \"onMouseMove()\", onMouseMove),\n\tcharInput: deprecate(\"charInput()\", \"onCharInput()\", onCharInput),\n\ttouchStart: deprecate(\"touchStart()\", \"onTouchStart()\", onTouchStart),\n\ttouchMove: deprecate(\"touchMove()\", \"onTouchMove()\", onTouchMove),\n\ttouchEnd: deprecate(\"touchEnd()\", \"onTouchEnd()\", onTouchEnd),\n\tfocused: deprecate(\"focused()\", \"isFocused()\", isFocused),\n\tready: deprecate(\"ready()\", \"onLoad()\", onLoad),\n};\n\nif (gopt.plugins) {\n\tgopt.plugins.forEach(plug);\n}\n\n// export everything to window if global is set\nif (gopt.global !== false) {\n\tfor (const k in ctx) {\n\t\twindow[k] = ctx[k];\n\t}\n}\n\nreturn ctx;\n\n};\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","import kaboom from \"kaboom\"\r\nimport { GameScene } from './GameScene';\r\n\r\nscene('game-scene', GameScene)\r\n\r\nscene(\"menu-scene\", () => {\r\n\r\n  add([\r\n    rect(width() - 120,height()),\r\n    pos(60,0),\r\n    color(100,25,35)\r\n  ])\r\n\r\n  add([\r\n    rect(width() - 120,height() - 350),\r\n    pos(60,60),\r\n    color(255,255,255),\r\n    opacity(0.25)\r\n  ])\r\n  \r\n\r\n  add([\r\n    sprite(\"border\"),\r\n    pos(65,3),\r\n    scale(0.2)\r\n  ])\r\n\r\n\tadd([\r\n\t\ttext(\"ADVENTURE GAME FOR BIBE ♥\", {size: 12, font: 'sink'}),\r\n\t\tpos(120, 80),\r\n\t\tscale(1),\r\n\t]);\r\n\r\n  add([\r\n\t\ttext(\"Creator: Mark(Bibe)\", {size: 12, font: 'sink'}),\r\n\t\tpos(150, 380),\r\n\t\tscale(1),\r\n\t]);\r\n\r\n  function addButton(txt, p, f) {\r\n    const startBtn = add([\r\n      text(txt, {size: 16, font: 'sink'}),\r\n      pos(p),\r\n      area({ cursor: \"pointer\", }),\r\n      scale(0.5),\r\n      origin(\"center\"),\r\n    ]);\r\n  \r\n    startBtn.onClick(f)\r\n  \r\n    startBtn.onUpdate(() => {\r\n      if (startBtn.isHovering()) {\r\n        const t = time() * 1\r\n        startBtn.color = rgb(\r\n          wave(0, 255, t),\r\n          wave(0, 255, t + 2),\r\n          wave(0, 255, t + 4),\r\n        )\r\n        startBtn.scale = vec2(1.1)\r\n      } else {\r\n        startBtn.scale = vec2(1)\r\n        startBtn.color = rgb()\r\n      }\r\n    })\r\n  }\r\n\r\n  addButton(\"START\", vec2(240, 150), () => {\r\n    go('game-scene')\r\n  })\r\n\r\n});","import k from \"../kaboom\";\r\nimport { npcText, healthText, tableText, wallText, gemText } from \"../utils/textFunctions\";\r\nimport { maps, mapConfig, potions, potionConfig, floors, floorsConfig, environment, environmentConfig, treasures, treasuresConfig } from \"../map/map\";\r\nimport { updateDialog } from \"../utils/dialogFunction\";\r\nimport { HappyEndScene } from \"./FinalScene\";\r\n\r\nexport function GameScene() {\r\n  layers(['bg', 'game', 'table', 'ui'], 'game')\r\n\r\n  // INIT VARS\r\n  let curDialog = 0\r\n\r\n  // ADD FLOORS - TILES\r\n  addLevel(floors[0], floorsConfig)\r\n\r\n  // SELECT CURRENT MAP\r\n  addLevel(maps[0], mapConfig)\r\n  \r\n  // ADD BACKGROUND\r\n  add([sprite('bg'), layer('bg')])\r\n \r\n  // ADD PLAYER\r\n  const faune = add([\r\n    sprite('faune'),\r\n    pos(width() * 0.5, height() * 0.5),\r\n    origin('center'),\r\n    solid(),\r\n    body({weight: 0}),\r\n    area({width: 20, height: 20}),\r\n    \"faune\",\r\n    {\r\n      health: 100,\r\n      speed: 2,\r\n      gems: 0,\r\n      score: 0\r\n    }\r\n  ])\r\n\r\n  // ADD TREASURE MAP\r\n  addLevel(treasures[0], treasuresConfig)\r\n\r\n  // ADD ENVIRONMENT MAP\r\n  addLevel(environment[0], environmentConfig)\r\n  \r\n  // ADD FINAL SCENE\r\n  scene('happy-end-scene', HappyEndScene)\r\n\r\n  // WHEN PLAYER REACH THE MAX GEMS - GO TO END SCENE\r\n  faune.onUpdate(() => {\r\n    if(faune.gems === 10 ) {\r\n        go(\"happy-end-scene\", 1000)\r\n    }\r\n  })\r\n\r\n  // CAM POSITION\r\n  faune.onUpdate(() => {\r\n    camPos(faune.pos)\r\n  })\r\n\r\n  // TEST KABOOM - IT GIVES SPEED\r\n  const kaboom = add([\r\n    pos(width() * 0.5, height() * 0.5),\r\n    sprite('kaboom'),\r\n    area({width: 20, height: 20}),\r\n    solid(),\r\n    scale(0.5),\r\n    'kaboom'\r\n  ])\r\n\r\n  // COLLIDE - FAUNE - TABLE\r\n  onCollide(\"faune\", \"table\", (faune, table) => {\r\n    const dialogs = [\r\n      [ \"table-4\", \"Hi Bibe!\" ],\r\n      [ \"table-4\", \"You have one easy task\" ],\r\n      [ \"table-4\", \"in this little rpg game\" ],\r\n      [ \"table-4\", \"Collect all of the missing gemstones...\" ],\r\n      [ \"table-4\", \"1337\" ],\r\n    ]\r\n\r\n    // TABLE TEXT INTERACTION\r\n    const textbox = add([\r\n      rect(width() - 300, 100, { radius: 16 }),\r\n      origin(\"center\"),\r\n      pos(center().x + 80, height() - 50),\r\n      outline(2),\r\n    ])\r\n\r\n    // TABLE TEXT INTERACTION\r\n    const txt = add([\r\n      text(\"Hi Bibe!\", { size: 16, width: width() - 300 }),\r\n      pos(textbox.pos),\r\n      origin(\"center\")\r\n    ])\r\n\r\n    // TABLE TEXT INTERACTION\r\n    const txt2 = add([\r\n      text('Press space to continue the dialog...', {size: 10, width: width() - 300}),\r\n      pos(center().x + 80, height() + 20),\r\n      origin(\"center\")\r\n    ])\r\n    \r\n    // TABLE TEXT INTERACTION\r\n    onKeyPress(\"space\", () => {\r\n      if (curDialog === 4) {\r\n        destroy(textbox)\r\n        destroy(txt)\r\n        destroy(txt2)\r\n      }\r\n      curDialog = (curDialog + 1) % dialogs.length\r\n      updateDialog()\r\n    })\r\n\r\n    // TABLE TEXT FUNCTION\r\n    function updateDialog() {\r\n      const [ char, dialog ] = dialogs[curDialog]\r\n      txt.text = dialog\r\n      txt2\r\n    }\r\n  });\r\n\r\n  // COLLIDE - FAUNE - TEST KABOOM\r\n  onCollide(\"faune\", \"kaboom\", (faune, kaboom) => {\r\n    destroy(kaboom)\r\n    faune.speed = 5\r\n  });\r\n\r\n  // COLLIDE - FAUNE - TREE \r\n  onCollide(\"faune\", \"tree\", (faune, tree) => {\r\n    tree.opacity = 0.5\r\n    wait(3, () => {\r\n      tree.opacity = 1\r\n    })\r\n  });\r\n\r\n  // COLLIDE - FAUNE - TEDDY \r\n  onCollide(\"faune\", \"teddy\", (faune, teddy) => {\r\n    npcText('OMG, SO CUTE! ♥', \"125,55,255\" , teddy)\r\n    scoreLabel.value += 10\r\n    scoreLabel.text = `SCORE: ${scoreLabel.value}`\r\n  });\r\n\r\n  // COLLIDE - FAUNE - GEMS\r\n  onCollide('faune', 'gem', (faune, gem) => {\r\n    const gemText = add([\r\n      text('+1', {size: 10, font: 'sink'}),\r\n      pos(gem.pos),\r\n    ])\r\n    updateGemQty(1),\r\n    gemLabel.value += 1,\r\n    gemLabel.text = `GEMS: ${gemLabel.value}`,\r\n    addScore(50),\r\n    scoreLabel.value += 50,\r\n    scoreLabel.text = `SCORE: ${scoreLabel.value}`,\r\n    gem.scale = 0.75,\r\n    destroy(gem)\r\n    wait(4, () => {\r\n      destroy(gemText)\r\n    })\r\n  })\r\n  \r\n  // USER INTERFACE LABELS\r\n  const scoreLabel = add([\r\n    text('SCORE: 0', { size: 5, font: \"sink\"}),\r\n    pos(width() - 200, height() - 40),\r\n    layer('ui'),\r\n    {\r\n      value: faune.score,\r\n    },\r\n    scale(2),\r\n    fixed()\r\n  ]) \r\n\r\n  add([\r\n    text(\"HEALTH\", { size: 8, font: \"sink\"}),\r\n    pos(width() - 450, height() - 35),\r\n    origin(\"center\"),\r\n    layer(\"ui\"),\r\n    fixed()\r\n  ]);\r\n\r\n  const healthHolder = add ([\r\n    rect(52,12),\r\n    pos(width() - 395, height() - 35),\r\n    color(100,100,100),\r\n    origin(\"center\"),\r\n    layer(\"ui\"),\r\n    fixed()\r\n  ]);\r\n\r\n  const healthHolderInside = add ([\r\n      rect(50,10),\r\n      pos(width() - 395, height() - 35),\r\n      color(0,0,0),\r\n      origin(\"center\"),\r\n      layer(\"ui\"),\r\n      fixed()\r\n  ]);\r\n\r\n  const healthBar = add ([\r\n      rect(50,10),\r\n      pos(width() - 420, height() - 40),\r\n      color(0,255,0),\r\n      layer(\"ui\"),\r\n      fixed()\r\n  ]);\r\n\r\n  const gemLabel = add([\r\n    text('GEMS: 0', { size: 5, font: \"sink\"}),\r\n    pos(width() - 300, height() - 40),\r\n    layer('ui'),\r\n    {\r\n      value: faune.gems,\r\n    },\r\n    scale(2),\r\n    fixed()\r\n  ]) \r\n\r\n  // UI FUNCTIONS\r\n  function updateGemQty(gem, score){\r\n    faune.gems += gem;\r\n  }\r\n\r\n  function addScore (playerScore) {\r\n    faune.score += playerScore\r\n  }\r\n\r\n  function updatePlayerHealth(healthPoints){\r\n    faune.health += healthPoints;\r\n    faune.health = Math.max(faune.health, 0);\r\n    faune.health = Math.min(faune.health, 100);\r\n\r\n    healthBar.width = 50 * (faune.health / 100);\r\n\r\n    if (faune.health < 20) healthBar.color = rgb(255,0,0);\r\n    else if (faune.health < 50) healthBar.color = rgb(255,127,0);\r\n    else healthBar.color = rgb(0,255,0);\r\n  }\r\n\r\n  // CHEST INTERACTION\r\n  onKeyPress(\"space\", () => {\r\n    let interacted = false\r\n    every(\"chest\", (c) => {\r\n      if (faune.isTouching(c)) {\r\n        if (c.opened) {\r\n          c.play(\"close\")\r\n          c.opened = false\r\n        } else {\r\n          c.play(\"open\")\r\n          c.opened = true\r\n        }\r\n        interacted = true\r\n      }\r\n    })\r\n\t})\r\n\r\n  // FAUNE ACTIONS\r\n  faune.play('idle-down')\r\n\r\n  faune.action(() => {\r\n    const left = isKeyDown('left')\r\n    const right = isKeyDown('right')\r\n    const up = isKeyDown('up')\r\n    const down = isKeyDown('down')\r\n\r\n    const speed = faune.speed\r\n    const curAnim = faune.curAnim()\r\n\r\n    if(left) \r\n    {\r\n      if (curAnim !== 'walk-side') {\r\n        faune.play('walk-side')\r\n      }\r\n  \r\n      faune.flipX(true)\r\n\r\n      faune.pos.x -= speed\r\n    }\r\n    else if (up)\r\n    {\r\n      if (curAnim !== 'walk-up') {\r\n        faune.play('walk-up')\r\n      }\r\n\r\n      faune.pos.y -= speed\r\n    }\r\n    else if (down)\r\n    {\r\n      if (curAnim !== 'walk-down') {\r\n        faune.play('walk-down')\r\n      }\r\n\r\n      faune.pos.y += speed\r\n    }\r\n    else if (right)\r\n    {\r\n      if (curAnim !== 'walk-side') {\r\n        faune.play('walk-side')\r\n      }\r\n  \r\n      faune.flipX(false)\r\n\r\n      faune.pos.x += speed\r\n    }\r\n    else\r\n    {\r\n      const direction = curAnim.split('-').pop() ?? 'down'\r\n      faune.play(`idle-${direction}`)\r\n    }\r\n  }) \r\n\r\n  createArrow('arrow-up', 'up', width() - 80, height() - 85)\r\n  createArrow('arrow-down', 'down', width() - 80, height() - 55)\r\n  createArrow('arrow-left', 'left', width() - 110, height() - 55)\r\n  createArrow('arrow-right', 'right', width() - 50, height() - 55)\r\n}\r\n\r\n// KEYBOARD ARROW ACTIONS\r\nfunction createArrow(spriteName, key, x, y) {\r\n  const arrow = add([\r\n    pos(x,y),\r\n    sprite(spriteName),\r\n    fixed(),\r\n    opacity(1),\r\n    scale(0.25)\r\n  ])\r\n\r\n  arrow.action(() => {\r\n    arrow.opacity = keyIsDown(key) ? 1 : 0.5\r\n  })\r\n}","export function npcText(t, c, p) {\r\n  const obj = add([\r\n    text(t, { size: 8, font: \"sink\", width: 100 }),\r\n    color(255,255,255),\r\n    outline(2),\r\n    pos(p.pos),\r\n  ])\r\n\r\n  wait(4, () => {\r\n    destroy(obj)\r\n  })\r\n}\r\n\r\nexport function healthText(h, c) {\r\n    const obj = add([\r\n      text(`+${h}`, { size: 8, font: \"sink\"}),\r\n      pos(width() - 360, height() - 50),\r\n      color(0,255,0),\r\n      layer('ui'),\r\n      fixed()\r\n    ])\r\n    wait(2, () => {\r\n      destroy(obj)\r\n    })\r\n}\r\n\r\nexport function tableText(m, t) {\r\n  const obj = add([\r\n    text(m, { size: 8, font: \"sink\"}),\r\n    pos(t.pos),\r\n    color(0,255,0),\r\n  ])\r\n  wait(5, () => {\r\n    destroy(obj)\r\n  })\r\n}\r\n\r\nexport function wallText(f) {\r\n  const obj = add([\r\n    text('WALL', { size: 6, font: \"sink\"}),\r\n    pos(f.pos)\r\n  ])\r\n  wait(1, () => {\r\n    destroy(obj)\r\n  })\r\n}\r\n\r\nexport function gemText(f,g) {\r\n  const obj = add([\r\n    text('YOU FOUND A GEM', { size: 6, font: \"sink\", width: 10}),\r\n    pos(f.pos),\r\n    color(255,255,255)\r\n  ])\r\n  wait(1, () => {\r\n    destroy(obj)\r\n  })\r\n}","export const maps = [\r\n  [\r\n    'hyyyyyyyyyyyyyyyyyyyyyyyyyyyyyj',\r\n    'v] 8              ]      ]    v',\r\n    'v  ,,           ]   7777      v',\r\n    'v q   ]                 8     v',\r\n    'v  k       {                  v',\r\n    'v  .     ]       ]     ]      v',\r\n    'v8  ]          ,           {  v',\r\n    'v                             v',\r\n    'v            ]      ] ]       v',\r\n    'v     ]          ]            v',\r\n    'v7                            v',\r\n    'v7           ]         ]      v',\r\n    'v7                            v',\r\n    'v7--- ^   ^^^^   ^            v',\r\n    'v                             v',\r\n    'v                             v',\r\n    'v8 ^      `           ` {{  ` v',\r\n    'v  {                          v',\r\n    'v  ]          ----        8   v',\r\n    'v       ]                    ,v',\r\n    'v                            ,v',\r\n    'v    ]               ] {     ,v',\r\n    'v     ]     ]                ,v',\r\n    'v       ]          s      ]  ,v',\r\n    'v  ] ]             v         ,v',\r\n    'v    ]   ]         v          v',\r\n    'v          ]       v    ]     v',\r\n    'v {     *yyyyyyyyyyu          v',\r\n    'v   8    {              ]     v',\r\n    'v  777                    {  lv',\r\n    'zyyyyyyyyyyyyyyyyyyyyyyyyyyyyyu',\r\n  ]\r\n]\r\n\r\nexport const mapConfig = {\r\n  width: 32,\r\n  height: 32,\r\n  '*': () =>  [sprite('fence-left-end'), area({width: 20, height: 20}), solid(), 'wall'],\r\n  'm': () =>  [sprite('fence-right-end'), area({width: 20, height: 20}), solid(), 'wall'],\r\n  's': () =>  [sprite('fence-top-end'), area({width: 20, height: 20}), solid(), 'wall'],\r\n  'h': () =>  [sprite('fence-top-left'), area({width: 20, height: 20}), solid(), 'wall'],\r\n  'j': () =>  [sprite('fence-top-right'), area({width: 20, height: 20}), solid(), 'wall'],\r\n  'v': () =>  [sprite('fence-left-connect'), solid(), area({width: 20, height: 20}), 'wall'],\r\n  'x': () =>  [sprite('fence-1'), area(), solid(), 'wall'],\r\n  'y': () =>  [sprite('fence-middle-connect'), area({width: 20, height: 20}), solid(),'wall'],\r\n  'z': () =>  [sprite('fence-bottom-left'), area({width: 20, height: 20}), solid(), 'wall'],\r\n  'u': () =>  [sprite('fence-bottom-right'), area({width: 20, height: 20}), solid(), 'wall'],\r\n  ']': () =>  [sprite('tall-grass-1'), area()],\r\n  '[': () =>  [sprite('tall-grass-2')],\r\n  '.': () =>  [sprite('flower-1')],\r\n  ',': () =>  [sprite('flower-2')],\r\n  '-': () =>  [sprite('flower-3')],\r\n  '^': () =>  [sprite('tree-1'), area({width: 20, height: 20}),origin('center'), solid(), 'wall'],\r\n  '´': () =>  [sprite('tree-2'), area({width: 20, height: 20}),origin('center'), solid(),'wall'],\r\n  '`': () =>  [sprite('tree-3'), area({width: 20, height: 20}),origin('center'), solid(), 'wall'],\r\n  '2': () =>  [sprite('tree-5'), area({width: 20, height: 20}),origin('center'), solid(),'wall'],\r\n  '{': () =>  [sprite('mushroom-1')],\r\n  '1': () =>  [sprite('grass-2')],\r\n  '8': () =>  [sprite('bucket'), area({width: 28, height: 27}),origin('center'), solid(), 'wall'],\r\n  '7': () =>  [sprite('wood-pile'), area({width: 20, height: 20}), origin('center'), solid(), 'wall'],\r\n  'q': () =>  [sprite('wood-cut'), area({width: 20, height: 20}), origin('center'), solid(), 'wall'],\r\n  'l': () =>  [sprite('teddy'), area(), 'teddy'],\r\n  'k': () =>  [sprite('pumpkin'), area({width: 10, height: 10})],\r\n\r\n  'c': () =>  [sprite('house-floor-1'), \"house-floor\"],\r\n}\r\n\r\nexport const floors = [\r\n  [\r\n\t'hyyyyyy22yyyyyyyyyyyyyyyyyyyyyj',\r\n  'v      22                     v',\r\n  'v      22                     v',\r\n  'v      22                     v',\r\n  'v      22                     v',\r\n  'v      22                     v',\r\n  'v      22                     v',\r\n  'v      22                     v',\r\n  'v      22                     v',\r\n  'v      22                     v',\r\n  'v      22                     v',\r\n  'v      22                     v',\r\n  'v      22                     v',\r\n  'v      22                     v',\r\n  '2222222222222222222222222222222',\r\n  '2222222222222222222222222222222',\r\n  'v                             v',\r\n  'v                             v',\r\n  'v                             v',\r\n  'v                             v',\r\n  'v                             v',\r\n  'v                             v',\r\n  'v                             v',\r\n  'v                             v',\r\n  'v                             v',\r\n  'v                             v',\r\n  'v                             v',\r\n  '55555555555555555555555       v',\r\n  '55555555555555555555555       v',\r\n  '55555555555555555555555       v',\r\n  '55555555555555555555555       v',\r\n  'v                             v',\r\n  'zyyyyyyyyyyyyyyyyyyyyyyyyyyyyyu',\r\n  ]\r\n]\r\n\r\nexport const floorsConfig = {\r\n\twidth:32,\r\n\theight: 32,\r\n\t\"1\": () => [\r\n\t\tsprite(\"floor-1\"),\r\n\t],\r\n  '2': () =>  [\r\n    sprite('tiles-1')\r\n  ],\r\n  '3': () =>  [\r\n    sprite('grass-1')\r\n  ],\r\n  '4': () =>  [\r\n    sprite('floor-2')\r\n  ],\r\n  '5': () =>  [\r\n    sprite('floor-3')\r\n  ],\r\n}\r\n\r\nexport const environment = [\r\n  [\r\n\t'                               ',\r\n  '     13   13                   ',\r\n  '     24   24                   ',\r\n  '        13  1313 1313          ',\r\n  '        24132424 2424          ',\r\n  '   13     24                   ',\r\n  '   24         13               ',\r\n  '              24               ',\r\n  '                    abc        ',\r\n  '                    def        ',\r\n  '                    ghi        ',\r\n  '                               ',\r\n  '              56               ',\r\n  '              78               ',\r\n  '                               ',\r\n  '                               ',\r\n  '                               ',\r\n  '                               ',\r\n  '                               ',\r\n  '                               ',\r\n  '                  13           ',\r\n  '                  2413         ',\r\n  '      13            2413       ',\r\n  '      24              24       ',\r\n  '                               ',\r\n  '  ``                    13     ',\r\n  '  ´´                    24     ',\r\n  '  ^                            ',\r\n  '                    13    13   ',\r\n  '                    24    24   ',\r\n  '                               ',\r\n  ]\r\n]\r\n\r\nexport const environmentConfig = {\r\n\twidth:32,\r\n\theight: 32,\r\n  '1': () =>  [\r\n    sprite('tree-left-top-1'), area({width: 30, height: 30}), origin('center'), \"tree\"\r\n  ],\r\n  '2': () =>  [\r\n    sprite('tree-left-bottom-1'), area({width: 30, height: 30}), origin('center'), \"tree\"\r\n  ],\r\n  '3': () =>  [\r\n    sprite('tree-right-top-1'), area({width: 30, height: 30}), origin('center'), \"tree\"\r\n  ],\r\n  '4': () =>  [\r\n    sprite('tree-right-bottom-1'), area({width: 30, height: 30}), origin('center'), \"tree\"\r\n  ],\r\n  '5': () =>  [\r\n    sprite('table-1'), \"table\"\r\n  ],\r\n  '6': () =>  [\r\n    sprite('table-2'), \"table\"\r\n  ],\r\n  '7': () =>  [\r\n    sprite('table-3'), area({width: 10, height: 10}), solid(), \"table\"\r\n  ],\r\n  '8': () =>  [\r\n    sprite('table-4'), area({width: 20, height: 10}), solid(), \"table\"\r\n  ],\r\n  'a': () =>  [\r\n    sprite('fountain-t-left'),origin('center'), area({width: 20, height: 20}), solid(), \"fountain\"\r\n  ],\r\n  'b': () =>  [\r\n    sprite('fountain-t-center'),origin('center'), area({width: 20, height: 20}), solid(), \"fountain\"\r\n  ],\r\n  'c': () =>  [\r\n    sprite('fountain-t-right'),origin('center'), area({width: 20, height: 20}), solid(), \"fountain\"\r\n  ],\r\n  'd': () =>  [\r\n    sprite('fountain-m-left'),origin('center'), area({width: 20, height: 20}), solid(), \"fountain\"\r\n  ],\r\n  'e': () =>  [\r\n    sprite('fountain-m-center'),origin('center'), area({width: 20, height: 20}), solid(), \"fountain\"\r\n  ],\r\n  'f': () =>  [\r\n    sprite('fountain-m-right'),origin('center'), area({width: 20, height: 20}), solid(), \"fountain\"\r\n  ],\r\n  'g': () =>  [\r\n    sprite('fountain-b-left'),origin('center'), area({width: 20, height: 20}), solid(), \"fountain\"\r\n  ],\r\n  'h': () =>  [\r\n    sprite('fountain-b-center'),origin('center'), area({width: 20, height:20}), solid(), \"fountain\"\r\n  ],\r\n  'i': () =>  [\r\n    sprite('fountain-b-right'),origin('center'), area({width: 20, height:20}), solid(), \"fountain\"\r\n  ],\r\n  '^': () =>  [\r\n    sprite('bag-of-greens'),origin('center'), area({width: 20, height:20}), solid()\r\n  ],\r\n  '`': () =>  [\r\n    sprite('bag-of-apples'),origin('center'), area({width: 20, height:20}), solid()\r\n  ],\r\n  '´': () =>  [\r\n    sprite('simple-box'),origin('center'), area({width: 20, height:20}), solid()\r\n  ],\r\n}\r\n\r\nexport const treasures = [\r\n  [\r\n\t'hyyyyyyyyyyyyyyyyyyyyyyyyyyyyyj',\r\n  'v                       /     v',\r\n  'v *                        9  v',\r\n  'v                             v',\r\n  'v                   4         v',\r\n  'v     3                       v',\r\n  'v                             v',\r\n  'v                             v',\r\n  'v                             v',\r\n  'v                             v',\r\n  'v                  2          v',\r\n  'v                             v',\r\n  'v                             v',\r\n  'v                             v',\r\n  'v                             v',\r\n  'v                             v',\r\n  'v                             v',\r\n  'v                             v',\r\n  'v           6                 v',\r\n  'v                             v',\r\n  'v                             v',\r\n  'v                             v',\r\n  'v                             v',\r\n  'v                             v',\r\n  'v                             v',\r\n  'v    1                    5   v',\r\n  'v                             v',\r\n  'v              7              v',\r\n  'v                             v',\r\n  'v                  8          v',\r\n  'zyyyyyyyyyyyyyyyyyyyyyyyyyyyyyu',\r\n  ]\r\n]\r\n\r\nexport const treasuresConfig = {\r\n\twidth:32,\r\n\theight: 32,\r\n  '1': () =>  [\r\n    sprite('gem-1'), area({width: 10, height: 10}), \"gem\", origin('center'), scale(0.5)\r\n  ],\r\n  '2': () =>  [\r\n    sprite('gem-2'), area({width: 10, height: 10}), \"gem\", origin('center'), scale(0.5)\r\n  ],\r\n  '3': () =>  [\r\n    sprite('gem-3'), area({width: 10, height: 10}), \"gem\", origin('center'), scale(0.5)\r\n  ],\r\n  '4': () =>  [\r\n    sprite('gem-4'), area({width: 10, height: 10}), \"gem\", origin('center'), scale(0.5)\r\n  ],\r\n  '5': () =>  [\r\n    sprite('gem-5'), area({width: 10, height: 10}), \"gem\", origin('center'), scale(0.5)\r\n  ],\r\n  '6': () =>  [\r\n    sprite('gem-6'), area({width: 10, height: 10}), \"gem\", origin('center'), scale(0.5)\r\n  ],\r\n  '7': () =>  [\r\n    sprite('gem-7'), area({width: 10, height: 10}), \"gem\", origin('center'), scale(0.5)\r\n  ],\r\n  '8': () =>  [\r\n    sprite('gem-8'), area({width: 10, height: 10}), \"gem\", origin('center'), scale(0.5)\r\n  ],\r\n  '9': () =>  [\r\n    sprite('gem-9'), area({width: 10, height: 10}), \"gem\", origin('center'), scale(0.5)\r\n  ],\r\n  '*': () =>  [\r\n    sprite('gem-10'), area({width: 10, height: 10}), \"gem\", origin('center'), scale(0.5)\r\n  ],\r\n  '/': () =>  [\r\n    sprite('chest'), area({width: 10, height: 10}), { opened: false, }, \"chest\", area(), solid(), scale(1.2)\r\n  ],\r\n}","\r\n","export function HappyEndScene() {\r\n  const firstTxt = add([\r\n    text('You found all of the gemstones!', {size: 22, font: 'sinko', width: 300}), \r\n    color(255,255,255),\r\n    origin('center'),  \r\n    pos(width() / 2, height() / 2),\r\n  ])\r\n\r\n  wait(5, () => {\r\n    destroy(firstTxt)\r\n    const secondTxt = add([\r\n      text('Na jo. Mar lehet kozben kitalaltad \"mire megy ki a jatek\" :D', {size: 22, font: 'sinko', width: 300}), \r\n      color(255,255,255),\r\n      origin('center'),  \r\n      pos(width() / 2, height() / 2),\r\n    ])\r\n    wait(5, () => {\r\n      destroy(secondTxt)\r\n    })\r\n  })\r\n\r\n  wait(8, () => {\r\n    const thirdTxt = add([\r\n      text('Mondjuk remenykedem, hogy megsem, es tenyleg meglepeteskent er ez az egesz', {size: 22, font: 'sinko', width: 300}), \r\n      color(255,255,255),\r\n      origin('center'),  \r\n      pos(width() / 2, height() / 2),\r\n    ])\r\n    wait(5, () => {\r\n      destroy(thirdTxt)\r\n    })\r\n  })\r\n\r\n  wait(12, () => {\r\n    const fourthTxt = add([\r\n      text('Meg persze akkora boldogsaggal, mint amekkora izgatottsaggal raktam ossze ezt neked...', {size: 22, font: 'sinko', width: 300}), \r\n      color(255,255,255),\r\n      origin('center'),  \r\n      pos(width() / 2, height() / 2),\r\n    ])\r\n    wait(5, () => {\r\n      destroy(fourthTxt)\r\n    })\r\n  })\r\n\r\n  wait(16, () => {\r\n    const fifthText = add([\r\n      text('Hozzam jossz felesegul? ♥', {size: 22, font: 'sinko', width: 300}), \r\n      color(255,255,255),\r\n      origin('center'),  \r\n      pos(width() / 2, height() / 2),\r\n    ])\r\n  })\r\n}"],"names":[],"version":3,"file":"index.905f6534.js.map","sourceRoot":"/__parcel_source_root/"}